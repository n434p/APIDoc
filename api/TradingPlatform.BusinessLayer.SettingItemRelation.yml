### YamlMime:ManagedReference
items:
- uid: TradingPlatform.BusinessLayer.SettingItemRelation
  commentId: T:TradingPlatform.BusinessLayer.SettingItemRelation
  id: SettingItemRelation
  parent: TradingPlatform.BusinessLayer
  children:
  - TradingPlatform.BusinessLayer.SettingItemRelation.#ctor(System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IEnumerable{System.Object}},TradingPlatform.BusinessLayer.SettingItemRelationDelegate)
  - TradingPlatform.BusinessLayer.SettingItemRelation.CheckEnabilityRelation(TradingPlatform.BusinessLayer.SettingItemRelationParameters)
  - TradingPlatform.BusinessLayer.SettingItemRelation.CheckRelation(TradingPlatform.BusinessLayer.SettingItem,TradingPlatform.BusinessLayer.SettingItem[])
  - TradingPlatform.BusinessLayer.SettingItemRelation.CheckValues(System.Collections.Generic.IDictionary{TradingPlatform.BusinessLayer.SettingItem,System.Collections.Generic.IEnumerable{System.Object}},TradingPlatform.BusinessLayer.MultipleRelationCondition)
  - TradingPlatform.BusinessLayer.SettingItemRelation.CheckVisibilityRelation(TradingPlatform.BusinessLayer.SettingItemRelationParameters)
  - TradingPlatform.BusinessLayer.SettingItemRelation.MultipleRelationCondition
  - TradingPlatform.BusinessLayer.SettingItemRelation.ParentSettingsNames
  - TradingPlatform.BusinessLayer.SettingItemRelation.relationValuesByParentItemName
  langs:
  - csharp
  - vb
  name: SettingItemRelation
  nameWithType: SettingItemRelation
  fullName: TradingPlatform.BusinessLayer.SettingItemRelation
  type: Class
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Settings/Relations/SettingItemRelation.cs
    id: SettingItemRelation
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Settings/Relations/SettingItemRelation.cs
    startLine: 8
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public class SettingItemRelation
    content.vb: Public Class SettingItemRelation
  inheritance:
  - System.Object
  derivedClasses:
  - TradingPlatform.BusinessLayer.SettingItemRelationEnability
  - TradingPlatform.BusinessLayer.SettingItemRelationVisibility
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TradingPlatform.BusinessLayer.SettingItemRelation.ParentSettingsNames
  commentId: P:TradingPlatform.BusinessLayer.SettingItemRelation.ParentSettingsNames
  id: ParentSettingsNames
  parent: TradingPlatform.BusinessLayer.SettingItemRelation
  langs:
  - csharp
  - vb
  name: ParentSettingsNames
  nameWithType: SettingItemRelation.ParentSettingsNames
  fullName: TradingPlatform.BusinessLayer.SettingItemRelation.ParentSettingsNames
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Settings/Relations/SettingItemRelation.cs
    id: ParentSettingsNames
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Settings/Relations/SettingItemRelation.cs
    startLine: 10
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public string[] ParentSettingsNames { get; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public ReadOnly Property ParentSettingsNames As String()
  overload: TradingPlatform.BusinessLayer.SettingItemRelation.ParentSettingsNames*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.SettingItemRelation.MultipleRelationCondition
  commentId: P:TradingPlatform.BusinessLayer.SettingItemRelation.MultipleRelationCondition
  id: MultipleRelationCondition
  parent: TradingPlatform.BusinessLayer.SettingItemRelation
  langs:
  - csharp
  - vb
  name: MultipleRelationCondition
  nameWithType: SettingItemRelation.MultipleRelationCondition
  fullName: TradingPlatform.BusinessLayer.SettingItemRelation.MultipleRelationCondition
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Settings/Relations/SettingItemRelation.cs
    id: MultipleRelationCondition
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Settings/Relations/SettingItemRelation.cs
    startLine: 12
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public MultipleRelationCondition MultipleRelationCondition { get; set; }
    parameters: []
    return:
      type: TradingPlatform.BusinessLayer.MultipleRelationCondition
    content.vb: Public Property MultipleRelationCondition As MultipleRelationCondition
  overload: TradingPlatform.BusinessLayer.SettingItemRelation.MultipleRelationCondition*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.SettingItemRelation.relationValuesByParentItemName
  commentId: F:TradingPlatform.BusinessLayer.SettingItemRelation.relationValuesByParentItemName
  id: relationValuesByParentItemName
  parent: TradingPlatform.BusinessLayer.SettingItemRelation
  langs:
  - csharp
  - vb
  name: relationValuesByParentItemName
  nameWithType: SettingItemRelation.relationValuesByParentItemName
  fullName: TradingPlatform.BusinessLayer.SettingItemRelation.relationValuesByParentItemName
  type: Field
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Settings/Relations/SettingItemRelation.cs
    id: relationValuesByParentItemName
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Settings/Relations/SettingItemRelation.cs
    startLine: 14
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: protected IDictionary<string, IEnumerable<object>> relationValuesByParentItemName
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IEnumerable{System.Object}}
    content.vb: Protected relationValuesByParentItemName As IDictionary(Of String, IEnumerable(Of Object))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: TradingPlatform.BusinessLayer.SettingItemRelation.#ctor(System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IEnumerable{System.Object}},TradingPlatform.BusinessLayer.SettingItemRelationDelegate)
  commentId: M:TradingPlatform.BusinessLayer.SettingItemRelation.#ctor(System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IEnumerable{System.Object}},TradingPlatform.BusinessLayer.SettingItemRelationDelegate)
  id: '#ctor(System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IEnumerable{System.Object}},TradingPlatform.BusinessLayer.SettingItemRelationDelegate)'
  parent: TradingPlatform.BusinessLayer.SettingItemRelation
  langs:
  - csharp
  - vb
  name: SettingItemRelation(IDictionary<String, IEnumerable<Object>>, SettingItemRelationDelegate)
  nameWithType: SettingItemRelation.SettingItemRelation(IDictionary<String, IEnumerable<Object>>, SettingItemRelationDelegate)
  fullName: TradingPlatform.BusinessLayer.SettingItemRelation.SettingItemRelation(System.Collections.Generic.IDictionary<System.String, System.Collections.Generic.IEnumerable<System.Object>>, TradingPlatform.BusinessLayer.SettingItemRelationDelegate)
  type: Constructor
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Settings/Relations/SettingItemRelation.cs
    id: .ctor
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Settings/Relations/SettingItemRelation.cs
    startLine: 18
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public SettingItemRelation(IDictionary<string, IEnumerable<object>> relationValuesByParentItemName, SettingItemRelationDelegate relationDelegate)
    parameters:
    - id: relationValuesByParentItemName
      type: System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IEnumerable{System.Object}}
    - id: relationDelegate
      type: TradingPlatform.BusinessLayer.SettingItemRelationDelegate
    content.vb: Public Sub New(relationValuesByParentItemName As IDictionary(Of String, IEnumerable(Of Object)), relationDelegate As SettingItemRelationDelegate)
  overload: TradingPlatform.BusinessLayer.SettingItemRelation.#ctor*
  nameWithType.vb: SettingItemRelation.SettingItemRelation(IDictionary(Of String, IEnumerable(Of Object)), SettingItemRelationDelegate)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TradingPlatform.BusinessLayer.SettingItemRelation.SettingItemRelation(System.Collections.Generic.IDictionary(Of System.String, System.Collections.Generic.IEnumerable(Of System.Object)), TradingPlatform.BusinessLayer.SettingItemRelationDelegate)
  name.vb: SettingItemRelation(IDictionary(Of String, IEnumerable(Of Object)), SettingItemRelationDelegate)
- uid: TradingPlatform.BusinessLayer.SettingItemRelation.CheckRelation(TradingPlatform.BusinessLayer.SettingItem,TradingPlatform.BusinessLayer.SettingItem[])
  commentId: M:TradingPlatform.BusinessLayer.SettingItemRelation.CheckRelation(TradingPlatform.BusinessLayer.SettingItem,TradingPlatform.BusinessLayer.SettingItem[])
  id: CheckRelation(TradingPlatform.BusinessLayer.SettingItem,TradingPlatform.BusinessLayer.SettingItem[])
  parent: TradingPlatform.BusinessLayer.SettingItemRelation
  langs:
  - csharp
  - vb
  name: CheckRelation(SettingItem, SettingItem[])
  nameWithType: SettingItemRelation.CheckRelation(SettingItem, SettingItem[])
  fullName: TradingPlatform.BusinessLayer.SettingItemRelation.CheckRelation(TradingPlatform.BusinessLayer.SettingItem, TradingPlatform.BusinessLayer.SettingItem[])
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Settings/Relations/SettingItemRelation.cs
    id: CheckRelation
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Settings/Relations/SettingItemRelation.cs
    startLine: 30
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public bool CheckRelation(SettingItem dependentItem, params SettingItem[] parentItems)
    parameters:
    - id: dependentItem
      type: TradingPlatform.BusinessLayer.SettingItem
    - id: parentItems
      type: TradingPlatform.BusinessLayer.SettingItem[]
    return:
      type: System.Boolean
    content.vb: Public Function CheckRelation(dependentItem As SettingItem, ParamArray parentItems As SettingItem()) As Boolean
  overload: TradingPlatform.BusinessLayer.SettingItemRelation.CheckRelation*
  nameWithType.vb: SettingItemRelation.CheckRelation(SettingItem, SettingItem())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TradingPlatform.BusinessLayer.SettingItemRelation.CheckRelation(TradingPlatform.BusinessLayer.SettingItem, TradingPlatform.BusinessLayer.SettingItem())
  name.vb: CheckRelation(SettingItem, SettingItem())
- uid: TradingPlatform.BusinessLayer.SettingItemRelation.CheckEnabilityRelation(TradingPlatform.BusinessLayer.SettingItemRelationParameters)
  commentId: M:TradingPlatform.BusinessLayer.SettingItemRelation.CheckEnabilityRelation(TradingPlatform.BusinessLayer.SettingItemRelationParameters)
  id: CheckEnabilityRelation(TradingPlatform.BusinessLayer.SettingItemRelationParameters)
  parent: TradingPlatform.BusinessLayer.SettingItemRelation
  langs:
  - csharp
  - vb
  name: CheckEnabilityRelation(SettingItemRelationParameters)
  nameWithType: SettingItemRelation.CheckEnabilityRelation(SettingItemRelationParameters)
  fullName: TradingPlatform.BusinessLayer.SettingItemRelation.CheckEnabilityRelation(TradingPlatform.BusinessLayer.SettingItemRelationParameters)
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Settings/Relations/SettingItemRelation.cs
    id: CheckEnabilityRelation
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Settings/Relations/SettingItemRelation.cs
    startLine: 54
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: protected static bool CheckEnabilityRelation(SettingItemRelationParameters relationParameters)
    parameters:
    - id: relationParameters
      type: TradingPlatform.BusinessLayer.SettingItemRelationParameters
    return:
      type: System.Boolean
    content.vb: Protected Shared Function CheckEnabilityRelation(relationParameters As SettingItemRelationParameters) As Boolean
  overload: TradingPlatform.BusinessLayer.SettingItemRelation.CheckEnabilityRelation*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: TradingPlatform.BusinessLayer.SettingItemRelation.CheckVisibilityRelation(TradingPlatform.BusinessLayer.SettingItemRelationParameters)
  commentId: M:TradingPlatform.BusinessLayer.SettingItemRelation.CheckVisibilityRelation(TradingPlatform.BusinessLayer.SettingItemRelationParameters)
  id: CheckVisibilityRelation(TradingPlatform.BusinessLayer.SettingItemRelationParameters)
  parent: TradingPlatform.BusinessLayer.SettingItemRelation
  langs:
  - csharp
  - vb
  name: CheckVisibilityRelation(SettingItemRelationParameters)
  nameWithType: SettingItemRelation.CheckVisibilityRelation(SettingItemRelationParameters)
  fullName: TradingPlatform.BusinessLayer.SettingItemRelation.CheckVisibilityRelation(TradingPlatform.BusinessLayer.SettingItemRelationParameters)
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Settings/Relations/SettingItemRelation.cs
    id: CheckVisibilityRelation
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Settings/Relations/SettingItemRelation.cs
    startLine: 67
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: protected static bool CheckVisibilityRelation(SettingItemRelationParameters relationParameters)
    parameters:
    - id: relationParameters
      type: TradingPlatform.BusinessLayer.SettingItemRelationParameters
    return:
      type: System.Boolean
    content.vb: Protected Shared Function CheckVisibilityRelation(relationParameters As SettingItemRelationParameters) As Boolean
  overload: TradingPlatform.BusinessLayer.SettingItemRelation.CheckVisibilityRelation*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: TradingPlatform.BusinessLayer.SettingItemRelation.CheckValues(System.Collections.Generic.IDictionary{TradingPlatform.BusinessLayer.SettingItem,System.Collections.Generic.IEnumerable{System.Object}},TradingPlatform.BusinessLayer.MultipleRelationCondition)
  commentId: M:TradingPlatform.BusinessLayer.SettingItemRelation.CheckValues(System.Collections.Generic.IDictionary{TradingPlatform.BusinessLayer.SettingItem,System.Collections.Generic.IEnumerable{System.Object}},TradingPlatform.BusinessLayer.MultipleRelationCondition)
  id: CheckValues(System.Collections.Generic.IDictionary{TradingPlatform.BusinessLayer.SettingItem,System.Collections.Generic.IEnumerable{System.Object}},TradingPlatform.BusinessLayer.MultipleRelationCondition)
  parent: TradingPlatform.BusinessLayer.SettingItemRelation
  langs:
  - csharp
  - vb
  name: CheckValues(IDictionary<SettingItem, IEnumerable<Object>>, MultipleRelationCondition)
  nameWithType: SettingItemRelation.CheckValues(IDictionary<SettingItem, IEnumerable<Object>>, MultipleRelationCondition)
  fullName: TradingPlatform.BusinessLayer.SettingItemRelation.CheckValues(System.Collections.Generic.IDictionary<TradingPlatform.BusinessLayer.SettingItem, System.Collections.Generic.IEnumerable<System.Object>>, TradingPlatform.BusinessLayer.MultipleRelationCondition)
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Settings/Relations/SettingItemRelation.cs
    id: CheckValues
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Settings/Relations/SettingItemRelation.cs
    startLine: 80
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: protected static bool CheckValues(IDictionary<SettingItem, IEnumerable<object>> relationValuesByParentItem, MultipleRelationCondition condition)
    parameters:
    - id: relationValuesByParentItem
      type: System.Collections.Generic.IDictionary{TradingPlatform.BusinessLayer.SettingItem,System.Collections.Generic.IEnumerable{System.Object}}
    - id: condition
      type: TradingPlatform.BusinessLayer.MultipleRelationCondition
    return:
      type: System.Boolean
    content.vb: Protected Shared Function CheckValues(relationValuesByParentItem As IDictionary(Of SettingItem, IEnumerable(Of Object)), condition As MultipleRelationCondition) As Boolean
  overload: TradingPlatform.BusinessLayer.SettingItemRelation.CheckValues*
  nameWithType.vb: SettingItemRelation.CheckValues(IDictionary(Of SettingItem, IEnumerable(Of Object)), MultipleRelationCondition)
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: TradingPlatform.BusinessLayer.SettingItemRelation.CheckValues(System.Collections.Generic.IDictionary(Of TradingPlatform.BusinessLayer.SettingItem, System.Collections.Generic.IEnumerable(Of System.Object)), TradingPlatform.BusinessLayer.MultipleRelationCondition)
  name.vb: CheckValues(IDictionary(Of SettingItem, IEnumerable(Of Object)), MultipleRelationCondition)
references:
- uid: TradingPlatform.BusinessLayer
  commentId: N:TradingPlatform.BusinessLayer
  name: TradingPlatform.BusinessLayer
  nameWithType: TradingPlatform.BusinessLayer
  fullName: TradingPlatform.BusinessLayer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TradingPlatform.BusinessLayer.SettingItemRelation.ParentSettingsNames*
  commentId: Overload:TradingPlatform.BusinessLayer.SettingItemRelation.ParentSettingsNames
  name: ParentSettingsNames
  nameWithType: SettingItemRelation.ParentSettingsNames
  fullName: TradingPlatform.BusinessLayer.SettingItemRelation.ParentSettingsNames
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TradingPlatform.BusinessLayer.SettingItemRelation.MultipleRelationCondition*
  commentId: Overload:TradingPlatform.BusinessLayer.SettingItemRelation.MultipleRelationCondition
  name: MultipleRelationCondition
  nameWithType: SettingItemRelation.MultipleRelationCondition
  fullName: TradingPlatform.BusinessLayer.SettingItemRelation.MultipleRelationCondition
- uid: TradingPlatform.BusinessLayer.MultipleRelationCondition
  commentId: T:TradingPlatform.BusinessLayer.MultipleRelationCondition
  parent: TradingPlatform.BusinessLayer
  name: MultipleRelationCondition
  nameWithType: MultipleRelationCondition
  fullName: TradingPlatform.BusinessLayer.MultipleRelationCondition
- uid: System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IEnumerable{System.Object}}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IEnumerable{System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, IEnumerable<Object>>
  nameWithType: IDictionary<String, IEnumerable<Object>>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Collections.Generic.IEnumerable<System.Object>>
  nameWithType.vb: IDictionary(Of String, IEnumerable(Of Object))
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Collections.Generic.IEnumerable(Of System.Object))
  name.vb: IDictionary(Of String, IEnumerable(Of Object))
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TradingPlatform.BusinessLayer.SettingItemRelation.#ctor*
  commentId: Overload:TradingPlatform.BusinessLayer.SettingItemRelation.#ctor
  name: SettingItemRelation
  nameWithType: SettingItemRelation.SettingItemRelation
  fullName: TradingPlatform.BusinessLayer.SettingItemRelation.SettingItemRelation
- uid: TradingPlatform.BusinessLayer.SettingItemRelationDelegate
  commentId: T:TradingPlatform.BusinessLayer.SettingItemRelationDelegate
  parent: TradingPlatform.BusinessLayer
  name: SettingItemRelationDelegate
  nameWithType: SettingItemRelationDelegate
  fullName: TradingPlatform.BusinessLayer.SettingItemRelationDelegate
- uid: TradingPlatform.BusinessLayer.SettingItemRelation.CheckRelation*
  commentId: Overload:TradingPlatform.BusinessLayer.SettingItemRelation.CheckRelation
  name: CheckRelation
  nameWithType: SettingItemRelation.CheckRelation
  fullName: TradingPlatform.BusinessLayer.SettingItemRelation.CheckRelation
- uid: TradingPlatform.BusinessLayer.SettingItem
  commentId: T:TradingPlatform.BusinessLayer.SettingItem
  parent: TradingPlatform.BusinessLayer
  name: SettingItem
  nameWithType: SettingItem
  fullName: TradingPlatform.BusinessLayer.SettingItem
- uid: TradingPlatform.BusinessLayer.SettingItem[]
  isExternal: true
  name: SettingItem[]
  nameWithType: SettingItem[]
  fullName: TradingPlatform.BusinessLayer.SettingItem[]
  nameWithType.vb: SettingItem()
  fullName.vb: TradingPlatform.BusinessLayer.SettingItem()
  name.vb: SettingItem()
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.SettingItem
    name: SettingItem
    nameWithType: SettingItem
    fullName: TradingPlatform.BusinessLayer.SettingItem
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.SettingItem
    name: SettingItem
    nameWithType: SettingItem
    fullName: TradingPlatform.BusinessLayer.SettingItem
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TradingPlatform.BusinessLayer.SettingItemRelation.CheckEnabilityRelation*
  commentId: Overload:TradingPlatform.BusinessLayer.SettingItemRelation.CheckEnabilityRelation
  name: CheckEnabilityRelation
  nameWithType: SettingItemRelation.CheckEnabilityRelation
  fullName: TradingPlatform.BusinessLayer.SettingItemRelation.CheckEnabilityRelation
- uid: TradingPlatform.BusinessLayer.SettingItemRelationParameters
  commentId: T:TradingPlatform.BusinessLayer.SettingItemRelationParameters
  parent: TradingPlatform.BusinessLayer
  name: SettingItemRelationParameters
  nameWithType: SettingItemRelationParameters
  fullName: TradingPlatform.BusinessLayer.SettingItemRelationParameters
- uid: TradingPlatform.BusinessLayer.SettingItemRelation.CheckVisibilityRelation*
  commentId: Overload:TradingPlatform.BusinessLayer.SettingItemRelation.CheckVisibilityRelation
  name: CheckVisibilityRelation
  nameWithType: SettingItemRelation.CheckVisibilityRelation
  fullName: TradingPlatform.BusinessLayer.SettingItemRelation.CheckVisibilityRelation
- uid: TradingPlatform.BusinessLayer.SettingItemRelation.CheckValues*
  commentId: Overload:TradingPlatform.BusinessLayer.SettingItemRelation.CheckValues
  name: CheckValues
  nameWithType: SettingItemRelation.CheckValues
  fullName: TradingPlatform.BusinessLayer.SettingItemRelation.CheckValues
- uid: System.Collections.Generic.IDictionary{TradingPlatform.BusinessLayer.SettingItem,System.Collections.Generic.IEnumerable{System.Object}}
  commentId: T:System.Collections.Generic.IDictionary{TradingPlatform.BusinessLayer.SettingItem,System.Collections.Generic.IEnumerable{System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<SettingItem, IEnumerable<Object>>
  nameWithType: IDictionary<SettingItem, IEnumerable<Object>>
  fullName: System.Collections.Generic.IDictionary<TradingPlatform.BusinessLayer.SettingItem, System.Collections.Generic.IEnumerable<System.Object>>
  nameWithType.vb: IDictionary(Of SettingItem, IEnumerable(Of Object))
  fullName.vb: System.Collections.Generic.IDictionary(Of TradingPlatform.BusinessLayer.SettingItem, System.Collections.Generic.IEnumerable(Of System.Object))
  name.vb: IDictionary(Of SettingItem, IEnumerable(Of Object))
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TradingPlatform.BusinessLayer.SettingItem
    name: SettingItem
    nameWithType: SettingItem
    fullName: TradingPlatform.BusinessLayer.SettingItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TradingPlatform.BusinessLayer.SettingItem
    name: SettingItem
    nameWithType: SettingItem
    fullName: TradingPlatform.BusinessLayer.SettingItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
