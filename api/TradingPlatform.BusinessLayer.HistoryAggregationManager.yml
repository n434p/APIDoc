### YamlMime:ManagedReference
items:
- uid: TradingPlatform.BusinessLayer.HistoryAggregationManager
  commentId: T:TradingPlatform.BusinessLayer.HistoryAggregationManager
  id: HistoryAggregationManager
  parent: TradingPlatform.BusinessLayer
  children:
  - TradingPlatform.BusinessLayer.HistoryAggregationManager.Aggregations
  - TradingPlatform.BusinessLayer.HistoryAggregationManager.CreateHistoryProcessor(TradingPlatform.BusinessLayer.HistoryRequestParameters)
  - TradingPlatform.BusinessLayer.HistoryAggregationManager.Item(System.String)
  langs:
  - csharp
  - vb
  name: HistoryAggregationManager
  nameWithType: HistoryAggregationManager
  fullName: TradingPlatform.BusinessLayer.HistoryAggregationManager
  type: Class
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/History/Aggregations/HistoryAggregationManager.cs
    id: HistoryAggregationManager
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/History/Aggregations/HistoryAggregationManager.cs
    startLine: 10
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public sealed class HistoryAggregationManager
    content.vb: Public NotInheritable Class HistoryAggregationManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: TradingPlatform.BusinessLayer.HistoryAggregationManager.Aggregations
  commentId: P:TradingPlatform.BusinessLayer.HistoryAggregationManager.Aggregations
  id: Aggregations
  parent: TradingPlatform.BusinessLayer.HistoryAggregationManager
  langs:
  - csharp
  - vb
  name: Aggregations
  nameWithType: HistoryAggregationManager.Aggregations
  fullName: TradingPlatform.BusinessLayer.HistoryAggregationManager.Aggregations
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/History/Aggregations/HistoryAggregationManager.cs
    id: Aggregations
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/History/Aggregations/HistoryAggregationManager.cs
    startLine: 12
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public HistoryAggregation[] Aggregations { get; }
    parameters: []
    return:
      type: TradingPlatform.BusinessLayer.HistoryAggregation[]
    content.vb: Public ReadOnly Property Aggregations As HistoryAggregation()
  overload: TradingPlatform.BusinessLayer.HistoryAggregationManager.Aggregations*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.HistoryAggregationManager.Item(System.String)
  commentId: P:TradingPlatform.BusinessLayer.HistoryAggregationManager.Item(System.String)
  id: Item(System.String)
  parent: TradingPlatform.BusinessLayer.HistoryAggregationManager
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: HistoryAggregationManager.Item[String]
  fullName: TradingPlatform.BusinessLayer.HistoryAggregationManager.Item[System.String]
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/History/Aggregations/HistoryAggregationManager.cs
    id: this[]
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/History/Aggregations/HistoryAggregationManager.cs
    startLine: 14
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public HistoryAggregation this[string aggregatorName] { get; }
    parameters:
    - id: aggregatorName
      type: System.String
    return:
      type: TradingPlatform.BusinessLayer.HistoryAggregation
    content.vb: Public ReadOnly Property Item(aggregatorName As String) As HistoryAggregation
  overload: TradingPlatform.BusinessLayer.HistoryAggregationManager.Item*
  nameWithType.vb: HistoryAggregationManager.Item(String)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TradingPlatform.BusinessLayer.HistoryAggregationManager.Item(System.String)
  name.vb: Item(String)
- uid: TradingPlatform.BusinessLayer.HistoryAggregationManager.CreateHistoryProcessor(TradingPlatform.BusinessLayer.HistoryRequestParameters)
  commentId: M:TradingPlatform.BusinessLayer.HistoryAggregationManager.CreateHistoryProcessor(TradingPlatform.BusinessLayer.HistoryRequestParameters)
  id: CreateHistoryProcessor(TradingPlatform.BusinessLayer.HistoryRequestParameters)
  parent: TradingPlatform.BusinessLayer.HistoryAggregationManager
  langs:
  - csharp
  - vb
  name: CreateHistoryProcessor(HistoryRequestParameters)
  nameWithType: HistoryAggregationManager.CreateHistoryProcessor(HistoryRequestParameters)
  fullName: TradingPlatform.BusinessLayer.HistoryAggregationManager.CreateHistoryProcessor(TradingPlatform.BusinessLayer.HistoryRequestParameters)
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/History/Aggregations/HistoryAggregationManager.cs
    id: CreateHistoryProcessor
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/History/Aggregations/HistoryAggregationManager.cs
    startLine: 71
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public IHistoryProcessor CreateHistoryProcessor(HistoryRequestParameters parameter)
    parameters:
    - id: parameter
      type: TradingPlatform.BusinessLayer.HistoryRequestParameters
    return:
      type: TradingPlatform.BusinessLayer.IHistoryProcessor
    content.vb: Public Function CreateHistoryProcessor(parameter As HistoryRequestParameters) As IHistoryProcessor
  overload: TradingPlatform.BusinessLayer.HistoryAggregationManager.CreateHistoryProcessor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TradingPlatform.BusinessLayer
  commentId: N:TradingPlatform.BusinessLayer
  name: TradingPlatform.BusinessLayer
  nameWithType: TradingPlatform.BusinessLayer
  fullName: TradingPlatform.BusinessLayer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TradingPlatform.BusinessLayer.HistoryAggregationManager.Aggregations*
  commentId: Overload:TradingPlatform.BusinessLayer.HistoryAggregationManager.Aggregations
  name: Aggregations
  nameWithType: HistoryAggregationManager.Aggregations
  fullName: TradingPlatform.BusinessLayer.HistoryAggregationManager.Aggregations
- uid: TradingPlatform.BusinessLayer.HistoryAggregation[]
  isExternal: true
  name: HistoryAggregation[]
  nameWithType: HistoryAggregation[]
  fullName: TradingPlatform.BusinessLayer.HistoryAggregation[]
  nameWithType.vb: HistoryAggregation()
  fullName.vb: TradingPlatform.BusinessLayer.HistoryAggregation()
  name.vb: HistoryAggregation()
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.HistoryAggregation
    name: HistoryAggregation
    nameWithType: HistoryAggregation
    fullName: TradingPlatform.BusinessLayer.HistoryAggregation
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.HistoryAggregation
    name: HistoryAggregation
    nameWithType: HistoryAggregation
    fullName: TradingPlatform.BusinessLayer.HistoryAggregation
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TradingPlatform.BusinessLayer.HistoryAggregationManager.Item*
  commentId: Overload:TradingPlatform.BusinessLayer.HistoryAggregationManager.Item
  name: Item
  nameWithType: HistoryAggregationManager.Item
  fullName: TradingPlatform.BusinessLayer.HistoryAggregationManager.Item
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TradingPlatform.BusinessLayer.HistoryAggregation
  commentId: T:TradingPlatform.BusinessLayer.HistoryAggregation
  parent: TradingPlatform.BusinessLayer
  name: HistoryAggregation
  nameWithType: HistoryAggregation
  fullName: TradingPlatform.BusinessLayer.HistoryAggregation
- uid: TradingPlatform.BusinessLayer.HistoryAggregationManager.CreateHistoryProcessor*
  commentId: Overload:TradingPlatform.BusinessLayer.HistoryAggregationManager.CreateHistoryProcessor
  name: CreateHistoryProcessor
  nameWithType: HistoryAggregationManager.CreateHistoryProcessor
  fullName: TradingPlatform.BusinessLayer.HistoryAggregationManager.CreateHistoryProcessor
- uid: TradingPlatform.BusinessLayer.HistoryRequestParameters
  commentId: T:TradingPlatform.BusinessLayer.HistoryRequestParameters
  parent: TradingPlatform.BusinessLayer
  name: HistoryRequestParameters
  nameWithType: HistoryRequestParameters
  fullName: TradingPlatform.BusinessLayer.HistoryRequestParameters
- uid: TradingPlatform.BusinessLayer.IHistoryProcessor
  commentId: T:TradingPlatform.BusinessLayer.IHistoryProcessor
  parent: TradingPlatform.BusinessLayer
  name: IHistoryProcessor
  nameWithType: IHistoryProcessor
  fullName: TradingPlatform.BusinessLayer.IHistoryProcessor
