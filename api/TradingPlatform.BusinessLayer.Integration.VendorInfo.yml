### YamlMime:ManagedReference
items:
- uid: TradingPlatform.BusinessLayer.Integration.VendorInfo
  commentId: T:TradingPlatform.BusinessLayer.Integration.VendorInfo
  id: VendorInfo
  parent: TradingPlatform.BusinessLayer.Integration
  children:
  - TradingPlatform.BusinessLayer.Integration.VendorInfo.ConnectionParameters
  - TradingPlatform.BusinessLayer.Integration.VendorInfo.MetaData
  - TradingPlatform.BusinessLayer.Integration.VendorInfo.ToString
  langs:
  - csharp
  - vb
  name: VendorInfo
  nameWithType: VendorInfo
  fullName: TradingPlatform.BusinessLayer.Integration.VendorInfo
  type: Class
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/VendorInfo.cs
    id: VendorInfo
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/VendorInfo.cs
    startLine: 9
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Integration
  syntax:
    content: public class VendorInfo
    content.vb: Public Class VendorInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TradingPlatform.BusinessLayer.Integration.VendorInfo.MetaData
  commentId: P:TradingPlatform.BusinessLayer.Integration.VendorInfo.MetaData
  id: MetaData
  parent: TradingPlatform.BusinessLayer.Integration.VendorInfo
  langs:
  - csharp
  - vb
  name: MetaData
  nameWithType: VendorInfo.MetaData
  fullName: TradingPlatform.BusinessLayer.Integration.VendorInfo.MetaData
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/VendorInfo.cs
    id: MetaData
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/VendorInfo.cs
    startLine: 11
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Integration
  syntax:
    content: public VendorMetaData MetaData { get; }
    parameters: []
    return:
      type: TradingPlatform.BusinessLayer.Integration.VendorMetaData
    content.vb: Public ReadOnly Property MetaData As VendorMetaData
  overload: TradingPlatform.BusinessLayer.Integration.VendorInfo.MetaData*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.Integration.VendorInfo.ConnectionParameters
  commentId: P:TradingPlatform.BusinessLayer.Integration.VendorInfo.ConnectionParameters
  id: ConnectionParameters
  parent: TradingPlatform.BusinessLayer.Integration.VendorInfo
  langs:
  - csharp
  - vb
  name: ConnectionParameters
  nameWithType: VendorInfo.ConnectionParameters
  fullName: TradingPlatform.BusinessLayer.Integration.VendorInfo.ConnectionParameters
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/VendorInfo.cs
    id: ConnectionParameters
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/VendorInfo.cs
    startLine: 13
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Integration
  syntax:
    content: public SettingItem[] ConnectionParameters { get; }
    parameters: []
    return:
      type: TradingPlatform.BusinessLayer.SettingItem[]
    content.vb: Public ReadOnly Property ConnectionParameters As SettingItem()
  overload: TradingPlatform.BusinessLayer.Integration.VendorInfo.ConnectionParameters*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.Integration.VendorInfo.ToString
  commentId: M:TradingPlatform.BusinessLayer.Integration.VendorInfo.ToString
  id: ToString
  parent: TradingPlatform.BusinessLayer.Integration.VendorInfo
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: VendorInfo.ToString()
  fullName: TradingPlatform.BusinessLayer.Integration.VendorInfo.ToString()
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/VendorInfo.cs
    id: ToString
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/VendorInfo.cs
    startLine: 38
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Integration
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: TradingPlatform.BusinessLayer.Integration.VendorInfo.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: TradingPlatform.BusinessLayer.Integration
  commentId: N:TradingPlatform.BusinessLayer.Integration
  name: TradingPlatform.BusinessLayer.Integration
  nameWithType: TradingPlatform.BusinessLayer.Integration
  fullName: TradingPlatform.BusinessLayer.Integration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TradingPlatform.BusinessLayer.Integration.VendorInfo.MetaData*
  commentId: Overload:TradingPlatform.BusinessLayer.Integration.VendorInfo.MetaData
  name: MetaData
  nameWithType: VendorInfo.MetaData
  fullName: TradingPlatform.BusinessLayer.Integration.VendorInfo.MetaData
- uid: TradingPlatform.BusinessLayer.Integration.VendorMetaData
  commentId: T:TradingPlatform.BusinessLayer.Integration.VendorMetaData
  parent: TradingPlatform.BusinessLayer.Integration
  name: VendorMetaData
  nameWithType: VendorMetaData
  fullName: TradingPlatform.BusinessLayer.Integration.VendorMetaData
- uid: TradingPlatform.BusinessLayer.Integration.VendorInfo.ConnectionParameters*
  commentId: Overload:TradingPlatform.BusinessLayer.Integration.VendorInfo.ConnectionParameters
  name: ConnectionParameters
  nameWithType: VendorInfo.ConnectionParameters
  fullName: TradingPlatform.BusinessLayer.Integration.VendorInfo.ConnectionParameters
- uid: TradingPlatform.BusinessLayer.SettingItem[]
  isExternal: true
  name: SettingItem[]
  nameWithType: SettingItem[]
  fullName: TradingPlatform.BusinessLayer.SettingItem[]
  nameWithType.vb: SettingItem()
  fullName.vb: TradingPlatform.BusinessLayer.SettingItem()
  name.vb: SettingItem()
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.SettingItem
    name: SettingItem
    nameWithType: SettingItem
    fullName: TradingPlatform.BusinessLayer.SettingItem
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.SettingItem
    name: SettingItem
    nameWithType: SettingItem
    fullName: TradingPlatform.BusinessLayer.SettingItem
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Integration.VendorInfo.ToString*
  commentId: Overload:TradingPlatform.BusinessLayer.Integration.VendorInfo.ToString
  name: ToString
  nameWithType: VendorInfo.ToString
  fullName: TradingPlatform.BusinessLayer.Integration.VendorInfo.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
