### YamlMime:ManagedReference
items:
- uid: TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters
  commentId: T:TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters
  id: SearchInstrumentsRequestParameters
  parent: TradingPlatform.BusinessLayer
  children:
  - TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.ExchangeIds
  - TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.FilterName
  - TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.GetCacheKey
  - TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.InstrumentTypes
  - TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.Type
  langs:
  - csharp
  - vb
  name: SearchInstrumentsRequestParameters
  nameWithType: SearchInstrumentsRequestParameters
  fullName: TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters
  type: Class
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/RequestParameters/SearchInstrumentsRequestParameters.cs
    id: SearchInstrumentsRequestParameters
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/RequestParameters/SearchInstrumentsRequestParameters.cs
    startLine: 7
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: 'public class SearchInstrumentsRequestParameters : CachedRequestParameters'
    content.vb: >-
      Public Class SearchInstrumentsRequestParameters
          Inherits CachedRequestParameters
  inheritance:
  - System.Object
  - TradingPlatform.BusinessLayer.RequestParameters
  - TradingPlatform.BusinessLayer.CachedRequestParameters
  inheritedMembers:
  - TradingPlatform.BusinessLayer.CachedRequestParameters.GetHashCodeArray(System.Int32[])
  - TradingPlatform.BusinessLayer.RequestParameters.CancellationToken
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.Type
  commentId: P:TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.Type
  id: Type
  parent: TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: SearchInstrumentsRequestParameters.Type
  fullName: TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.Type
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/RequestParameters/SearchInstrumentsRequestParameters.cs
    id: Type
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/RequestParameters/SearchInstrumentsRequestParameters.cs
    startLine: 9
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public override RequestType Type { get; }
    parameters: []
    return:
      type: TradingPlatform.BusinessLayer.RequestType
    content.vb: Public Overrides ReadOnly Property Type As RequestType
  overridden: TradingPlatform.BusinessLayer.RequestParameters.Type
  overload: TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.Type*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.FilterName
  commentId: P:TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.FilterName
  id: FilterName
  parent: TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters
  langs:
  - csharp
  - vb
  name: FilterName
  nameWithType: SearchInstrumentsRequestParameters.FilterName
  fullName: TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.FilterName
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/RequestParameters/SearchInstrumentsRequestParameters.cs
    id: FilterName
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/RequestParameters/SearchInstrumentsRequestParameters.cs
    startLine: 11
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public string FilterName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FilterName As String
  overload: TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.FilterName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.ExchangeIds
  commentId: P:TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.ExchangeIds
  id: ExchangeIds
  parent: TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters
  langs:
  - csharp
  - vb
  name: ExchangeIds
  nameWithType: SearchInstrumentsRequestParameters.ExchangeIds
  fullName: TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.ExchangeIds
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/RequestParameters/SearchInstrumentsRequestParameters.cs
    id: ExchangeIds
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/RequestParameters/SearchInstrumentsRequestParameters.cs
    startLine: 13
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public IList<int> ExchangeIds { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Int32}
    content.vb: Public Property ExchangeIds As IList(Of Integer)
  overload: TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.ExchangeIds*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.InstrumentTypes
  commentId: P:TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.InstrumentTypes
  id: InstrumentTypes
  parent: TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters
  langs:
  - csharp
  - vb
  name: InstrumentTypes
  nameWithType: SearchInstrumentsRequestParameters.InstrumentTypes
  fullName: TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.InstrumentTypes
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/RequestParameters/SearchInstrumentsRequestParameters.cs
    id: InstrumentTypes
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/RequestParameters/SearchInstrumentsRequestParameters.cs
    startLine: 15
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public IList<InstrumentType> InstrumentTypes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{TradingPlatform.BusinessLayer.InstrumentType}
    content.vb: Public Property InstrumentTypes As IList(Of InstrumentType)
  overload: TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.InstrumentTypes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.GetCacheKey
  commentId: M:TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.GetCacheKey
  id: GetCacheKey
  parent: TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters
  langs:
  - csharp
  - vb
  name: GetCacheKey()
  nameWithType: SearchInstrumentsRequestParameters.GetCacheKey()
  fullName: TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.GetCacheKey()
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/RequestParameters/SearchInstrumentsRequestParameters.cs
    id: GetCacheKey
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/RequestParameters/SearchInstrumentsRequestParameters.cs
    startLine: 17
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public override int GetCacheKey()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetCacheKey As Integer
  overridden: TradingPlatform.BusinessLayer.CachedRequestParameters.GetCacheKey
  overload: TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.GetCacheKey*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: TradingPlatform.BusinessLayer
  commentId: N:TradingPlatform.BusinessLayer
  name: TradingPlatform.BusinessLayer
  nameWithType: TradingPlatform.BusinessLayer
  fullName: TradingPlatform.BusinessLayer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TradingPlatform.BusinessLayer.RequestParameters
  commentId: T:TradingPlatform.BusinessLayer.RequestParameters
  parent: TradingPlatform.BusinessLayer
  name: RequestParameters
  nameWithType: RequestParameters
  fullName: TradingPlatform.BusinessLayer.RequestParameters
- uid: TradingPlatform.BusinessLayer.CachedRequestParameters
  commentId: T:TradingPlatform.BusinessLayer.CachedRequestParameters
  parent: TradingPlatform.BusinessLayer
  name: CachedRequestParameters
  nameWithType: CachedRequestParameters
  fullName: TradingPlatform.BusinessLayer.CachedRequestParameters
- uid: TradingPlatform.BusinessLayer.CachedRequestParameters.GetHashCodeArray(System.Int32[])
  commentId: M:TradingPlatform.BusinessLayer.CachedRequestParameters.GetHashCodeArray(System.Int32[])
  parent: TradingPlatform.BusinessLayer.CachedRequestParameters
  isExternal: true
  name: GetHashCodeArray(Int32[])
  nameWithType: CachedRequestParameters.GetHashCodeArray(Int32[])
  fullName: TradingPlatform.BusinessLayer.CachedRequestParameters.GetHashCodeArray(System.Int32[])
  nameWithType.vb: CachedRequestParameters.GetHashCodeArray(Int32())
  fullName.vb: TradingPlatform.BusinessLayer.CachedRequestParameters.GetHashCodeArray(System.Int32())
  name.vb: GetHashCodeArray(Int32())
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.CachedRequestParameters.GetHashCodeArray(System.Int32[])
    name: GetHashCodeArray
    nameWithType: CachedRequestParameters.GetHashCodeArray
    fullName: TradingPlatform.BusinessLayer.CachedRequestParameters.GetHashCodeArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.CachedRequestParameters.GetHashCodeArray(System.Int32[])
    name: GetHashCodeArray
    nameWithType: CachedRequestParameters.GetHashCodeArray
    fullName: TradingPlatform.BusinessLayer.CachedRequestParameters.GetHashCodeArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.RequestParameters.CancellationToken
  commentId: P:TradingPlatform.BusinessLayer.RequestParameters.CancellationToken
  parent: TradingPlatform.BusinessLayer.RequestParameters
  name: CancellationToken
  nameWithType: RequestParameters.CancellationToken
  fullName: TradingPlatform.BusinessLayer.RequestParameters.CancellationToken
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TradingPlatform.BusinessLayer.RequestParameters.Type
  commentId: P:TradingPlatform.BusinessLayer.RequestParameters.Type
  parent: TradingPlatform.BusinessLayer.RequestParameters
  name: Type
  nameWithType: RequestParameters.Type
  fullName: TradingPlatform.BusinessLayer.RequestParameters.Type
- uid: TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.Type*
  commentId: Overload:TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.Type
  name: Type
  nameWithType: SearchInstrumentsRequestParameters.Type
  fullName: TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.Type
- uid: TradingPlatform.BusinessLayer.RequestType
  commentId: T:TradingPlatform.BusinessLayer.RequestType
  parent: TradingPlatform.BusinessLayer
  name: RequestType
  nameWithType: RequestType
  fullName: TradingPlatform.BusinessLayer.RequestType
- uid: TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.FilterName*
  commentId: Overload:TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.FilterName
  name: FilterName
  nameWithType: SearchInstrumentsRequestParameters.FilterName
  fullName: TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.FilterName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.ExchangeIds*
  commentId: Overload:TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.ExchangeIds
  name: ExchangeIds
  nameWithType: SearchInstrumentsRequestParameters.ExchangeIds
  fullName: TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.ExchangeIds
- uid: System.Collections.Generic.IList{System.Int32}
  commentId: T:System.Collections.Generic.IList{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Int32>
  nameWithType: IList<Int32>
  fullName: System.Collections.Generic.IList<System.Int32>
  nameWithType.vb: IList(Of Int32)
  fullName.vb: System.Collections.Generic.IList(Of System.Int32)
  name.vb: IList(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.InstrumentTypes*
  commentId: Overload:TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.InstrumentTypes
  name: InstrumentTypes
  nameWithType: SearchInstrumentsRequestParameters.InstrumentTypes
  fullName: TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.InstrumentTypes
- uid: System.Collections.Generic.IList{TradingPlatform.BusinessLayer.InstrumentType}
  commentId: T:System.Collections.Generic.IList{TradingPlatform.BusinessLayer.InstrumentType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<InstrumentType>
  nameWithType: IList<InstrumentType>
  fullName: System.Collections.Generic.IList<TradingPlatform.BusinessLayer.InstrumentType>
  nameWithType.vb: IList(Of InstrumentType)
  fullName.vb: System.Collections.Generic.IList(Of TradingPlatform.BusinessLayer.InstrumentType)
  name.vb: IList(Of InstrumentType)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TradingPlatform.BusinessLayer.InstrumentType
    name: InstrumentType
    nameWithType: InstrumentType
    fullName: TradingPlatform.BusinessLayer.InstrumentType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TradingPlatform.BusinessLayer.InstrumentType
    name: InstrumentType
    nameWithType: InstrumentType
    fullName: TradingPlatform.BusinessLayer.InstrumentType
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.CachedRequestParameters.GetCacheKey
  commentId: M:TradingPlatform.BusinessLayer.CachedRequestParameters.GetCacheKey
  parent: TradingPlatform.BusinessLayer.CachedRequestParameters
  name: GetCacheKey()
  nameWithType: CachedRequestParameters.GetCacheKey()
  fullName: TradingPlatform.BusinessLayer.CachedRequestParameters.GetCacheKey()
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.CachedRequestParameters.GetCacheKey
    name: GetCacheKey
    nameWithType: CachedRequestParameters.GetCacheKey
    fullName: TradingPlatform.BusinessLayer.CachedRequestParameters.GetCacheKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.CachedRequestParameters.GetCacheKey
    name: GetCacheKey
    nameWithType: CachedRequestParameters.GetCacheKey
    fullName: TradingPlatform.BusinessLayer.CachedRequestParameters.GetCacheKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.GetCacheKey*
  commentId: Overload:TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.GetCacheKey
  name: GetCacheKey
  nameWithType: SearchInstrumentsRequestParameters.GetCacheKey
  fullName: TradingPlatform.BusinessLayer.SearchInstrumentsRequestParameters.GetCacheKey
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
