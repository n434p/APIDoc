### YamlMime:ManagedReference
items:
- uid: TradingPlatform.BusinessLayer.TradingRequestParameters
  commentId: T:TradingPlatform.BusinessLayer.TradingRequestParameters
  id: TradingRequestParameters
  parent: TradingPlatform.BusinessLayer
  children:
  - TradingPlatform.BusinessLayer.TradingRequestParameters.ConnectionId
  - TradingPlatform.BusinessLayer.TradingRequestParameters.Event
  - TradingPlatform.BusinessLayer.TradingRequestParameters.Message
  langs:
  - csharp
  - vb
  name: TradingRequestParameters
  nameWithType: TradingRequestParameters
  fullName: TradingPlatform.BusinessLayer.TradingRequestParameters
  type: Class
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/RequestParameters/Trading/TradingRequestParameters.cs
    id: TradingRequestParameters
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/RequestParameters/Trading/TradingRequestParameters.cs
    startLine: 4
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: 'public abstract class TradingRequestParameters : RequestParameters, IConnectionBindedObject, ILoggable'
    content.vb: >-
      Public MustInherit Class TradingRequestParameters
          Inherits RequestParameters
          Implements IConnectionBindedObject, ILoggable
  inheritance:
  - System.Object
  - TradingPlatform.BusinessLayer.RequestParameters
  derivedClasses:
  - TradingPlatform.BusinessLayer.CancelOrderRequestParameters
  - TradingPlatform.BusinessLayer.ClosePositionRequestParameters
  - TradingPlatform.BusinessLayer.OrderRequestParameters
  implements:
  - TradingPlatform.BusinessLayer.ILoggable
  inheritedMembers:
  - TradingPlatform.BusinessLayer.RequestParameters.Type
  - TradingPlatform.BusinessLayer.RequestParameters.CancellationToken
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: TradingPlatform.BusinessLayer.TradingRequestParameters.ConnectionId
  commentId: P:TradingPlatform.BusinessLayer.TradingRequestParameters.ConnectionId
  id: ConnectionId
  parent: TradingPlatform.BusinessLayer.TradingRequestParameters
  langs:
  - csharp
  - vb
  name: ConnectionId
  nameWithType: TradingRequestParameters.ConnectionId
  fullName: TradingPlatform.BusinessLayer.TradingRequestParameters.ConnectionId
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/RequestParameters/Trading/TradingRequestParameters.cs
    id: ConnectionId
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/RequestParameters/Trading/TradingRequestParameters.cs
    startLine: 6
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public abstract string ConnectionId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride ReadOnly Property ConnectionId As String
  overload: TradingPlatform.BusinessLayer.TradingRequestParameters.ConnectionId*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.TradingRequestParameters.Event
  commentId: P:TradingPlatform.BusinessLayer.TradingRequestParameters.Event
  id: Event
  parent: TradingPlatform.BusinessLayer.TradingRequestParameters
  langs:
  - csharp
  - vb
  name: Event
  nameWithType: TradingRequestParameters.Event
  fullName: TradingPlatform.BusinessLayer.TradingRequestParameters.Event
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/RequestParameters/Trading/TradingRequestParameters.cs
    id: Event
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/RequestParameters/Trading/TradingRequestParameters.cs
    startLine: 8
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public abstract string Event { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride ReadOnly Property Event As String
  overload: TradingPlatform.BusinessLayer.TradingRequestParameters.Event*
  implements:
  - TradingPlatform.BusinessLayer.ILoggable.Event
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.TradingRequestParameters.Message
  commentId: P:TradingPlatform.BusinessLayer.TradingRequestParameters.Message
  id: Message
  parent: TradingPlatform.BusinessLayer.TradingRequestParameters
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: TradingRequestParameters.Message
  fullName: TradingPlatform.BusinessLayer.TradingRequestParameters.Message
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/RequestParameters/Trading/TradingRequestParameters.cs
    id: Message
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/RequestParameters/Trading/TradingRequestParameters.cs
    startLine: 10
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public abstract string Message { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride ReadOnly Property Message As String
  overload: TradingPlatform.BusinessLayer.TradingRequestParameters.Message*
  implements:
  - TradingPlatform.BusinessLayer.ILoggable.Message
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
references:
- uid: TradingPlatform.BusinessLayer
  commentId: N:TradingPlatform.BusinessLayer
  name: TradingPlatform.BusinessLayer
  nameWithType: TradingPlatform.BusinessLayer
  fullName: TradingPlatform.BusinessLayer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TradingPlatform.BusinessLayer.RequestParameters
  commentId: T:TradingPlatform.BusinessLayer.RequestParameters
  parent: TradingPlatform.BusinessLayer
  name: RequestParameters
  nameWithType: RequestParameters
  fullName: TradingPlatform.BusinessLayer.RequestParameters
- uid: TradingPlatform.BusinessLayer.ILoggable
  commentId: T:TradingPlatform.BusinessLayer.ILoggable
  parent: TradingPlatform.BusinessLayer
  name: ILoggable
  nameWithType: ILoggable
  fullName: TradingPlatform.BusinessLayer.ILoggable
- uid: TradingPlatform.BusinessLayer.RequestParameters.Type
  commentId: P:TradingPlatform.BusinessLayer.RequestParameters.Type
  parent: TradingPlatform.BusinessLayer.RequestParameters
  name: Type
  nameWithType: RequestParameters.Type
  fullName: TradingPlatform.BusinessLayer.RequestParameters.Type
- uid: TradingPlatform.BusinessLayer.RequestParameters.CancellationToken
  commentId: P:TradingPlatform.BusinessLayer.RequestParameters.CancellationToken
  parent: TradingPlatform.BusinessLayer.RequestParameters
  name: CancellationToken
  nameWithType: RequestParameters.CancellationToken
  fullName: TradingPlatform.BusinessLayer.RequestParameters.CancellationToken
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TradingPlatform.BusinessLayer.TradingRequestParameters.ConnectionId*
  commentId: Overload:TradingPlatform.BusinessLayer.TradingRequestParameters.ConnectionId
  name: ConnectionId
  nameWithType: TradingRequestParameters.ConnectionId
  fullName: TradingPlatform.BusinessLayer.TradingRequestParameters.ConnectionId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TradingPlatform.BusinessLayer.TradingRequestParameters.Event*
  commentId: Overload:TradingPlatform.BusinessLayer.TradingRequestParameters.Event
  name: Event
  nameWithType: TradingRequestParameters.Event
  fullName: TradingPlatform.BusinessLayer.TradingRequestParameters.Event
- uid: TradingPlatform.BusinessLayer.ILoggable.Event
  commentId: P:TradingPlatform.BusinessLayer.ILoggable.Event
  parent: TradingPlatform.BusinessLayer.ILoggable
  name: Event
  nameWithType: ILoggable.Event
  fullName: TradingPlatform.BusinessLayer.ILoggable.Event
- uid: TradingPlatform.BusinessLayer.TradingRequestParameters.Message*
  commentId: Overload:TradingPlatform.BusinessLayer.TradingRequestParameters.Message
  name: Message
  nameWithType: TradingRequestParameters.Message
  fullName: TradingPlatform.BusinessLayer.TradingRequestParameters.Message
- uid: TradingPlatform.BusinessLayer.ILoggable.Message
  commentId: P:TradingPlatform.BusinessLayer.ILoggable.Message
  parent: TradingPlatform.BusinessLayer.ILoggable
  name: Message
  nameWithType: ILoggable.Message
  fullName: TradingPlatform.BusinessLayer.ILoggable.Message
