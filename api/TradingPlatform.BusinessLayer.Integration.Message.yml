### YamlMime:ManagedReference
items:
- uid: TradingPlatform.BusinessLayer.Integration.Message
  commentId: T:TradingPlatform.BusinessLayer.Integration.Message
  id: Message
  parent: TradingPlatform.BusinessLayer.Integration
  children:
  - TradingPlatform.BusinessLayer.Integration.Message.ToString
  - TradingPlatform.BusinessLayer.Integration.Message.Type
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: Message
  fullName: TradingPlatform.BusinessLayer.Integration.Message
  type: Class
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/Message.cs
    id: Message
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/Message.cs
    startLine: 8
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Integration
  syntax:
    content: >-
      [Serializable]

      [DataContract(Name = "Message", Namespace = "TradingPlatform")]

      [KnownType(typeof(CustomMessage))]

      [KnownType(typeof(MessageAccount))]

      [KnownType(typeof(MessageAsset))]

      [KnownType(typeof(MessageCloseOrder))]

      [KnownType(typeof(MessageClosePosition))]

      [KnownType(typeof(MessageExchange))]

      [KnownType(typeof(MessageInstrument))]

      [KnownType(typeof(MessageInstrumentTypes))]

      [KnownType(typeof(MessageOpenOrder))]

      [KnownType(typeof(MessageOpenPosition))]

      [KnownType(typeof(MessageReportType))]

      [KnownType(typeof(MessageTrade))]

      [KnownType(typeof(MessageQuote))]

      [KnownType(typeof(MessageDealTicket))]

      [KnownType(typeof(MessageRule))]

      [KnownType(typeof(MessageOrderHistory))]

      public abstract class Message
    content.vb: >-
      <Serializable>

      <DataContract(Name:="Message", Namespace:="TradingPlatform")>

      <KnownType(GetType(CustomMessage))>

      <KnownType(GetType(MessageAccount))>

      <KnownType(GetType(MessageAsset))>

      <KnownType(GetType(MessageCloseOrder))>

      <KnownType(GetType(MessageClosePosition))>

      <KnownType(GetType(MessageExchange))>

      <KnownType(GetType(MessageInstrument))>

      <KnownType(GetType(MessageInstrumentTypes))>

      <KnownType(GetType(MessageOpenOrder))>

      <KnownType(GetType(MessageOpenPosition))>

      <KnownType(GetType(MessageReportType))>

      <KnownType(GetType(MessageTrade))>

      <KnownType(GetType(MessageQuote))>

      <KnownType(GetType(MessageDealTicket))>

      <KnownType(GetType(MessageRule))>

      <KnownType(GetType(MessageOrderHistory))>

      Public MustInherit Class Message
  inheritance:
  - System.Object
  derivedClasses:
  - TradingPlatform.BusinessLayer.Integration.CustomMessage
  - TradingPlatform.BusinessLayer.Integration.MessageAccount
  - TradingPlatform.BusinessLayer.Integration.MessageAsset
  - TradingPlatform.BusinessLayer.Integration.MessageCloseOrder
  - TradingPlatform.BusinessLayer.Integration.MessageClosePosition
  - TradingPlatform.BusinessLayer.Integration.MessageDealTicket
  - TradingPlatform.BusinessLayer.Integration.MessageExchange
  - TradingPlatform.BusinessLayer.Integration.MessageInstrument
  - TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup
  - TradingPlatform.BusinessLayer.Integration.MessageInstrumentTypes
  - TradingPlatform.BusinessLayer.Integration.MessageOpenOrder
  - TradingPlatform.BusinessLayer.Integration.MessageOpenPosition
  - TradingPlatform.BusinessLayer.Integration.MessageReportType
  - TradingPlatform.BusinessLayer.Integration.MessageRule
  - TradingPlatform.BusinessLayer.Integration.MessageTrade
  - TradingPlatform.BusinessLayer.MessageQuote
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Message
    - name: Namespace
      type: System.String
      value: TradingPlatform
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: TradingPlatform.BusinessLayer.Integration.CustomMessage
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: TradingPlatform.BusinessLayer.Integration.MessageAccount
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: TradingPlatform.BusinessLayer.Integration.MessageAsset
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: TradingPlatform.BusinessLayer.Integration.MessageCloseOrder
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: TradingPlatform.BusinessLayer.Integration.MessageClosePosition
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: TradingPlatform.BusinessLayer.Integration.MessageExchange
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: TradingPlatform.BusinessLayer.Integration.MessageInstrument
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: TradingPlatform.BusinessLayer.Integration.MessageInstrumentTypes
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: TradingPlatform.BusinessLayer.Integration.MessageOpenPosition
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: TradingPlatform.BusinessLayer.Integration.MessageReportType
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: TradingPlatform.BusinessLayer.Integration.MessageTrade
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: TradingPlatform.BusinessLayer.MessageQuote
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: TradingPlatform.BusinessLayer.Integration.MessageDealTicket
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: TradingPlatform.BusinessLayer.Integration.MessageRule
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: TradingPlatform.BusinessLayer.Integration.MessageOrderHistory
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: TradingPlatform.BusinessLayer.Integration.Message.Type
  commentId: P:TradingPlatform.BusinessLayer.Integration.Message.Type
  id: Type
  parent: TradingPlatform.BusinessLayer.Integration.Message
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Message.Type
  fullName: TradingPlatform.BusinessLayer.Integration.Message.Type
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/Message.cs
    id: Type
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/Message.cs
    startLine: 28
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Integration
  syntax:
    content: public abstract MessageType Type { get; }
    parameters: []
    return:
      type: TradingPlatform.BusinessLayer.Integration.MessageType
    content.vb: Public MustOverride ReadOnly Property Type As MessageType
  overload: TradingPlatform.BusinessLayer.Integration.Message.Type*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.Integration.Message.ToString
  commentId: M:TradingPlatform.BusinessLayer.Integration.Message.ToString
  id: ToString
  parent: TradingPlatform.BusinessLayer.Integration.Message
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Message.ToString()
  fullName: TradingPlatform.BusinessLayer.Integration.Message.ToString()
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/Message.cs
    id: ToString
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/Message.cs
    startLine: 30
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Integration
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: TradingPlatform.BusinessLayer.Integration.Message.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: TradingPlatform.BusinessLayer.Integration
  commentId: N:TradingPlatform.BusinessLayer.Integration
  name: TradingPlatform.BusinessLayer.Integration
  nameWithType: TradingPlatform.BusinessLayer.Integration
  fullName: TradingPlatform.BusinessLayer.Integration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TradingPlatform.BusinessLayer.Integration.Message.Type*
  commentId: Overload:TradingPlatform.BusinessLayer.Integration.Message.Type
  name: Type
  nameWithType: Message.Type
  fullName: TradingPlatform.BusinessLayer.Integration.Message.Type
- uid: TradingPlatform.BusinessLayer.Integration.MessageType
  commentId: T:TradingPlatform.BusinessLayer.Integration.MessageType
  parent: TradingPlatform.BusinessLayer.Integration
  name: MessageType
  nameWithType: MessageType
  fullName: TradingPlatform.BusinessLayer.Integration.MessageType
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Integration.Message.ToString*
  commentId: Overload:TradingPlatform.BusinessLayer.Integration.Message.ToString
  name: ToString
  nameWithType: Message.ToString
  fullName: TradingPlatform.BusinessLayer.Integration.Message.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
