### YamlMime:ManagedReference
items:
- uid: TradingPlatform.BusinessLayer.NettingType
  commentId: T:TradingPlatform.BusinessLayer.NettingType
  id: NettingType
  parent: TradingPlatform.BusinessLayer
  children:
  - TradingPlatform.BusinessLayer.NettingType.MultyPerSide
  - TradingPlatform.BusinessLayer.NettingType.MultyPosition
  - TradingPlatform.BusinessLayer.NettingType.OnePosition
  - TradingPlatform.BusinessLayer.NettingType.Undefined
  langs:
  - csharp
  - vb
  name: NettingType
  nameWithType: NettingType
  fullName: TradingPlatform.BusinessLayer.NettingType
  type: Enum
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/BusinessObjectsEnums.cs
    id: NettingType
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/BusinessObjectsEnums.cs
    startLine: 135
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: >-
      [DataContract(Name = "NettingType", Namespace = "TradingPlatform")]

      public enum NettingType
    content.vb: >-
      <DataContract(Name:="NettingType", Namespace:="TradingPlatform")>

      Public Enum NettingType
  extensionMethods:
  - System.Enum.TradingPlatform.BusinessLayer.Extensions.GetDescription
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: NettingType
    - name: Namespace
      type: System.String
      value: TradingPlatform
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: TradingPlatform.BusinessLayer.NettingType.MultyPosition
  commentId: F:TradingPlatform.BusinessLayer.NettingType.MultyPosition
  id: MultyPosition
  parent: TradingPlatform.BusinessLayer.NettingType
  langs:
  - csharp
  - vb
  name: MultyPosition
  nameWithType: NettingType.MultyPosition
  fullName: TradingPlatform.BusinessLayer.NettingType.MultyPosition
  type: Field
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/BusinessObjectsEnums.cs
    id: MultyPosition
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/BusinessObjectsEnums.cs
    startLine: 138
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: >-
      [EnumMember]

      MultyPosition = 0
    return:
      type: TradingPlatform.BusinessLayer.NettingType
    content.vb: >-
      <EnumMember>

      MultyPosition = 0
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: TradingPlatform.BusinessLayer.NettingType.MultyPerSide
  commentId: F:TradingPlatform.BusinessLayer.NettingType.MultyPerSide
  id: MultyPerSide
  parent: TradingPlatform.BusinessLayer.NettingType
  langs:
  - csharp
  - vb
  name: MultyPerSide
  nameWithType: NettingType.MultyPerSide
  fullName: TradingPlatform.BusinessLayer.NettingType.MultyPerSide
  type: Field
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/BusinessObjectsEnums.cs
    id: MultyPerSide
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/BusinessObjectsEnums.cs
    startLine: 141
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: >-
      [EnumMember]

      MultyPerSide = 1
    return:
      type: TradingPlatform.BusinessLayer.NettingType
    content.vb: >-
      <EnumMember>

      MultyPerSide = 1
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: TradingPlatform.BusinessLayer.NettingType.OnePosition
  commentId: F:TradingPlatform.BusinessLayer.NettingType.OnePosition
  id: OnePosition
  parent: TradingPlatform.BusinessLayer.NettingType
  langs:
  - csharp
  - vb
  name: OnePosition
  nameWithType: NettingType.OnePosition
  fullName: TradingPlatform.BusinessLayer.NettingType.OnePosition
  type: Field
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/BusinessObjectsEnums.cs
    id: OnePosition
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/BusinessObjectsEnums.cs
    startLine: 144
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: >-
      [EnumMember]

      OnePosition = 2
    return:
      type: TradingPlatform.BusinessLayer.NettingType
    content.vb: >-
      <EnumMember>

      OnePosition = 2
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: TradingPlatform.BusinessLayer.NettingType.Undefined
  commentId: F:TradingPlatform.BusinessLayer.NettingType.Undefined
  id: Undefined
  parent: TradingPlatform.BusinessLayer.NettingType
  langs:
  - csharp
  - vb
  name: Undefined
  nameWithType: NettingType.Undefined
  fullName: TradingPlatform.BusinessLayer.NettingType.Undefined
  type: Field
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/BusinessObjectsEnums.cs
    id: Undefined
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/BusinessObjectsEnums.cs
    startLine: 147
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: >-
      [EnumMember]

      Undefined = 3
    return:
      type: TradingPlatform.BusinessLayer.NettingType
    content.vb: >-
      <EnumMember>

      Undefined = 3
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: TradingPlatform.BusinessLayer
  commentId: N:TradingPlatform.BusinessLayer
  name: TradingPlatform.BusinessLayer
  nameWithType: TradingPlatform.BusinessLayer
  fullName: TradingPlatform.BusinessLayer
- uid: System.Enum.TradingPlatform.BusinessLayer.Extensions.GetDescription
  commentId: M:TradingPlatform.BusinessLayer.Extensions.GetDescription(System.Enum)
  parent: TradingPlatform.BusinessLayer.Extensions
  definition: TradingPlatform.BusinessLayer.Extensions.GetDescription(System.Enum)
  name: GetDescription()
  nameWithType: Extensions.GetDescription()
  fullName: TradingPlatform.BusinessLayer.Extensions.GetDescription()
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Extensions.GetDescription
    name: GetDescription
    nameWithType: Extensions.GetDescription
    fullName: TradingPlatform.BusinessLayer.Extensions.GetDescription
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Extensions.GetDescription
    name: GetDescription
    nameWithType: Extensions.GetDescription
    fullName: TradingPlatform.BusinessLayer.Extensions.GetDescription
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Extensions.GetDescription(System.Enum)
  commentId: M:TradingPlatform.BusinessLayer.Extensions.GetDescription(System.Enum)
  isExternal: true
  name: GetDescription(Enum)
  nameWithType: Extensions.GetDescription(Enum)
  fullName: TradingPlatform.BusinessLayer.Extensions.GetDescription(System.Enum)
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Extensions.GetDescription(System.Enum)
    name: GetDescription
    nameWithType: Extensions.GetDescription
    fullName: TradingPlatform.BusinessLayer.Extensions.GetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Enum
    name: Enum
    nameWithType: Enum
    fullName: System.Enum
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Extensions.GetDescription(System.Enum)
    name: GetDescription
    nameWithType: Extensions.GetDescription
    fullName: TradingPlatform.BusinessLayer.Extensions.GetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Enum
    name: Enum
    nameWithType: Enum
    fullName: System.Enum
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Extensions
  commentId: T:TradingPlatform.BusinessLayer.Extensions
  parent: TradingPlatform.BusinessLayer
  name: Extensions
  nameWithType: Extensions
  fullName: TradingPlatform.BusinessLayer.Extensions
- uid: TradingPlatform.BusinessLayer.NettingType
  commentId: T:TradingPlatform.BusinessLayer.NettingType
  parent: TradingPlatform.BusinessLayer
  name: NettingType
  nameWithType: NettingType
  fullName: TradingPlatform.BusinessLayer.NettingType
