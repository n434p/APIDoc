### YamlMime:ManagedReference
items:
- uid: TradingPlatform.BusinessLayer.ConnectionInfo
  commentId: T:TradingPlatform.BusinessLayer.ConnectionInfo
  id: ConnectionInfo
  parent: TradingPlatform.BusinessLayer
  children:
  - TradingPlatform.BusinessLayer.ConnectionInfo.#ctor(System.String)
  - TradingPlatform.BusinessLayer.ConnectionInfo.#ctor(System.String,System.String)
  - TradingPlatform.BusinessLayer.ConnectionInfo.ConnectionId
  - TradingPlatform.BusinessLayer.ConnectionInfo.ConnectionState
  - TradingPlatform.BusinessLayer.ConnectionInfo.IsCustom
  - TradingPlatform.BusinessLayer.ConnectionInfo.IsFavourite
  - TradingPlatform.BusinessLayer.ConnectionInfo.Name
  - TradingPlatform.BusinessLayer.ConnectionInfo.Settings
  - TradingPlatform.BusinessLayer.ConnectionInfo.ToString
  - TradingPlatform.BusinessLayer.ConnectionInfo.VendorName
  - TradingPlatform.BusinessLayer.ConnectionInfo.VendorSettings
  langs:
  - csharp
  - vb
  name: ConnectionInfo
  nameWithType: ConnectionInfo
  fullName: TradingPlatform.BusinessLayer.ConnectionInfo
  type: Class
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Connection/ConnectionInfo.cs
    id: ConnectionInfo
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Connection/ConnectionInfo.cs
    startLine: 9
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: 'public class ConnectionInfo : ICustomizable'
    content.vb: >-
      Public Class ConnectionInfo
          Implements ICustomizable
  inheritance:
  - System.Object
  implements:
  - TradingPlatform.BusinessLayer.ICustomizable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TradingPlatform.BusinessLayer.ConnectionInfo.Name
  commentId: P:TradingPlatform.BusinessLayer.ConnectionInfo.Name
  id: Name
  parent: TradingPlatform.BusinessLayer.ConnectionInfo
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ConnectionInfo.Name
  fullName: TradingPlatform.BusinessLayer.ConnectionInfo.Name
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Connection/ConnectionInfo.cs
    id: Name
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Connection/ConnectionInfo.cs
    startLine: 11
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: TradingPlatform.BusinessLayer.ConnectionInfo.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.ConnectionInfo.VendorName
  commentId: P:TradingPlatform.BusinessLayer.ConnectionInfo.VendorName
  id: VendorName
  parent: TradingPlatform.BusinessLayer.ConnectionInfo
  langs:
  - csharp
  - vb
  name: VendorName
  nameWithType: ConnectionInfo.VendorName
  fullName: TradingPlatform.BusinessLayer.ConnectionInfo.VendorName
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Connection/ConnectionInfo.cs
    id: VendorName
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Connection/ConnectionInfo.cs
    startLine: 13
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public string VendorName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property VendorName As String
  overload: TradingPlatform.BusinessLayer.ConnectionInfo.VendorName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.ConnectionInfo.ConnectionId
  commentId: P:TradingPlatform.BusinessLayer.ConnectionInfo.ConnectionId
  id: ConnectionId
  parent: TradingPlatform.BusinessLayer.ConnectionInfo
  langs:
  - csharp
  - vb
  name: ConnectionId
  nameWithType: ConnectionInfo.ConnectionId
  fullName: TradingPlatform.BusinessLayer.ConnectionInfo.ConnectionId
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Connection/ConnectionInfo.cs
    id: ConnectionId
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Connection/ConnectionInfo.cs
    startLine: 44
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public string ConnectionId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ConnectionId As String
  overload: TradingPlatform.BusinessLayer.ConnectionInfo.ConnectionId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.ConnectionInfo.IsFavourite
  commentId: P:TradingPlatform.BusinessLayer.ConnectionInfo.IsFavourite
  id: IsFavourite
  parent: TradingPlatform.BusinessLayer.ConnectionInfo
  langs:
  - csharp
  - vb
  name: IsFavourite
  nameWithType: ConnectionInfo.IsFavourite
  fullName: TradingPlatform.BusinessLayer.ConnectionInfo.IsFavourite
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Connection/ConnectionInfo.cs
    id: IsFavourite
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Connection/ConnectionInfo.cs
    startLine: 46
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public bool IsFavourite { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsFavourite As Boolean
  overload: TradingPlatform.BusinessLayer.ConnectionInfo.IsFavourite*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.ConnectionInfo.ConnectionState
  commentId: P:TradingPlatform.BusinessLayer.ConnectionInfo.ConnectionState
  id: ConnectionState
  parent: TradingPlatform.BusinessLayer.ConnectionInfo
  langs:
  - csharp
  - vb
  name: ConnectionState
  nameWithType: ConnectionInfo.ConnectionState
  fullName: TradingPlatform.BusinessLayer.ConnectionInfo.ConnectionState
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Connection/ConnectionInfo.cs
    id: ConnectionState
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Connection/ConnectionInfo.cs
    startLine: 48
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public ConnectionState ConnectionState { get; }
    parameters: []
    return:
      type: TradingPlatform.BusinessLayer.ConnectionState
    content.vb: Public ReadOnly Property ConnectionState As ConnectionState
  overload: TradingPlatform.BusinessLayer.ConnectionInfo.ConnectionState*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.ConnectionInfo.VendorSettings
  commentId: P:TradingPlatform.BusinessLayer.ConnectionInfo.VendorSettings
  id: VendorSettings
  parent: TradingPlatform.BusinessLayer.ConnectionInfo
  langs:
  - csharp
  - vb
  name: VendorSettings
  nameWithType: ConnectionInfo.VendorSettings
  fullName: TradingPlatform.BusinessLayer.ConnectionInfo.VendorSettings
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Connection/ConnectionInfo.cs
    id: VendorSettings
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Connection/ConnectionInfo.cs
    startLine: 50
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public IList<SettingItem> VendorSettings { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{TradingPlatform.BusinessLayer.SettingItem}
    content.vb: Public ReadOnly Property VendorSettings As IList(Of SettingItem)
  overload: TradingPlatform.BusinessLayer.ConnectionInfo.VendorSettings*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.ConnectionInfo.IsCustom
  commentId: P:TradingPlatform.BusinessLayer.ConnectionInfo.IsCustom
  id: IsCustom
  parent: TradingPlatform.BusinessLayer.ConnectionInfo
  langs:
  - csharp
  - vb
  name: IsCustom
  nameWithType: ConnectionInfo.IsCustom
  fullName: TradingPlatform.BusinessLayer.ConnectionInfo.IsCustom
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Connection/ConnectionInfo.cs
    id: IsCustom
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Connection/ConnectionInfo.cs
    startLine: 53
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public bool IsCustom { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsCustom As Boolean
  overload: TradingPlatform.BusinessLayer.ConnectionInfo.IsCustom*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.ConnectionInfo.Settings
  commentId: P:TradingPlatform.BusinessLayer.ConnectionInfo.Settings
  id: Settings
  parent: TradingPlatform.BusinessLayer.ConnectionInfo
  langs:
  - csharp
  - vb
  name: Settings
  nameWithType: ConnectionInfo.Settings
  fullName: TradingPlatform.BusinessLayer.ConnectionInfo.Settings
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Connection/ConnectionInfo.cs
    id: Settings
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Connection/ConnectionInfo.cs
    startLine: 56
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public IList<SettingItem> Settings { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{TradingPlatform.BusinessLayer.SettingItem}
    content.vb: Public Property Settings As IList(Of SettingItem)
  overload: TradingPlatform.BusinessLayer.ConnectionInfo.Settings*
  implements:
  - TradingPlatform.BusinessLayer.ICustomizable.Settings
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.ConnectionInfo.#ctor(System.String)
  commentId: M:TradingPlatform.BusinessLayer.ConnectionInfo.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: TradingPlatform.BusinessLayer.ConnectionInfo
  langs:
  - csharp
  - vb
  name: ConnectionInfo(String)
  nameWithType: ConnectionInfo.ConnectionInfo(String)
  fullName: TradingPlatform.BusinessLayer.ConnectionInfo.ConnectionInfo(System.String)
  type: Constructor
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Connection/ConnectionInfo.cs
    id: .ctor
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Connection/ConnectionInfo.cs
    startLine: 122
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public ConnectionInfo(string name)
    parameters:
    - id: name
      type: System.String
    content.vb: Public Sub New(name As String)
  overload: TradingPlatform.BusinessLayer.ConnectionInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.ConnectionInfo.#ctor(System.String,System.String)
  commentId: M:TradingPlatform.BusinessLayer.ConnectionInfo.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: TradingPlatform.BusinessLayer.ConnectionInfo
  langs:
  - csharp
  - vb
  name: ConnectionInfo(String, String)
  nameWithType: ConnectionInfo.ConnectionInfo(String, String)
  fullName: TradingPlatform.BusinessLayer.ConnectionInfo.ConnectionInfo(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Connection/ConnectionInfo.cs
    id: .ctor
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Connection/ConnectionInfo.cs
    startLine: 131
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public ConnectionInfo(string name, string vendorName)
    parameters:
    - id: name
      type: System.String
    - id: vendorName
      type: System.String
    content.vb: Public Sub New(name As String, vendorName As String)
  overload: TradingPlatform.BusinessLayer.ConnectionInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.ConnectionInfo.ToString
  commentId: M:TradingPlatform.BusinessLayer.ConnectionInfo.ToString
  id: ToString
  parent: TradingPlatform.BusinessLayer.ConnectionInfo
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ConnectionInfo.ToString()
  fullName: TradingPlatform.BusinessLayer.ConnectionInfo.ToString()
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Connection/ConnectionInfo.cs
    id: ToString
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Connection/ConnectionInfo.cs
    startLine: 137
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: TradingPlatform.BusinessLayer.ConnectionInfo.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: TradingPlatform.BusinessLayer
  commentId: N:TradingPlatform.BusinessLayer
  name: TradingPlatform.BusinessLayer
  nameWithType: TradingPlatform.BusinessLayer
  fullName: TradingPlatform.BusinessLayer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TradingPlatform.BusinessLayer.ICustomizable
  commentId: T:TradingPlatform.BusinessLayer.ICustomizable
  parent: TradingPlatform.BusinessLayer
  name: ICustomizable
  nameWithType: ICustomizable
  fullName: TradingPlatform.BusinessLayer.ICustomizable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TradingPlatform.BusinessLayer.ConnectionInfo.Name*
  commentId: Overload:TradingPlatform.BusinessLayer.ConnectionInfo.Name
  name: Name
  nameWithType: ConnectionInfo.Name
  fullName: TradingPlatform.BusinessLayer.ConnectionInfo.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TradingPlatform.BusinessLayer.ConnectionInfo.VendorName*
  commentId: Overload:TradingPlatform.BusinessLayer.ConnectionInfo.VendorName
  name: VendorName
  nameWithType: ConnectionInfo.VendorName
  fullName: TradingPlatform.BusinessLayer.ConnectionInfo.VendorName
- uid: TradingPlatform.BusinessLayer.ConnectionInfo.ConnectionId*
  commentId: Overload:TradingPlatform.BusinessLayer.ConnectionInfo.ConnectionId
  name: ConnectionId
  nameWithType: ConnectionInfo.ConnectionId
  fullName: TradingPlatform.BusinessLayer.ConnectionInfo.ConnectionId
- uid: TradingPlatform.BusinessLayer.ConnectionInfo.IsFavourite*
  commentId: Overload:TradingPlatform.BusinessLayer.ConnectionInfo.IsFavourite
  name: IsFavourite
  nameWithType: ConnectionInfo.IsFavourite
  fullName: TradingPlatform.BusinessLayer.ConnectionInfo.IsFavourite
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TradingPlatform.BusinessLayer.ConnectionInfo.ConnectionState*
  commentId: Overload:TradingPlatform.BusinessLayer.ConnectionInfo.ConnectionState
  name: ConnectionState
  nameWithType: ConnectionInfo.ConnectionState
  fullName: TradingPlatform.BusinessLayer.ConnectionInfo.ConnectionState
- uid: TradingPlatform.BusinessLayer.ConnectionState
  commentId: T:TradingPlatform.BusinessLayer.ConnectionState
  parent: TradingPlatform.BusinessLayer
  name: ConnectionState
  nameWithType: ConnectionState
  fullName: TradingPlatform.BusinessLayer.ConnectionState
- uid: TradingPlatform.BusinessLayer.ConnectionInfo.VendorSettings*
  commentId: Overload:TradingPlatform.BusinessLayer.ConnectionInfo.VendorSettings
  name: VendorSettings
  nameWithType: ConnectionInfo.VendorSettings
  fullName: TradingPlatform.BusinessLayer.ConnectionInfo.VendorSettings
- uid: System.Collections.Generic.IList{TradingPlatform.BusinessLayer.SettingItem}
  commentId: T:System.Collections.Generic.IList{TradingPlatform.BusinessLayer.SettingItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<SettingItem>
  nameWithType: IList<SettingItem>
  fullName: System.Collections.Generic.IList<TradingPlatform.BusinessLayer.SettingItem>
  nameWithType.vb: IList(Of SettingItem)
  fullName.vb: System.Collections.Generic.IList(Of TradingPlatform.BusinessLayer.SettingItem)
  name.vb: IList(Of SettingItem)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TradingPlatform.BusinessLayer.SettingItem
    name: SettingItem
    nameWithType: SettingItem
    fullName: TradingPlatform.BusinessLayer.SettingItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TradingPlatform.BusinessLayer.SettingItem
    name: SettingItem
    nameWithType: SettingItem
    fullName: TradingPlatform.BusinessLayer.SettingItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TradingPlatform.BusinessLayer.ConnectionInfo.IsCustom*
  commentId: Overload:TradingPlatform.BusinessLayer.ConnectionInfo.IsCustom
  name: IsCustom
  nameWithType: ConnectionInfo.IsCustom
  fullName: TradingPlatform.BusinessLayer.ConnectionInfo.IsCustom
- uid: TradingPlatform.BusinessLayer.ConnectionInfo.Settings*
  commentId: Overload:TradingPlatform.BusinessLayer.ConnectionInfo.Settings
  name: Settings
  nameWithType: ConnectionInfo.Settings
  fullName: TradingPlatform.BusinessLayer.ConnectionInfo.Settings
- uid: TradingPlatform.BusinessLayer.ICustomizable.Settings
  commentId: P:TradingPlatform.BusinessLayer.ICustomizable.Settings
  parent: TradingPlatform.BusinessLayer.ICustomizable
  name: Settings
  nameWithType: ICustomizable.Settings
  fullName: TradingPlatform.BusinessLayer.ICustomizable.Settings
- uid: TradingPlatform.BusinessLayer.ConnectionInfo.#ctor*
  commentId: Overload:TradingPlatform.BusinessLayer.ConnectionInfo.#ctor
  name: ConnectionInfo
  nameWithType: ConnectionInfo.ConnectionInfo
  fullName: TradingPlatform.BusinessLayer.ConnectionInfo.ConnectionInfo
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.ConnectionInfo.ToString*
  commentId: Overload:TradingPlatform.BusinessLayer.ConnectionInfo.ToString
  name: ToString
  nameWithType: ConnectionInfo.ToString
  fullName: TradingPlatform.BusinessLayer.ConnectionInfo.ToString
