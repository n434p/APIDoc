### YamlMime:ManagedReference
items:
- uid: TradingPlatform.BusinessLayer.Exchange
  commentId: T:TradingPlatform.BusinessLayer.Exchange
  id: Exchange
  parent: TradingPlatform.BusinessLayer
  children:
  - TradingPlatform.BusinessLayer.Exchange.CompareTo(System.Object)
  - TradingPlatform.BusinessLayer.Exchange.ExchangeName
  - TradingPlatform.BusinessLayer.Exchange.GetMessage
  - TradingPlatform.BusinessLayer.Exchange.Id
  - TradingPlatform.BusinessLayer.Exchange.SortIndex
  langs:
  - csharp
  - vb
  name: Exchange
  nameWithType: Exchange
  fullName: TradingPlatform.BusinessLayer.Exchange
  type: Class
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Exchange.cs
    id: Exchange
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Exchange.cs
    startLine: 9
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: >-
      [DataContract(Name = "Exchange", Namespace = "TradingPlatform")]

      public class Exchange : BusinessObject, IConnectionBindedObject, IUniqueID, IComparable
    content.vb: >-
      <DataContract(Name:="Exchange", Namespace:="TradingPlatform")>

      Public Class Exchange
          Inherits BusinessObject
          Implements IConnectionBindedObject, IUniqueID, IComparable
  inheritance:
  - System.Object
  - TradingPlatform.BusinessLayer.BusinessObject
  implements:
  - TradingPlatform.BusinessLayer.IUniqueID
  - System.IComparable
  inheritedMembers:
  - TradingPlatform.BusinessLayer.BusinessObject.ConnectionId
  - TradingPlatform.BusinessLayer.BusinessObject.State
  - TradingPlatform.BusinessLayer.BusinessObject.UniqueId
  - TradingPlatform.BusinessLayer.BusinessObject.CreateInfo
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Exchange
    - name: Namespace
      type: System.String
      value: TradingPlatform
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TradingPlatform.BusinessLayer.Exchange.Id
  commentId: P:TradingPlatform.BusinessLayer.Exchange.Id
  id: Id
  parent: TradingPlatform.BusinessLayer.Exchange
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Exchange.Id
  fullName: TradingPlatform.BusinessLayer.Exchange.Id
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Exchange.cs
    id: Id
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Exchange.cs
    startLine: 12
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: >-
      [DataMember(Name = "ExchangeId")]

      public int Id { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <DataMember(Name:="ExchangeId")>

      Public ReadOnly Property Id As Integer
  overload: TradingPlatform.BusinessLayer.Exchange.Id*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: ExchangeId
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.Exchange.ExchangeName
  commentId: P:TradingPlatform.BusinessLayer.Exchange.ExchangeName
  id: ExchangeName
  parent: TradingPlatform.BusinessLayer.Exchange
  langs:
  - csharp
  - vb
  name: ExchangeName
  nameWithType: Exchange.ExchangeName
  fullName: TradingPlatform.BusinessLayer.Exchange.ExchangeName
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Exchange.cs
    id: ExchangeName
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Exchange.cs
    startLine: 15
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: >-
      [DataMember(Name = "ExchangeName")]

      public string ExchangeName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember(Name:="ExchangeName")>

      Public ReadOnly Property ExchangeName As String
  overload: TradingPlatform.BusinessLayer.Exchange.ExchangeName*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: ExchangeName
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.Exchange.SortIndex
  commentId: P:TradingPlatform.BusinessLayer.Exchange.SortIndex
  id: SortIndex
  parent: TradingPlatform.BusinessLayer.Exchange
  langs:
  - csharp
  - vb
  name: SortIndex
  nameWithType: Exchange.SortIndex
  fullName: TradingPlatform.BusinessLayer.Exchange.SortIndex
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Exchange.cs
    id: SortIndex
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Exchange.cs
    startLine: 18
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: >-
      [DataMember(Name = "SortIndex")]

      public int SortIndex { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <DataMember(Name:="SortIndex")>

      Public ReadOnly Property SortIndex As Integer
  overload: TradingPlatform.BusinessLayer.Exchange.SortIndex*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: SortIndex
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.Exchange.GetMessage
  commentId: M:TradingPlatform.BusinessLayer.Exchange.GetMessage
  id: GetMessage
  parent: TradingPlatform.BusinessLayer.Exchange
  langs:
  - csharp
  - vb
  name: GetMessage()
  nameWithType: Exchange.GetMessage()
  fullName: TradingPlatform.BusinessLayer.Exchange.GetMessage()
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Exchange.cs
    id: GetMessage
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Exchange.cs
    startLine: 32
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public MessageExchange GetMessage()
    return:
      type: TradingPlatform.BusinessLayer.Integration.MessageExchange
    content.vb: Public Function GetMessage As MessageExchange
  overload: TradingPlatform.BusinessLayer.Exchange.GetMessage*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.Exchange.CompareTo(System.Object)
  commentId: M:TradingPlatform.BusinessLayer.Exchange.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: TradingPlatform.BusinessLayer.Exchange
  langs:
  - csharp
  - vb
  name: CompareTo(Object)
  nameWithType: Exchange.CompareTo(Object)
  fullName: TradingPlatform.BusinessLayer.Exchange.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Exchange.cs
    id: CompareTo
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Exchange.cs
    startLine: 42
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public int CompareTo(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Int32
    content.vb: Public Function CompareTo(obj As Object) As Integer
  overload: TradingPlatform.BusinessLayer.Exchange.CompareTo*
  implements:
  - System.IComparable.CompareTo(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TradingPlatform.BusinessLayer
  commentId: N:TradingPlatform.BusinessLayer
  name: TradingPlatform.BusinessLayer
  nameWithType: TradingPlatform.BusinessLayer
  fullName: TradingPlatform.BusinessLayer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TradingPlatform.BusinessLayer.BusinessObject
  commentId: T:TradingPlatform.BusinessLayer.BusinessObject
  parent: TradingPlatform.BusinessLayer
  name: BusinessObject
  nameWithType: BusinessObject
  fullName: TradingPlatform.BusinessLayer.BusinessObject
- uid: TradingPlatform.BusinessLayer.IUniqueID
  commentId: T:TradingPlatform.BusinessLayer.IUniqueID
  parent: TradingPlatform.BusinessLayer
  name: IUniqueID
  nameWithType: IUniqueID
  fullName: TradingPlatform.BusinessLayer.IUniqueID
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: true
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: TradingPlatform.BusinessLayer.BusinessObject.ConnectionId
  commentId: P:TradingPlatform.BusinessLayer.BusinessObject.ConnectionId
  parent: TradingPlatform.BusinessLayer.BusinessObject
  name: ConnectionId
  nameWithType: BusinessObject.ConnectionId
  fullName: TradingPlatform.BusinessLayer.BusinessObject.ConnectionId
- uid: TradingPlatform.BusinessLayer.BusinessObject.State
  commentId: P:TradingPlatform.BusinessLayer.BusinessObject.State
  parent: TradingPlatform.BusinessLayer.BusinessObject
  name: State
  nameWithType: BusinessObject.State
  fullName: TradingPlatform.BusinessLayer.BusinessObject.State
- uid: TradingPlatform.BusinessLayer.BusinessObject.UniqueId
  commentId: P:TradingPlatform.BusinessLayer.BusinessObject.UniqueId
  parent: TradingPlatform.BusinessLayer.BusinessObject
  name: UniqueId
  nameWithType: BusinessObject.UniqueId
  fullName: TradingPlatform.BusinessLayer.BusinessObject.UniqueId
- uid: TradingPlatform.BusinessLayer.BusinessObject.CreateInfo
  commentId: M:TradingPlatform.BusinessLayer.BusinessObject.CreateInfo
  parent: TradingPlatform.BusinessLayer.BusinessObject
  name: CreateInfo()
  nameWithType: BusinessObject.CreateInfo()
  fullName: TradingPlatform.BusinessLayer.BusinessObject.CreateInfo()
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.BusinessObject.CreateInfo
    name: CreateInfo
    nameWithType: BusinessObject.CreateInfo
    fullName: TradingPlatform.BusinessLayer.BusinessObject.CreateInfo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.BusinessObject.CreateInfo
    name: CreateInfo
    nameWithType: BusinessObject.CreateInfo
    fullName: TradingPlatform.BusinessLayer.BusinessObject.CreateInfo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TradingPlatform.BusinessLayer.Exchange.Id*
  commentId: Overload:TradingPlatform.BusinessLayer.Exchange.Id
  name: Id
  nameWithType: Exchange.Id
  fullName: TradingPlatform.BusinessLayer.Exchange.Id
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TradingPlatform.BusinessLayer.Exchange.ExchangeName*
  commentId: Overload:TradingPlatform.BusinessLayer.Exchange.ExchangeName
  name: ExchangeName
  nameWithType: Exchange.ExchangeName
  fullName: TradingPlatform.BusinessLayer.Exchange.ExchangeName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TradingPlatform.BusinessLayer.Exchange.SortIndex*
  commentId: Overload:TradingPlatform.BusinessLayer.Exchange.SortIndex
  name: SortIndex
  nameWithType: Exchange.SortIndex
  fullName: TradingPlatform.BusinessLayer.Exchange.SortIndex
- uid: TradingPlatform.BusinessLayer.Exchange.GetMessage*
  commentId: Overload:TradingPlatform.BusinessLayer.Exchange.GetMessage
  name: GetMessage
  nameWithType: Exchange.GetMessage
  fullName: TradingPlatform.BusinessLayer.Exchange.GetMessage
- uid: TradingPlatform.BusinessLayer.Integration.MessageExchange
  commentId: T:TradingPlatform.BusinessLayer.Integration.MessageExchange
  parent: TradingPlatform.BusinessLayer.Integration
  name: MessageExchange
  nameWithType: MessageExchange
  fullName: TradingPlatform.BusinessLayer.Integration.MessageExchange
- uid: TradingPlatform.BusinessLayer.Integration
  commentId: N:TradingPlatform.BusinessLayer.Integration
  name: TradingPlatform.BusinessLayer.Integration
  nameWithType: TradingPlatform.BusinessLayer.Integration
  fullName: TradingPlatform.BusinessLayer.Integration
- uid: TradingPlatform.BusinessLayer.Exchange.CompareTo*
  commentId: Overload:TradingPlatform.BusinessLayer.Exchange.CompareTo
  name: CompareTo
  nameWithType: Exchange.CompareTo
  fullName: TradingPlatform.BusinessLayer.Exchange.CompareTo
- uid: System.IComparable.CompareTo(System.Object)
  commentId: M:System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: true
  name: CompareTo(Object)
  nameWithType: IComparable.CompareTo(Object)
  fullName: System.IComparable.CompareTo(System.Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
