### YamlMime:ManagedReference
items:
- uid: TradingPlatform.BusinessLayer.Asset
  commentId: T:TradingPlatform.BusinessLayer.Asset
  id: Asset
  parent: TradingPlatform.BusinessLayer
  children:
  - TradingPlatform.BusinessLayer.Asset.#ctor(System.String)
  - TradingPlatform.BusinessLayer.Asset.CompareTo(System.Object)
  - TradingPlatform.BusinessLayer.Asset.Description
  - TradingPlatform.BusinessLayer.Asset.FormatPrice(System.Double)
  - TradingPlatform.BusinessLayer.Asset.FormatPriceWithCurrency(System.Double)
  - TradingPlatform.BusinessLayer.Asset.GetMessage
  - TradingPlatform.BusinessLayer.Asset.Id
  - TradingPlatform.BusinessLayer.Asset.MinimumChange
  - TradingPlatform.BusinessLayer.Asset.Name
  - TradingPlatform.BusinessLayer.Asset.Precision
  - TradingPlatform.BusinessLayer.Asset.ToString
  langs:
  - csharp
  - vb
  name: Asset
  nameWithType: Asset
  fullName: TradingPlatform.BusinessLayer.Asset
  type: Class
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Asset.cs
    id: Asset
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Asset.cs
    startLine: 13
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  summary: "\nDefines asset entity\n"
  example: []
  syntax:
    content: >-
      [DataContract(Name = "Asset", Namespace = "TradingPlatform")]

      public class Asset : BusinessObject, IConnectionBindedObject, IUniqueID, IComparable
    content.vb: >-
      <DataContract(Name:="Asset", Namespace:="TradingPlatform")>

      Public Class Asset
          Inherits BusinessObject
          Implements IConnectionBindedObject, IUniqueID, IComparable
  inheritance:
  - System.Object
  - TradingPlatform.BusinessLayer.BusinessObject
  implements:
  - TradingPlatform.BusinessLayer.IUniqueID
  - System.IComparable
  inheritedMembers:
  - TradingPlatform.BusinessLayer.BusinessObject.ConnectionId
  - TradingPlatform.BusinessLayer.BusinessObject.State
  - TradingPlatform.BusinessLayer.BusinessObject.UniqueId
  - TradingPlatform.BusinessLayer.BusinessObject.CreateInfo
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Asset
    - name: Namespace
      type: System.String
      value: TradingPlatform
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TradingPlatform.BusinessLayer.Asset.Id
  commentId: P:TradingPlatform.BusinessLayer.Asset.Id
  id: Id
  parent: TradingPlatform.BusinessLayer.Asset
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Asset.Id
  fullName: TradingPlatform.BusinessLayer.Asset.Id
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Asset.cs
    id: Id
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Asset.cs
    startLine: 19
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  summary: "\nAsset id bearer\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "Id")]

      public string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember(Name:="Id")>

      Public ReadOnly Property Id As String
  overload: TradingPlatform.BusinessLayer.Asset.Id*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Id
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.Asset.Name
  commentId: P:TradingPlatform.BusinessLayer.Asset.Name
  id: Name
  parent: TradingPlatform.BusinessLayer.Asset
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Asset.Name
  fullName: TradingPlatform.BusinessLayer.Asset.Name
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Asset.cs
    id: Name
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Asset.cs
    startLine: 25
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  summary: "\nAsset name bearer\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "Name")]

      public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember(Name:="Name")>

      Public ReadOnly Property Name As String
  overload: TradingPlatform.BusinessLayer.Asset.Name*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Name
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.Asset.Description
  commentId: P:TradingPlatform.BusinessLayer.Asset.Description
  id: Description
  parent: TradingPlatform.BusinessLayer.Asset
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: Asset.Description
  fullName: TradingPlatform.BusinessLayer.Asset.Description
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Asset.cs
    id: Description
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Asset.cs
    startLine: 31
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  summary: "\nAsset description\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "Description")]

      public string Description { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember(Name:="Description")>

      Public ReadOnly Property Description As String
  overload: TradingPlatform.BusinessLayer.Asset.Description*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Description
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.Asset.MinimumChange
  commentId: P:TradingPlatform.BusinessLayer.Asset.MinimumChange
  id: MinimumChange
  parent: TradingPlatform.BusinessLayer.Asset
  langs:
  - csharp
  - vb
  name: MinimumChange
  nameWithType: Asset.MinimumChange
  fullName: TradingPlatform.BusinessLayer.Asset.MinimumChange
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Asset.cs
    id: MinimumChange
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Asset.cs
    startLine: 34
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: >-
      [DataMember(Name = "MinimumChange")]

      public double MinimumChange { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <DataMember(Name:="MinimumChange")>

      Public Property MinimumChange As Double
  overload: TradingPlatform.BusinessLayer.Asset.MinimumChange*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: MinimumChange
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.Asset.Precision
  commentId: P:TradingPlatform.BusinessLayer.Asset.Precision
  id: Precision
  parent: TradingPlatform.BusinessLayer.Asset
  langs:
  - csharp
  - vb
  name: Precision
  nameWithType: Asset.Precision
  fullName: TradingPlatform.BusinessLayer.Asset.Precision
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Asset.cs
    id: Precision
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Asset.cs
    startLine: 50
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public int Precision { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Precision As Integer
  overload: TradingPlatform.BusinessLayer.Asset.Precision*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.Asset.#ctor(System.String)
  commentId: M:TradingPlatform.BusinessLayer.Asset.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: TradingPlatform.BusinessLayer.Asset
  langs:
  - csharp
  - vb
  name: Asset(String)
  nameWithType: Asset.Asset(String)
  fullName: TradingPlatform.BusinessLayer.Asset.Asset(System.String)
  type: Constructor
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Asset.cs
    id: .ctor
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Asset.cs
    startLine: 52
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public Asset(string connectionId)
    parameters:
    - id: connectionId
      type: System.String
    content.vb: Public Sub New(connectionId As String)
  overload: TradingPlatform.BusinessLayer.Asset.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.Asset.FormatPrice(System.Double)
  commentId: M:TradingPlatform.BusinessLayer.Asset.FormatPrice(System.Double)
  id: FormatPrice(System.Double)
  parent: TradingPlatform.BusinessLayer.Asset
  langs:
  - csharp
  - vb
  name: FormatPrice(Double)
  nameWithType: Asset.FormatPrice(Double)
  fullName: TradingPlatform.BusinessLayer.Asset.FormatPrice(System.Double)
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Asset.cs
    id: FormatPrice
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Asset.cs
    startLine: 56
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public string FormatPrice(double price)
    parameters:
    - id: price
      type: System.Double
    return:
      type: System.String
    content.vb: Public Function FormatPrice(price As Double) As String
  overload: TradingPlatform.BusinessLayer.Asset.FormatPrice*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.Asset.FormatPriceWithCurrency(System.Double)
  commentId: M:TradingPlatform.BusinessLayer.Asset.FormatPriceWithCurrency(System.Double)
  id: FormatPriceWithCurrency(System.Double)
  parent: TradingPlatform.BusinessLayer.Asset
  langs:
  - csharp
  - vb
  name: FormatPriceWithCurrency(Double)
  nameWithType: Asset.FormatPriceWithCurrency(Double)
  fullName: TradingPlatform.BusinessLayer.Asset.FormatPriceWithCurrency(System.Double)
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Asset.cs
    id: FormatPriceWithCurrency
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Asset.cs
    startLine: 64
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public string FormatPriceWithCurrency(double price)
    parameters:
    - id: price
      type: System.Double
    return:
      type: System.String
    content.vb: Public Function FormatPriceWithCurrency(price As Double) As String
  overload: TradingPlatform.BusinessLayer.Asset.FormatPriceWithCurrency*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.Asset.GetMessage
  commentId: M:TradingPlatform.BusinessLayer.Asset.GetMessage
  id: GetMessage
  parent: TradingPlatform.BusinessLayer.Asset
  langs:
  - csharp
  - vb
  name: GetMessage()
  nameWithType: Asset.GetMessage()
  fullName: TradingPlatform.BusinessLayer.Asset.GetMessage()
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Asset.cs
    id: GetMessage
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Asset.cs
    startLine: 80
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public MessageAsset GetMessage()
    return:
      type: TradingPlatform.BusinessLayer.Integration.MessageAsset
    content.vb: Public Function GetMessage As MessageAsset
  overload: TradingPlatform.BusinessLayer.Asset.GetMessage*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.Asset.ToString
  commentId: M:TradingPlatform.BusinessLayer.Asset.ToString
  id: ToString
  parent: TradingPlatform.BusinessLayer.Asset
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Asset.ToString()
  fullName: TradingPlatform.BusinessLayer.Asset.ToString()
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Asset.cs
    id: ToString
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Asset.cs
    startLine: 91
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: TradingPlatform.BusinessLayer.Asset.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TradingPlatform.BusinessLayer.Asset.CompareTo(System.Object)
  commentId: M:TradingPlatform.BusinessLayer.Asset.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: TradingPlatform.BusinessLayer.Asset
  langs:
  - csharp
  - vb
  name: CompareTo(Object)
  nameWithType: Asset.CompareTo(Object)
  fullName: TradingPlatform.BusinessLayer.Asset.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Asset.cs
    id: CompareTo
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Asset.cs
    startLine: 94
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public int CompareTo(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Int32
    content.vb: Public Function CompareTo(obj As Object) As Integer
  overload: TradingPlatform.BusinessLayer.Asset.CompareTo*
  implements:
  - System.IComparable.CompareTo(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TradingPlatform.BusinessLayer
  commentId: N:TradingPlatform.BusinessLayer
  name: TradingPlatform.BusinessLayer
  nameWithType: TradingPlatform.BusinessLayer
  fullName: TradingPlatform.BusinessLayer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TradingPlatform.BusinessLayer.BusinessObject
  commentId: T:TradingPlatform.BusinessLayer.BusinessObject
  parent: TradingPlatform.BusinessLayer
  name: BusinessObject
  nameWithType: BusinessObject
  fullName: TradingPlatform.BusinessLayer.BusinessObject
- uid: TradingPlatform.BusinessLayer.IUniqueID
  commentId: T:TradingPlatform.BusinessLayer.IUniqueID
  parent: TradingPlatform.BusinessLayer
  name: IUniqueID
  nameWithType: IUniqueID
  fullName: TradingPlatform.BusinessLayer.IUniqueID
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: true
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: TradingPlatform.BusinessLayer.BusinessObject.ConnectionId
  commentId: P:TradingPlatform.BusinessLayer.BusinessObject.ConnectionId
  parent: TradingPlatform.BusinessLayer.BusinessObject
  name: ConnectionId
  nameWithType: BusinessObject.ConnectionId
  fullName: TradingPlatform.BusinessLayer.BusinessObject.ConnectionId
- uid: TradingPlatform.BusinessLayer.BusinessObject.State
  commentId: P:TradingPlatform.BusinessLayer.BusinessObject.State
  parent: TradingPlatform.BusinessLayer.BusinessObject
  name: State
  nameWithType: BusinessObject.State
  fullName: TradingPlatform.BusinessLayer.BusinessObject.State
- uid: TradingPlatform.BusinessLayer.BusinessObject.UniqueId
  commentId: P:TradingPlatform.BusinessLayer.BusinessObject.UniqueId
  parent: TradingPlatform.BusinessLayer.BusinessObject
  name: UniqueId
  nameWithType: BusinessObject.UniqueId
  fullName: TradingPlatform.BusinessLayer.BusinessObject.UniqueId
- uid: TradingPlatform.BusinessLayer.BusinessObject.CreateInfo
  commentId: M:TradingPlatform.BusinessLayer.BusinessObject.CreateInfo
  parent: TradingPlatform.BusinessLayer.BusinessObject
  name: CreateInfo()
  nameWithType: BusinessObject.CreateInfo()
  fullName: TradingPlatform.BusinessLayer.BusinessObject.CreateInfo()
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.BusinessObject.CreateInfo
    name: CreateInfo
    nameWithType: BusinessObject.CreateInfo
    fullName: TradingPlatform.BusinessLayer.BusinessObject.CreateInfo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.BusinessObject.CreateInfo
    name: CreateInfo
    nameWithType: BusinessObject.CreateInfo
    fullName: TradingPlatform.BusinessLayer.BusinessObject.CreateInfo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TradingPlatform.BusinessLayer.Asset.Id*
  commentId: Overload:TradingPlatform.BusinessLayer.Asset.Id
  name: Id
  nameWithType: Asset.Id
  fullName: TradingPlatform.BusinessLayer.Asset.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TradingPlatform.BusinessLayer.Asset.Name*
  commentId: Overload:TradingPlatform.BusinessLayer.Asset.Name
  name: Name
  nameWithType: Asset.Name
  fullName: TradingPlatform.BusinessLayer.Asset.Name
- uid: TradingPlatform.BusinessLayer.Asset.Description*
  commentId: Overload:TradingPlatform.BusinessLayer.Asset.Description
  name: Description
  nameWithType: Asset.Description
  fullName: TradingPlatform.BusinessLayer.Asset.Description
- uid: TradingPlatform.BusinessLayer.Asset.MinimumChange*
  commentId: Overload:TradingPlatform.BusinessLayer.Asset.MinimumChange
  name: MinimumChange
  nameWithType: Asset.MinimumChange
  fullName: TradingPlatform.BusinessLayer.Asset.MinimumChange
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: TradingPlatform.BusinessLayer.Asset.Precision*
  commentId: Overload:TradingPlatform.BusinessLayer.Asset.Precision
  name: Precision
  nameWithType: Asset.Precision
  fullName: TradingPlatform.BusinessLayer.Asset.Precision
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TradingPlatform.BusinessLayer.Asset.#ctor*
  commentId: Overload:TradingPlatform.BusinessLayer.Asset.#ctor
  name: Asset
  nameWithType: Asset.Asset
  fullName: TradingPlatform.BusinessLayer.Asset.Asset
- uid: TradingPlatform.BusinessLayer.Asset.FormatPrice*
  commentId: Overload:TradingPlatform.BusinessLayer.Asset.FormatPrice
  name: FormatPrice
  nameWithType: Asset.FormatPrice
  fullName: TradingPlatform.BusinessLayer.Asset.FormatPrice
- uid: TradingPlatform.BusinessLayer.Asset.FormatPriceWithCurrency*
  commentId: Overload:TradingPlatform.BusinessLayer.Asset.FormatPriceWithCurrency
  name: FormatPriceWithCurrency
  nameWithType: Asset.FormatPriceWithCurrency
  fullName: TradingPlatform.BusinessLayer.Asset.FormatPriceWithCurrency
- uid: TradingPlatform.BusinessLayer.Asset.GetMessage*
  commentId: Overload:TradingPlatform.BusinessLayer.Asset.GetMessage
  name: GetMessage
  nameWithType: Asset.GetMessage
  fullName: TradingPlatform.BusinessLayer.Asset.GetMessage
- uid: TradingPlatform.BusinessLayer.Integration.MessageAsset
  commentId: T:TradingPlatform.BusinessLayer.Integration.MessageAsset
  parent: TradingPlatform.BusinessLayer.Integration
  name: MessageAsset
  nameWithType: MessageAsset
  fullName: TradingPlatform.BusinessLayer.Integration.MessageAsset
- uid: TradingPlatform.BusinessLayer.Integration
  commentId: N:TradingPlatform.BusinessLayer.Integration
  name: TradingPlatform.BusinessLayer.Integration
  nameWithType: TradingPlatform.BusinessLayer.Integration
  fullName: TradingPlatform.BusinessLayer.Integration
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Asset.ToString*
  commentId: Overload:TradingPlatform.BusinessLayer.Asset.ToString
  name: ToString
  nameWithType: Asset.ToString
  fullName: TradingPlatform.BusinessLayer.Asset.ToString
- uid: TradingPlatform.BusinessLayer.Asset.CompareTo*
  commentId: Overload:TradingPlatform.BusinessLayer.Asset.CompareTo
  name: CompareTo
  nameWithType: Asset.CompareTo
  fullName: TradingPlatform.BusinessLayer.Asset.CompareTo
- uid: System.IComparable.CompareTo(System.Object)
  commentId: M:System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: true
  name: CompareTo(Object)
  nameWithType: IComparable.CompareTo(Object)
  fullName: System.IComparable.CompareTo(System.Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
