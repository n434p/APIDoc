### YamlMime:ManagedReference
items:
- uid: TradingPlatform.BusinessLayer.Integration.MessageOrderHistory
  commentId: T:TradingPlatform.BusinessLayer.Integration.MessageOrderHistory
  id: MessageOrderHistory
  parent: TradingPlatform.BusinessLayer.Integration
  children:
  - TradingPlatform.BusinessLayer.Integration.MessageOrderHistory.#ctor(System.String)
  - TradingPlatform.BusinessLayer.Integration.MessageOrderHistory.#ctor(TradingPlatform.BusinessLayer.Integration.MessageOpenOrder)
  - TradingPlatform.BusinessLayer.Integration.MessageOrderHistory.DateTime
  - TradingPlatform.BusinessLayer.Integration.MessageOrderHistory.Type
  langs:
  - csharp
  - vb
  name: MessageOrderHistory
  nameWithType: MessageOrderHistory
  fullName: TradingPlatform.BusinessLayer.Integration.MessageOrderHistory
  type: Class
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/MessageOrderHistory.cs
    id: MessageOrderHistory
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/MessageOrderHistory.cs
    startLine: 8
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Integration
  syntax:
    content: >-
      [DataContract(Name = "OrderHistory", Namespace = "TradingPlatform")]

      public sealed class MessageOrderHistory : MessageOpenOrder
    content.vb: >-
      <DataContract(Name:="OrderHistory", Namespace:="TradingPlatform")>

      Public NotInheritable Class MessageOrderHistory
          Inherits MessageOpenOrder
  inheritance:
  - System.Object
  - TradingPlatform.BusinessLayer.Integration.Message
  - TradingPlatform.BusinessLayer.Integration.MessageOpenOrder
  inheritedMembers:
  - TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.OrderId
  - TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.GroupId
  - TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.PositionId
  - TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.AccountId
  - TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.TotalQuantity
  - TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.FilledQuantity
  - TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.Side
  - TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.Comment
  - TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.LastUpdateTime
  - TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.InstrumentId
  - TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.OrderTypeId
  - TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.Tiff
  - TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.ExpirationTime
  - TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.Price
  - TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.TriggerPrice
  - TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.TrailOffset
  - TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.Status
  - TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.OriginalStatus
  - TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.StopLoss
  - TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.TakeProfit
  - TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: OrderHistory
    - name: Namespace
      type: System.String
      value: TradingPlatform
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: TradingPlatform.BusinessLayer.Integration.MessageOrderHistory.Type
  commentId: P:TradingPlatform.BusinessLayer.Integration.MessageOrderHistory.Type
  id: Type
  parent: TradingPlatform.BusinessLayer.Integration.MessageOrderHistory
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: MessageOrderHistory.Type
  fullName: TradingPlatform.BusinessLayer.Integration.MessageOrderHistory.Type
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/MessageOrderHistory.cs
    id: Type
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/MessageOrderHistory.cs
    startLine: 11
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Integration
  syntax:
    content: public override MessageType Type { get; }
    parameters: []
    return:
      type: TradingPlatform.BusinessLayer.Integration.MessageType
    content.vb: Public Overrides ReadOnly Property Type As MessageType
  overridden: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.Type
  overload: TradingPlatform.BusinessLayer.Integration.MessageOrderHistory.Type*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.Integration.MessageOrderHistory.DateTime
  commentId: P:TradingPlatform.BusinessLayer.Integration.MessageOrderHistory.DateTime
  id: DateTime
  parent: TradingPlatform.BusinessLayer.Integration.MessageOrderHistory
  langs:
  - csharp
  - vb
  name: DateTime
  nameWithType: MessageOrderHistory.DateTime
  fullName: TradingPlatform.BusinessLayer.Integration.MessageOrderHistory.DateTime
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/MessageOrderHistory.cs
    id: DateTime
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/MessageOrderHistory.cs
    startLine: 13
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Integration
  syntax:
    content: >-
      [DataMember(Name = "DateTime")]

      public DateTime DateTime { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <DataMember(Name:="DateTime")>

      Public Property DateTime As Date
  overload: TradingPlatform.BusinessLayer.Integration.MessageOrderHistory.DateTime*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: DateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.Integration.MessageOrderHistory.#ctor(System.String)
  commentId: M:TradingPlatform.BusinessLayer.Integration.MessageOrderHistory.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: TradingPlatform.BusinessLayer.Integration.MessageOrderHistory
  langs:
  - csharp
  - vb
  name: MessageOrderHistory(String)
  nameWithType: MessageOrderHistory.MessageOrderHistory(String)
  fullName: TradingPlatform.BusinessLayer.Integration.MessageOrderHistory.MessageOrderHistory(System.String)
  type: Constructor
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/MessageOrderHistory.cs
    id: .ctor
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/MessageOrderHistory.cs
    startLine: 16
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Integration
  syntax:
    content: public MessageOrderHistory(string instrumentId)
    parameters:
    - id: instrumentId
      type: System.String
    content.vb: Public Sub New(instrumentId As String)
  overload: TradingPlatform.BusinessLayer.Integration.MessageOrderHistory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.Integration.MessageOrderHistory.#ctor(TradingPlatform.BusinessLayer.Integration.MessageOpenOrder)
  commentId: M:TradingPlatform.BusinessLayer.Integration.MessageOrderHistory.#ctor(TradingPlatform.BusinessLayer.Integration.MessageOpenOrder)
  id: '#ctor(TradingPlatform.BusinessLayer.Integration.MessageOpenOrder)'
  parent: TradingPlatform.BusinessLayer.Integration.MessageOrderHistory
  langs:
  - csharp
  - vb
  name: MessageOrderHistory(MessageOpenOrder)
  nameWithType: MessageOrderHistory.MessageOrderHistory(MessageOpenOrder)
  fullName: TradingPlatform.BusinessLayer.Integration.MessageOrderHistory.MessageOrderHistory(TradingPlatform.BusinessLayer.Integration.MessageOpenOrder)
  type: Constructor
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/MessageOrderHistory.cs
    id: .ctor
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/MessageOrderHistory.cs
    startLine: 21
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Integration
  syntax:
    content: public MessageOrderHistory(MessageOpenOrder order)
    parameters:
    - id: order
      type: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder
    content.vb: Public Sub New(order As MessageOpenOrder)
  overload: TradingPlatform.BusinessLayer.Integration.MessageOrderHistory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TradingPlatform.BusinessLayer.Integration
  commentId: N:TradingPlatform.BusinessLayer.Integration
  name: TradingPlatform.BusinessLayer.Integration
  nameWithType: TradingPlatform.BusinessLayer.Integration
  fullName: TradingPlatform.BusinessLayer.Integration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TradingPlatform.BusinessLayer.Integration.Message
  commentId: T:TradingPlatform.BusinessLayer.Integration.Message
  parent: TradingPlatform.BusinessLayer.Integration
  name: Message
  nameWithType: Message
  fullName: TradingPlatform.BusinessLayer.Integration.Message
- uid: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder
  commentId: T:TradingPlatform.BusinessLayer.Integration.MessageOpenOrder
  parent: TradingPlatform.BusinessLayer.Integration
  name: MessageOpenOrder
  nameWithType: MessageOpenOrder
  fullName: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder
- uid: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.OrderId
  commentId: P:TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.OrderId
  parent: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder
  name: OrderId
  nameWithType: MessageOpenOrder.OrderId
  fullName: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.OrderId
- uid: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.GroupId
  commentId: P:TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.GroupId
  parent: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder
  name: GroupId
  nameWithType: MessageOpenOrder.GroupId
  fullName: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.GroupId
- uid: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.PositionId
  commentId: P:TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.PositionId
  parent: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder
  name: PositionId
  nameWithType: MessageOpenOrder.PositionId
  fullName: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.PositionId
- uid: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.AccountId
  commentId: P:TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.AccountId
  parent: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder
  name: AccountId
  nameWithType: MessageOpenOrder.AccountId
  fullName: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.AccountId
- uid: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.TotalQuantity
  commentId: P:TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.TotalQuantity
  parent: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder
  name: TotalQuantity
  nameWithType: MessageOpenOrder.TotalQuantity
  fullName: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.TotalQuantity
- uid: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.FilledQuantity
  commentId: P:TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.FilledQuantity
  parent: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder
  name: FilledQuantity
  nameWithType: MessageOpenOrder.FilledQuantity
  fullName: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.FilledQuantity
- uid: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.Side
  commentId: P:TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.Side
  parent: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder
  name: Side
  nameWithType: MessageOpenOrder.Side
  fullName: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.Side
- uid: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.Comment
  commentId: P:TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.Comment
  parent: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder
  name: Comment
  nameWithType: MessageOpenOrder.Comment
  fullName: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.Comment
- uid: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.LastUpdateTime
  commentId: P:TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.LastUpdateTime
  parent: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder
  name: LastUpdateTime
  nameWithType: MessageOpenOrder.LastUpdateTime
  fullName: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.LastUpdateTime
- uid: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.InstrumentId
  commentId: P:TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.InstrumentId
  parent: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder
  name: InstrumentId
  nameWithType: MessageOpenOrder.InstrumentId
  fullName: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.InstrumentId
- uid: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.OrderTypeId
  commentId: P:TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.OrderTypeId
  parent: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder
  name: OrderTypeId
  nameWithType: MessageOpenOrder.OrderTypeId
  fullName: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.OrderTypeId
- uid: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.Tiff
  commentId: P:TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.Tiff
  parent: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder
  name: Tiff
  nameWithType: MessageOpenOrder.Tiff
  fullName: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.Tiff
- uid: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.ExpirationTime
  commentId: P:TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.ExpirationTime
  parent: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder
  name: ExpirationTime
  nameWithType: MessageOpenOrder.ExpirationTime
  fullName: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.ExpirationTime
- uid: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.Price
  commentId: P:TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.Price
  parent: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder
  name: Price
  nameWithType: MessageOpenOrder.Price
  fullName: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.Price
- uid: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.TriggerPrice
  commentId: P:TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.TriggerPrice
  parent: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder
  name: TriggerPrice
  nameWithType: MessageOpenOrder.TriggerPrice
  fullName: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.TriggerPrice
- uid: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.TrailOffset
  commentId: P:TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.TrailOffset
  parent: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder
  name: TrailOffset
  nameWithType: MessageOpenOrder.TrailOffset
  fullName: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.TrailOffset
- uid: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.Status
  commentId: P:TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.Status
  parent: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder
  name: Status
  nameWithType: MessageOpenOrder.Status
  fullName: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.Status
- uid: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.OriginalStatus
  commentId: P:TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.OriginalStatus
  parent: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder
  name: OriginalStatus
  nameWithType: MessageOpenOrder.OriginalStatus
  fullName: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.OriginalStatus
- uid: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.StopLoss
  commentId: P:TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.StopLoss
  parent: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder
  name: StopLoss
  nameWithType: MessageOpenOrder.StopLoss
  fullName: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.StopLoss
- uid: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.TakeProfit
  commentId: P:TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.TakeProfit
  parent: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder
  name: TakeProfit
  nameWithType: MessageOpenOrder.TakeProfit
  fullName: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.TakeProfit
- uid: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.ToString
  commentId: M:TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.ToString
  parent: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder
  name: ToString()
  nameWithType: MessageOpenOrder.ToString()
  fullName: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.ToString()
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.ToString
    name: ToString
    nameWithType: MessageOpenOrder.ToString
    fullName: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.ToString
    name: ToString
    nameWithType: MessageOpenOrder.ToString
    fullName: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.Type
  commentId: P:TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.Type
  parent: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder
  name: Type
  nameWithType: MessageOpenOrder.Type
  fullName: TradingPlatform.BusinessLayer.Integration.MessageOpenOrder.Type
- uid: TradingPlatform.BusinessLayer.Integration.MessageOrderHistory.Type*
  commentId: Overload:TradingPlatform.BusinessLayer.Integration.MessageOrderHistory.Type
  name: Type
  nameWithType: MessageOrderHistory.Type
  fullName: TradingPlatform.BusinessLayer.Integration.MessageOrderHistory.Type
- uid: TradingPlatform.BusinessLayer.Integration.MessageType
  commentId: T:TradingPlatform.BusinessLayer.Integration.MessageType
  parent: TradingPlatform.BusinessLayer.Integration
  name: MessageType
  nameWithType: MessageType
  fullName: TradingPlatform.BusinessLayer.Integration.MessageType
- uid: TradingPlatform.BusinessLayer.Integration.MessageOrderHistory.DateTime*
  commentId: Overload:TradingPlatform.BusinessLayer.Integration.MessageOrderHistory.DateTime
  name: DateTime
  nameWithType: MessageOrderHistory.DateTime
  fullName: TradingPlatform.BusinessLayer.Integration.MessageOrderHistory.DateTime
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: TradingPlatform.BusinessLayer.Integration.MessageOrderHistory.#ctor*
  commentId: Overload:TradingPlatform.BusinessLayer.Integration.MessageOrderHistory.#ctor
  name: MessageOrderHistory
  nameWithType: MessageOrderHistory.MessageOrderHistory
  fullName: TradingPlatform.BusinessLayer.Integration.MessageOrderHistory.MessageOrderHistory
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
