### YamlMime:ManagedReference
items:
- uid: TradingPlatform.BusinessLayer.Utils.AlertData
  commentId: T:TradingPlatform.BusinessLayer.Utils.AlertData
  id: AlertData
  parent: TradingPlatform.BusinessLayer.Utils
  children:
  - TradingPlatform.BusinessLayer.Utils.AlertData.#ctor
  - TradingPlatform.BusinessLayer.Utils.AlertData.Actions
  - TradingPlatform.BusinessLayer.Utils.AlertData.Columns
  - TradingPlatform.BusinessLayer.Utils.AlertData.CommandSender
  - TradingPlatform.BusinessLayer.Utils.AlertData.Enabled
  - TradingPlatform.BusinessLayer.Utils.AlertData.FilterAlert
  - TradingPlatform.BusinessLayer.Utils.AlertData.FromXElement(System.Xml.Linq.XElement,TradingPlatform.BusinessLayer.Serialization.DeserializationInfo)
  - TradingPlatform.BusinessLayer.Utils.AlertData.Groups
  - TradingPlatform.BusinessLayer.Utils.AlertData.ID
  - TradingPlatform.BusinessLayer.Utils.AlertData.IsColoringAlert
  - TradingPlatform.BusinessLayer.Utils.AlertData.Name
  - TradingPlatform.BusinessLayer.Utils.AlertData.SearchAlert
  - TradingPlatform.BusinessLayer.Utils.AlertData.TableDictionary
  - TradingPlatform.BusinessLayer.Utils.AlertData.ToRemove
  - TradingPlatform.BusinessLayer.Utils.AlertData.ToXElement
  langs:
  - csharp
  - vb
  name: AlertData
  nameWithType: AlertData
  fullName: TradingPlatform.BusinessLayer.Utils.AlertData
  type: Class
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/AlertData.cs
    id: AlertData
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/AlertData.cs
    startLine: 9
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Utils
  syntax:
    content: >-
      [DataContract(Name = "Alert", Namespace = "TradingPlatform")]

      public class AlertData : IXElementSerialization
    content.vb: >-
      <DataContract(Name:="Alert", Namespace:="TradingPlatform")>

      Public Class AlertData
          Implements IXElementSerialization
  inheritance:
  - System.Object
  implements:
  - TradingPlatform.BusinessLayer.Serialization.IXElementSerialization
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Alert
    - name: Namespace
      type: System.String
      value: TradingPlatform
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TradingPlatform.BusinessLayer.Utils.AlertData.Name
  commentId: F:TradingPlatform.BusinessLayer.Utils.AlertData.Name
  id: Name
  parent: TradingPlatform.BusinessLayer.Utils.AlertData
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: AlertData.Name
  fullName: TradingPlatform.BusinessLayer.Utils.AlertData.Name
  type: Field
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/AlertData.cs
    id: Name
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/AlertData.cs
    startLine: 13
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Utils
  syntax:
    content: >-
      [DataMember(Name = "Name")]

      public string Name
    return:
      type: System.String
    content.vb: >-
      <DataMember(Name:="Name")>

      Public Name As String
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Name
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.Utils.AlertData.Columns
  commentId: P:TradingPlatform.BusinessLayer.Utils.AlertData.Columns
  id: Columns
  parent: TradingPlatform.BusinessLayer.Utils.AlertData
  langs:
  - csharp
  - vb
  name: Columns
  nameWithType: AlertData.Columns
  fullName: TradingPlatform.BusinessLayer.Utils.AlertData.Columns
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/AlertData.cs
    id: Columns
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/AlertData.cs
    startLine: 14
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Utils
  syntax:
    content: public List<ColumnBaseInformation> Columns { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{TradingPlatform.BusinessLayer.Utils.ColumnBaseInformation}
    content.vb: Public Property Columns As List(Of ColumnBaseInformation)
  overload: TradingPlatform.BusinessLayer.Utils.AlertData.Columns*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.Utils.AlertData.Groups
  commentId: P:TradingPlatform.BusinessLayer.Utils.AlertData.Groups
  id: Groups
  parent: TradingPlatform.BusinessLayer.Utils.AlertData
  langs:
  - csharp
  - vb
  name: Groups
  nameWithType: AlertData.Groups
  fullName: TradingPlatform.BusinessLayer.Utils.AlertData.Groups
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/AlertData.cs
    id: Groups
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/AlertData.cs
    startLine: 15
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Utils
  syntax:
    content: public List<ConditionGroup> Groups { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{TradingPlatform.BusinessLayer.Utils.ConditionGroup}
    content.vb: Public Property Groups As List(Of ConditionGroup)
  overload: TradingPlatform.BusinessLayer.Utils.AlertData.Groups*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.Utils.AlertData.Actions
  commentId: P:TradingPlatform.BusinessLayer.Utils.AlertData.Actions
  id: Actions
  parent: TradingPlatform.BusinessLayer.Utils.AlertData
  langs:
  - csharp
  - vb
  name: Actions
  nameWithType: AlertData.Actions
  fullName: TradingPlatform.BusinessLayer.Utils.AlertData.Actions
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/AlertData.cs
    id: Actions
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/AlertData.cs
    startLine: 16
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Utils
  syntax:
    content: public List<ActionWrapper> Actions { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{TradingPlatform.BusinessLayer.Utils.ActionWrapper}
    content.vb: Public Property Actions As List(Of ActionWrapper)
  overload: TradingPlatform.BusinessLayer.Utils.AlertData.Actions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.Utils.AlertData.Enabled
  commentId: P:TradingPlatform.BusinessLayer.Utils.AlertData.Enabled
  id: Enabled
  parent: TradingPlatform.BusinessLayer.Utils.AlertData
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: AlertData.Enabled
  fullName: TradingPlatform.BusinessLayer.Utils.AlertData.Enabled
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/AlertData.cs
    id: Enabled
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/AlertData.cs
    startLine: 18
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Utils
  syntax:
    content: >-
      [DataMember(Name = "Enabled")]

      public bool Enabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember(Name:="Enabled")>

      Public Property Enabled As Boolean
  overload: TradingPlatform.BusinessLayer.Utils.AlertData.Enabled*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Enabled
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.Utils.AlertData.TableDictionary
  commentId: P:TradingPlatform.BusinessLayer.Utils.AlertData.TableDictionary
  id: TableDictionary
  parent: TradingPlatform.BusinessLayer.Utils.AlertData
  langs:
  - csharp
  - vb
  name: TableDictionary
  nameWithType: AlertData.TableDictionary
  fullName: TradingPlatform.BusinessLayer.Utils.AlertData.TableDictionary
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/AlertData.cs
    id: TableDictionary
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/AlertData.cs
    startLine: 20
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Utils
  syntax:
    content: public Hashtable TableDictionary { get; set; }
    parameters: []
    return:
      type: System.Collections.Hashtable
    content.vb: Public Property TableDictionary As Hashtable
  overload: TradingPlatform.BusinessLayer.Utils.AlertData.TableDictionary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.Utils.AlertData.IsColoringAlert
  commentId: P:TradingPlatform.BusinessLayer.Utils.AlertData.IsColoringAlert
  id: IsColoringAlert
  parent: TradingPlatform.BusinessLayer.Utils.AlertData
  langs:
  - csharp
  - vb
  name: IsColoringAlert
  nameWithType: AlertData.IsColoringAlert
  fullName: TradingPlatform.BusinessLayer.Utils.AlertData.IsColoringAlert
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/AlertData.cs
    id: IsColoringAlert
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/AlertData.cs
    startLine: 22
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Utils
  syntax:
    content: >-
      [DataMember(Name = "IsColoringAlert")]

      public bool IsColoringAlert { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember(Name:="IsColoringAlert")>

      Public Property IsColoringAlert As Boolean
  overload: TradingPlatform.BusinessLayer.Utils.AlertData.IsColoringAlert*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: IsColoringAlert
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.Utils.AlertData.FilterAlert
  commentId: P:TradingPlatform.BusinessLayer.Utils.AlertData.FilterAlert
  id: FilterAlert
  parent: TradingPlatform.BusinessLayer.Utils.AlertData
  langs:
  - csharp
  - vb
  name: FilterAlert
  nameWithType: AlertData.FilterAlert
  fullName: TradingPlatform.BusinessLayer.Utils.AlertData.FilterAlert
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/AlertData.cs
    id: FilterAlert
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/AlertData.cs
    startLine: 25
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Utils
  syntax:
    content: >-
      [DataMember(Name = "FilterAlert")]

      public bool FilterAlert { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember(Name:="FilterAlert")>

      Public Property FilterAlert As Boolean
  overload: TradingPlatform.BusinessLayer.Utils.AlertData.FilterAlert*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: FilterAlert
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.Utils.AlertData.SearchAlert
  commentId: P:TradingPlatform.BusinessLayer.Utils.AlertData.SearchAlert
  id: SearchAlert
  parent: TradingPlatform.BusinessLayer.Utils.AlertData
  langs:
  - csharp
  - vb
  name: SearchAlert
  nameWithType: AlertData.SearchAlert
  fullName: TradingPlatform.BusinessLayer.Utils.AlertData.SearchAlert
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/AlertData.cs
    id: SearchAlert
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/AlertData.cs
    startLine: 28
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Utils
  syntax:
    content: >-
      [DataMember(Name = "SearchAlert")]

      public bool SearchAlert { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember(Name:="SearchAlert")>

      Public Property SearchAlert As Boolean
  overload: TradingPlatform.BusinessLayer.Utils.AlertData.SearchAlert*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: SearchAlert
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.Utils.AlertData.ToRemove
  commentId: P:TradingPlatform.BusinessLayer.Utils.AlertData.ToRemove
  id: ToRemove
  parent: TradingPlatform.BusinessLayer.Utils.AlertData
  langs:
  - csharp
  - vb
  name: ToRemove
  nameWithType: AlertData.ToRemove
  fullName: TradingPlatform.BusinessLayer.Utils.AlertData.ToRemove
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/AlertData.cs
    id: ToRemove
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/AlertData.cs
    startLine: 31
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Utils
  syntax:
    content: public bool ToRemove { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ToRemove As Boolean
  overload: TradingPlatform.BusinessLayer.Utils.AlertData.ToRemove*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.Utils.AlertData.ID
  commentId: P:TradingPlatform.BusinessLayer.Utils.AlertData.ID
  id: ID
  parent: TradingPlatform.BusinessLayer.Utils.AlertData
  langs:
  - csharp
  - vb
  name: ID
  nameWithType: AlertData.ID
  fullName: TradingPlatform.BusinessLayer.Utils.AlertData.ID
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/AlertData.cs
    id: ID
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/AlertData.cs
    startLine: 32
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Utils
  syntax:
    content: public string ID { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ID As String
  overload: TradingPlatform.BusinessLayer.Utils.AlertData.ID*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.Utils.AlertData.CommandSender
  commentId: P:TradingPlatform.BusinessLayer.Utils.AlertData.CommandSender
  id: CommandSender
  parent: TradingPlatform.BusinessLayer.Utils.AlertData
  langs:
  - csharp
  - vb
  name: CommandSender
  nameWithType: AlertData.CommandSender
  fullName: TradingPlatform.BusinessLayer.Utils.AlertData.CommandSender
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/AlertData.cs
    id: CommandSender
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/AlertData.cs
    startLine: 33
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Utils
  syntax:
    content: public object CommandSender { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Property CommandSender As Object
  overload: TradingPlatform.BusinessLayer.Utils.AlertData.CommandSender*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.Utils.AlertData.#ctor
  commentId: M:TradingPlatform.BusinessLayer.Utils.AlertData.#ctor
  id: '#ctor'
  parent: TradingPlatform.BusinessLayer.Utils.AlertData
  langs:
  - csharp
  - vb
  name: AlertData()
  nameWithType: AlertData.AlertData()
  fullName: TradingPlatform.BusinessLayer.Utils.AlertData.AlertData()
  type: Constructor
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/AlertData.cs
    id: .ctor
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/AlertData.cs
    startLine: 34
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Utils
  syntax:
    content: public AlertData()
    content.vb: Public Sub New
  overload: TradingPlatform.BusinessLayer.Utils.AlertData.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.Utils.AlertData.ToXElement
  commentId: M:TradingPlatform.BusinessLayer.Utils.AlertData.ToXElement
  id: ToXElement
  parent: TradingPlatform.BusinessLayer.Utils.AlertData
  langs:
  - csharp
  - vb
  name: ToXElement()
  nameWithType: AlertData.ToXElement()
  fullName: TradingPlatform.BusinessLayer.Utils.AlertData.ToXElement()
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/AlertData.cs
    id: ToXElement
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/AlertData.cs
    startLine: 41
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Utils
  syntax:
    content: public XElement ToXElement()
    return:
      type: System.Xml.Linq.XElement
    content.vb: Public Function ToXElement As XElement
  overload: TradingPlatform.BusinessLayer.Utils.AlertData.ToXElement*
  implements:
  - TradingPlatform.BusinessLayer.Serialization.IXElementSerialization.ToXElement
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.Utils.AlertData.FromXElement(System.Xml.Linq.XElement,TradingPlatform.BusinessLayer.Serialization.DeserializationInfo)
  commentId: M:TradingPlatform.BusinessLayer.Utils.AlertData.FromXElement(System.Xml.Linq.XElement,TradingPlatform.BusinessLayer.Serialization.DeserializationInfo)
  id: FromXElement(System.Xml.Linq.XElement,TradingPlatform.BusinessLayer.Serialization.DeserializationInfo)
  parent: TradingPlatform.BusinessLayer.Utils.AlertData
  langs:
  - csharp
  - vb
  name: FromXElement(XElement, DeserializationInfo)
  nameWithType: AlertData.FromXElement(XElement, DeserializationInfo)
  fullName: TradingPlatform.BusinessLayer.Utils.AlertData.FromXElement(System.Xml.Linq.XElement, TradingPlatform.BusinessLayer.Serialization.DeserializationInfo)
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/AlertData.cs
    id: FromXElement
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/AlertData.cs
    startLine: 64
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Utils
  syntax:
    content: public void FromXElement(XElement element, DeserializationInfo deserializationInfo)
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
    - id: deserializationInfo
      type: TradingPlatform.BusinessLayer.Serialization.DeserializationInfo
    content.vb: Public Sub FromXElement(element As XElement, deserializationInfo As DeserializationInfo)
  overload: TradingPlatform.BusinessLayer.Utils.AlertData.FromXElement*
  implements:
  - TradingPlatform.BusinessLayer.Serialization.IXElementSerialization.FromXElement(System.Xml.Linq.XElement,TradingPlatform.BusinessLayer.Serialization.DeserializationInfo)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TradingPlatform.BusinessLayer.Utils
  commentId: N:TradingPlatform.BusinessLayer.Utils
  name: TradingPlatform.BusinessLayer.Utils
  nameWithType: TradingPlatform.BusinessLayer.Utils
  fullName: TradingPlatform.BusinessLayer.Utils
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TradingPlatform.BusinessLayer.Serialization.IXElementSerialization
  commentId: T:TradingPlatform.BusinessLayer.Serialization.IXElementSerialization
  parent: TradingPlatform.BusinessLayer.Serialization
  name: IXElementSerialization
  nameWithType: IXElementSerialization
  fullName: TradingPlatform.BusinessLayer.Serialization.IXElementSerialization
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TradingPlatform.BusinessLayer.Serialization
  commentId: N:TradingPlatform.BusinessLayer.Serialization
  name: TradingPlatform.BusinessLayer.Serialization
  nameWithType: TradingPlatform.BusinessLayer.Serialization
  fullName: TradingPlatform.BusinessLayer.Serialization
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TradingPlatform.BusinessLayer.Utils.AlertData.Columns*
  commentId: Overload:TradingPlatform.BusinessLayer.Utils.AlertData.Columns
  name: Columns
  nameWithType: AlertData.Columns
  fullName: TradingPlatform.BusinessLayer.Utils.AlertData.Columns
- uid: System.Collections.Generic.List{TradingPlatform.BusinessLayer.Utils.ColumnBaseInformation}
  commentId: T:System.Collections.Generic.List{TradingPlatform.BusinessLayer.Utils.ColumnBaseInformation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ColumnBaseInformation>
  nameWithType: List<ColumnBaseInformation>
  fullName: System.Collections.Generic.List<TradingPlatform.BusinessLayer.Utils.ColumnBaseInformation>
  nameWithType.vb: List(Of ColumnBaseInformation)
  fullName.vb: System.Collections.Generic.List(Of TradingPlatform.BusinessLayer.Utils.ColumnBaseInformation)
  name.vb: List(Of ColumnBaseInformation)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TradingPlatform.BusinessLayer.Utils.ColumnBaseInformation
    name: ColumnBaseInformation
    nameWithType: ColumnBaseInformation
    fullName: TradingPlatform.BusinessLayer.Utils.ColumnBaseInformation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TradingPlatform.BusinessLayer.Utils.ColumnBaseInformation
    name: ColumnBaseInformation
    nameWithType: ColumnBaseInformation
    fullName: TradingPlatform.BusinessLayer.Utils.ColumnBaseInformation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TradingPlatform.BusinessLayer.Utils.AlertData.Groups*
  commentId: Overload:TradingPlatform.BusinessLayer.Utils.AlertData.Groups
  name: Groups
  nameWithType: AlertData.Groups
  fullName: TradingPlatform.BusinessLayer.Utils.AlertData.Groups
- uid: System.Collections.Generic.List{TradingPlatform.BusinessLayer.Utils.ConditionGroup}
  commentId: T:System.Collections.Generic.List{TradingPlatform.BusinessLayer.Utils.ConditionGroup}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ConditionGroup>
  nameWithType: List<ConditionGroup>
  fullName: System.Collections.Generic.List<TradingPlatform.BusinessLayer.Utils.ConditionGroup>
  nameWithType.vb: List(Of ConditionGroup)
  fullName.vb: System.Collections.Generic.List(Of TradingPlatform.BusinessLayer.Utils.ConditionGroup)
  name.vb: List(Of ConditionGroup)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TradingPlatform.BusinessLayer.Utils.ConditionGroup
    name: ConditionGroup
    nameWithType: ConditionGroup
    fullName: TradingPlatform.BusinessLayer.Utils.ConditionGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TradingPlatform.BusinessLayer.Utils.ConditionGroup
    name: ConditionGroup
    nameWithType: ConditionGroup
    fullName: TradingPlatform.BusinessLayer.Utils.ConditionGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Utils.AlertData.Actions*
  commentId: Overload:TradingPlatform.BusinessLayer.Utils.AlertData.Actions
  name: Actions
  nameWithType: AlertData.Actions
  fullName: TradingPlatform.BusinessLayer.Utils.AlertData.Actions
- uid: System.Collections.Generic.List{TradingPlatform.BusinessLayer.Utils.ActionWrapper}
  commentId: T:System.Collections.Generic.List{TradingPlatform.BusinessLayer.Utils.ActionWrapper}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ActionWrapper>
  nameWithType: List<ActionWrapper>
  fullName: System.Collections.Generic.List<TradingPlatform.BusinessLayer.Utils.ActionWrapper>
  nameWithType.vb: List(Of ActionWrapper)
  fullName.vb: System.Collections.Generic.List(Of TradingPlatform.BusinessLayer.Utils.ActionWrapper)
  name.vb: List(Of ActionWrapper)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TradingPlatform.BusinessLayer.Utils.ActionWrapper
    name: ActionWrapper
    nameWithType: ActionWrapper
    fullName: TradingPlatform.BusinessLayer.Utils.ActionWrapper
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TradingPlatform.BusinessLayer.Utils.ActionWrapper
    name: ActionWrapper
    nameWithType: ActionWrapper
    fullName: TradingPlatform.BusinessLayer.Utils.ActionWrapper
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Utils.AlertData.Enabled*
  commentId: Overload:TradingPlatform.BusinessLayer.Utils.AlertData.Enabled
  name: Enabled
  nameWithType: AlertData.Enabled
  fullName: TradingPlatform.BusinessLayer.Utils.AlertData.Enabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TradingPlatform.BusinessLayer.Utils.AlertData.TableDictionary*
  commentId: Overload:TradingPlatform.BusinessLayer.Utils.AlertData.TableDictionary
  name: TableDictionary
  nameWithType: AlertData.TableDictionary
  fullName: TradingPlatform.BusinessLayer.Utils.AlertData.TableDictionary
- uid: System.Collections.Hashtable
  commentId: T:System.Collections.Hashtable
  parent: System.Collections
  isExternal: true
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: TradingPlatform.BusinessLayer.Utils.AlertData.IsColoringAlert*
  commentId: Overload:TradingPlatform.BusinessLayer.Utils.AlertData.IsColoringAlert
  name: IsColoringAlert
  nameWithType: AlertData.IsColoringAlert
  fullName: TradingPlatform.BusinessLayer.Utils.AlertData.IsColoringAlert
- uid: TradingPlatform.BusinessLayer.Utils.AlertData.FilterAlert*
  commentId: Overload:TradingPlatform.BusinessLayer.Utils.AlertData.FilterAlert
  name: FilterAlert
  nameWithType: AlertData.FilterAlert
  fullName: TradingPlatform.BusinessLayer.Utils.AlertData.FilterAlert
- uid: TradingPlatform.BusinessLayer.Utils.AlertData.SearchAlert*
  commentId: Overload:TradingPlatform.BusinessLayer.Utils.AlertData.SearchAlert
  name: SearchAlert
  nameWithType: AlertData.SearchAlert
  fullName: TradingPlatform.BusinessLayer.Utils.AlertData.SearchAlert
- uid: TradingPlatform.BusinessLayer.Utils.AlertData.ToRemove*
  commentId: Overload:TradingPlatform.BusinessLayer.Utils.AlertData.ToRemove
  name: ToRemove
  nameWithType: AlertData.ToRemove
  fullName: TradingPlatform.BusinessLayer.Utils.AlertData.ToRemove
- uid: TradingPlatform.BusinessLayer.Utils.AlertData.ID*
  commentId: Overload:TradingPlatform.BusinessLayer.Utils.AlertData.ID
  name: ID
  nameWithType: AlertData.ID
  fullName: TradingPlatform.BusinessLayer.Utils.AlertData.ID
- uid: TradingPlatform.BusinessLayer.Utils.AlertData.CommandSender*
  commentId: Overload:TradingPlatform.BusinessLayer.Utils.AlertData.CommandSender
  name: CommandSender
  nameWithType: AlertData.CommandSender
  fullName: TradingPlatform.BusinessLayer.Utils.AlertData.CommandSender
- uid: TradingPlatform.BusinessLayer.Utils.AlertData.#ctor*
  commentId: Overload:TradingPlatform.BusinessLayer.Utils.AlertData.#ctor
  name: AlertData
  nameWithType: AlertData.AlertData
  fullName: TradingPlatform.BusinessLayer.Utils.AlertData.AlertData
- uid: TradingPlatform.BusinessLayer.Utils.AlertData.ToXElement*
  commentId: Overload:TradingPlatform.BusinessLayer.Utils.AlertData.ToXElement
  name: ToXElement
  nameWithType: AlertData.ToXElement
  fullName: TradingPlatform.BusinessLayer.Utils.AlertData.ToXElement
- uid: TradingPlatform.BusinessLayer.Serialization.IXElementSerialization.ToXElement
  commentId: M:TradingPlatform.BusinessLayer.Serialization.IXElementSerialization.ToXElement
  parent: TradingPlatform.BusinessLayer.Serialization.IXElementSerialization
  name: ToXElement()
  nameWithType: IXElementSerialization.ToXElement()
  fullName: TradingPlatform.BusinessLayer.Serialization.IXElementSerialization.ToXElement()
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Serialization.IXElementSerialization.ToXElement
    name: ToXElement
    nameWithType: IXElementSerialization.ToXElement
    fullName: TradingPlatform.BusinessLayer.Serialization.IXElementSerialization.ToXElement
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Serialization.IXElementSerialization.ToXElement
    name: ToXElement
    nameWithType: IXElementSerialization.ToXElement
    fullName: TradingPlatform.BusinessLayer.Serialization.IXElementSerialization.ToXElement
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.Linq.XElement
  commentId: T:System.Xml.Linq.XElement
  parent: System.Xml.Linq
  isExternal: true
  name: XElement
  nameWithType: XElement
  fullName: System.Xml.Linq.XElement
- uid: System.Xml.Linq
  commentId: N:System.Xml.Linq
  isExternal: true
  name: System.Xml.Linq
  nameWithType: System.Xml.Linq
  fullName: System.Xml.Linq
- uid: TradingPlatform.BusinessLayer.Utils.AlertData.FromXElement*
  commentId: Overload:TradingPlatform.BusinessLayer.Utils.AlertData.FromXElement
  name: FromXElement
  nameWithType: AlertData.FromXElement
  fullName: TradingPlatform.BusinessLayer.Utils.AlertData.FromXElement
- uid: TradingPlatform.BusinessLayer.Serialization.IXElementSerialization.FromXElement(System.Xml.Linq.XElement,TradingPlatform.BusinessLayer.Serialization.DeserializationInfo)
  commentId: M:TradingPlatform.BusinessLayer.Serialization.IXElementSerialization.FromXElement(System.Xml.Linq.XElement,TradingPlatform.BusinessLayer.Serialization.DeserializationInfo)
  parent: TradingPlatform.BusinessLayer.Serialization.IXElementSerialization
  isExternal: true
  name: FromXElement(XElement, DeserializationInfo)
  nameWithType: IXElementSerialization.FromXElement(XElement, DeserializationInfo)
  fullName: TradingPlatform.BusinessLayer.Serialization.IXElementSerialization.FromXElement(System.Xml.Linq.XElement, TradingPlatform.BusinessLayer.Serialization.DeserializationInfo)
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Serialization.IXElementSerialization.FromXElement(System.Xml.Linq.XElement,TradingPlatform.BusinessLayer.Serialization.DeserializationInfo)
    name: FromXElement
    nameWithType: IXElementSerialization.FromXElement
    fullName: TradingPlatform.BusinessLayer.Serialization.IXElementSerialization.FromXElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.Linq.XElement
    name: XElement
    nameWithType: XElement
    fullName: System.Xml.Linq.XElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TradingPlatform.BusinessLayer.Serialization.DeserializationInfo
    name: DeserializationInfo
    nameWithType: DeserializationInfo
    fullName: TradingPlatform.BusinessLayer.Serialization.DeserializationInfo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Serialization.IXElementSerialization.FromXElement(System.Xml.Linq.XElement,TradingPlatform.BusinessLayer.Serialization.DeserializationInfo)
    name: FromXElement
    nameWithType: IXElementSerialization.FromXElement
    fullName: TradingPlatform.BusinessLayer.Serialization.IXElementSerialization.FromXElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.Linq.XElement
    name: XElement
    nameWithType: XElement
    fullName: System.Xml.Linq.XElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TradingPlatform.BusinessLayer.Serialization.DeserializationInfo
    name: DeserializationInfo
    nameWithType: DeserializationInfo
    fullName: TradingPlatform.BusinessLayer.Serialization.DeserializationInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Serialization.DeserializationInfo
  commentId: T:TradingPlatform.BusinessLayer.Serialization.DeserializationInfo
  parent: TradingPlatform.BusinessLayer.Serialization
  name: DeserializationInfo
  nameWithType: DeserializationInfo
  fullName: TradingPlatform.BusinessLayer.Serialization.DeserializationInfo
