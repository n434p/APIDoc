### YamlMime:ManagedReference
items:
- uid: TradingPlatform.BusinessLayer.MailUtils
  commentId: T:TradingPlatform.BusinessLayer.MailUtils
  id: MailUtils
  parent: TradingPlatform.BusinessLayer
  children:
  - TradingPlatform.BusinessLayer.MailUtils.MailLogin
  - TradingPlatform.BusinessLayer.MailUtils.MailPassword
  - TradingPlatform.BusinessLayer.MailUtils.MailSMTPPort
  - TradingPlatform.BusinessLayer.MailUtils.MailSMTPServer
  - TradingPlatform.BusinessLayer.MailUtils.MailSMTPServerTimeout
  - TradingPlatform.BusinessLayer.MailUtils.MailUseSSLConnection
  - TradingPlatform.BusinessLayer.MailUtils.SendAsync(TradingPlatform.BusinessLayer.EmailParameters)
  - TradingPlatform.BusinessLayer.MailUtils.Settings
  langs:
  - csharp
  - vb
  name: MailUtils
  nameWithType: MailUtils
  fullName: TradingPlatform.BusinessLayer.MailUtils
  type: Class
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/MailUtils/MailUtils.cs
    id: MailUtils
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/MailUtils/MailUtils.cs
    startLine: 10
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: 'public class MailUtils : ICustomizable'
    content.vb: >-
      Public Class MailUtils
          Implements ICustomizable
  inheritance:
  - System.Object
  implements:
  - TradingPlatform.BusinessLayer.ICustomizable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TradingPlatform.BusinessLayer.MailUtils.MailUseSSLConnection
  commentId: P:TradingPlatform.BusinessLayer.MailUtils.MailUseSSLConnection
  id: MailUseSSLConnection
  parent: TradingPlatform.BusinessLayer.MailUtils
  langs:
  - csharp
  - vb
  name: MailUseSSLConnection
  nameWithType: MailUtils.MailUseSSLConnection
  fullName: TradingPlatform.BusinessLayer.MailUtils.MailUseSSLConnection
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/MailUtils/MailUtils.cs
    id: MailUseSSLConnection
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/MailUtils/MailUtils.cs
    startLine: 14
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public bool MailUseSSLConnection { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property MailUseSSLConnection As Boolean
  overload: TradingPlatform.BusinessLayer.MailUtils.MailUseSSLConnection*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.MailUtils.MailLogin
  commentId: P:TradingPlatform.BusinessLayer.MailUtils.MailLogin
  id: MailLogin
  parent: TradingPlatform.BusinessLayer.MailUtils
  langs:
  - csharp
  - vb
  name: MailLogin
  nameWithType: MailUtils.MailLogin
  fullName: TradingPlatform.BusinessLayer.MailUtils.MailLogin
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/MailUtils/MailUtils.cs
    id: MailLogin
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/MailUtils/MailUtils.cs
    startLine: 15
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public string MailLogin { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property MailLogin As String
  overload: TradingPlatform.BusinessLayer.MailUtils.MailLogin*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.MailUtils.MailPassword
  commentId: P:TradingPlatform.BusinessLayer.MailUtils.MailPassword
  id: MailPassword
  parent: TradingPlatform.BusinessLayer.MailUtils
  langs:
  - csharp
  - vb
  name: MailPassword
  nameWithType: MailUtils.MailPassword
  fullName: TradingPlatform.BusinessLayer.MailUtils.MailPassword
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/MailUtils/MailUtils.cs
    id: MailPassword
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/MailUtils/MailUtils.cs
    startLine: 16
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public string MailPassword { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property MailPassword As String
  overload: TradingPlatform.BusinessLayer.MailUtils.MailPassword*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.MailUtils.MailSMTPServerTimeout
  commentId: P:TradingPlatform.BusinessLayer.MailUtils.MailSMTPServerTimeout
  id: MailSMTPServerTimeout
  parent: TradingPlatform.BusinessLayer.MailUtils
  langs:
  - csharp
  - vb
  name: MailSMTPServerTimeout
  nameWithType: MailUtils.MailSMTPServerTimeout
  fullName: TradingPlatform.BusinessLayer.MailUtils.MailSMTPServerTimeout
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/MailUtils/MailUtils.cs
    id: MailSMTPServerTimeout
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/MailUtils/MailUtils.cs
    startLine: 17
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public int MailSMTPServerTimeout { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property MailSMTPServerTimeout As Integer
  overload: TradingPlatform.BusinessLayer.MailUtils.MailSMTPServerTimeout*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.MailUtils.MailSMTPServer
  commentId: P:TradingPlatform.BusinessLayer.MailUtils.MailSMTPServer
  id: MailSMTPServer
  parent: TradingPlatform.BusinessLayer.MailUtils
  langs:
  - csharp
  - vb
  name: MailSMTPServer
  nameWithType: MailUtils.MailSMTPServer
  fullName: TradingPlatform.BusinessLayer.MailUtils.MailSMTPServer
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/MailUtils/MailUtils.cs
    id: MailSMTPServer
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/MailUtils/MailUtils.cs
    startLine: 18
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public string MailSMTPServer { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property MailSMTPServer As String
  overload: TradingPlatform.BusinessLayer.MailUtils.MailSMTPServer*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.MailUtils.MailSMTPPort
  commentId: P:TradingPlatform.BusinessLayer.MailUtils.MailSMTPPort
  id: MailSMTPPort
  parent: TradingPlatform.BusinessLayer.MailUtils
  langs:
  - csharp
  - vb
  name: MailSMTPPort
  nameWithType: MailUtils.MailSMTPPort
  fullName: TradingPlatform.BusinessLayer.MailUtils.MailSMTPPort
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/MailUtils/MailUtils.cs
    id: MailSMTPPort
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/MailUtils/MailUtils.cs
    startLine: 19
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public int MailSMTPPort { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property MailSMTPPort As Integer
  overload: TradingPlatform.BusinessLayer.MailUtils.MailSMTPPort*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.MailUtils.SendAsync(TradingPlatform.BusinessLayer.EmailParameters)
  commentId: M:TradingPlatform.BusinessLayer.MailUtils.SendAsync(TradingPlatform.BusinessLayer.EmailParameters)
  id: SendAsync(TradingPlatform.BusinessLayer.EmailParameters)
  parent: TradingPlatform.BusinessLayer.MailUtils
  langs:
  - csharp
  - vb
  name: SendAsync(EmailParameters)
  nameWithType: MailUtils.SendAsync(EmailParameters)
  fullName: TradingPlatform.BusinessLayer.MailUtils.SendAsync(TradingPlatform.BusinessLayer.EmailParameters)
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/MailUtils/MailUtils.cs
    id: SendAsync
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/MailUtils/MailUtils.cs
    startLine: 141
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  summary: "\nОтправит сообщение по E-mail\n"
  example: []
  syntax:
    content: public void SendAsync(EmailParameters parameters)
    parameters:
    - id: parameters
      type: TradingPlatform.BusinessLayer.EmailParameters
    content.vb: Public Sub SendAsync(parameters As EmailParameters)
  overload: TradingPlatform.BusinessLayer.MailUtils.SendAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.MailUtils.Settings
  commentId: P:TradingPlatform.BusinessLayer.MailUtils.Settings
  id: Settings
  parent: TradingPlatform.BusinessLayer.MailUtils
  langs:
  - csharp
  - vb
  name: Settings
  nameWithType: MailUtils.Settings
  fullName: TradingPlatform.BusinessLayer.MailUtils.Settings
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/MailUtils/MailUtils.cs
    id: Settings
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/MailUtils/MailUtils.cs
    startLine: 166
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public IList<SettingItem> Settings { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{TradingPlatform.BusinessLayer.SettingItem}
    content.vb: Public Property Settings As IList(Of SettingItem)
  overload: TradingPlatform.BusinessLayer.MailUtils.Settings*
  implements:
  - TradingPlatform.BusinessLayer.ICustomizable.Settings
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: TradingPlatform.BusinessLayer
  commentId: N:TradingPlatform.BusinessLayer
  name: TradingPlatform.BusinessLayer
  nameWithType: TradingPlatform.BusinessLayer
  fullName: TradingPlatform.BusinessLayer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TradingPlatform.BusinessLayer.ICustomizable
  commentId: T:TradingPlatform.BusinessLayer.ICustomizable
  parent: TradingPlatform.BusinessLayer
  name: ICustomizable
  nameWithType: ICustomizable
  fullName: TradingPlatform.BusinessLayer.ICustomizable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TradingPlatform.BusinessLayer.MailUtils.MailUseSSLConnection*
  commentId: Overload:TradingPlatform.BusinessLayer.MailUtils.MailUseSSLConnection
  name: MailUseSSLConnection
  nameWithType: MailUtils.MailUseSSLConnection
  fullName: TradingPlatform.BusinessLayer.MailUtils.MailUseSSLConnection
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TradingPlatform.BusinessLayer.MailUtils.MailLogin*
  commentId: Overload:TradingPlatform.BusinessLayer.MailUtils.MailLogin
  name: MailLogin
  nameWithType: MailUtils.MailLogin
  fullName: TradingPlatform.BusinessLayer.MailUtils.MailLogin
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TradingPlatform.BusinessLayer.MailUtils.MailPassword*
  commentId: Overload:TradingPlatform.BusinessLayer.MailUtils.MailPassword
  name: MailPassword
  nameWithType: MailUtils.MailPassword
  fullName: TradingPlatform.BusinessLayer.MailUtils.MailPassword
- uid: TradingPlatform.BusinessLayer.MailUtils.MailSMTPServerTimeout*
  commentId: Overload:TradingPlatform.BusinessLayer.MailUtils.MailSMTPServerTimeout
  name: MailSMTPServerTimeout
  nameWithType: MailUtils.MailSMTPServerTimeout
  fullName: TradingPlatform.BusinessLayer.MailUtils.MailSMTPServerTimeout
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TradingPlatform.BusinessLayer.MailUtils.MailSMTPServer*
  commentId: Overload:TradingPlatform.BusinessLayer.MailUtils.MailSMTPServer
  name: MailSMTPServer
  nameWithType: MailUtils.MailSMTPServer
  fullName: TradingPlatform.BusinessLayer.MailUtils.MailSMTPServer
- uid: TradingPlatform.BusinessLayer.MailUtils.MailSMTPPort*
  commentId: Overload:TradingPlatform.BusinessLayer.MailUtils.MailSMTPPort
  name: MailSMTPPort
  nameWithType: MailUtils.MailSMTPPort
  fullName: TradingPlatform.BusinessLayer.MailUtils.MailSMTPPort
- uid: TradingPlatform.BusinessLayer.MailUtils.SendAsync*
  commentId: Overload:TradingPlatform.BusinessLayer.MailUtils.SendAsync
  name: SendAsync
  nameWithType: MailUtils.SendAsync
  fullName: TradingPlatform.BusinessLayer.MailUtils.SendAsync
- uid: TradingPlatform.BusinessLayer.EmailParameters
  commentId: T:TradingPlatform.BusinessLayer.EmailParameters
  parent: TradingPlatform.BusinessLayer
  name: EmailParameters
  nameWithType: EmailParameters
  fullName: TradingPlatform.BusinessLayer.EmailParameters
- uid: TradingPlatform.BusinessLayer.MailUtils.Settings*
  commentId: Overload:TradingPlatform.BusinessLayer.MailUtils.Settings
  name: Settings
  nameWithType: MailUtils.Settings
  fullName: TradingPlatform.BusinessLayer.MailUtils.Settings
- uid: TradingPlatform.BusinessLayer.ICustomizable.Settings
  commentId: P:TradingPlatform.BusinessLayer.ICustomizable.Settings
  parent: TradingPlatform.BusinessLayer.ICustomizable
  name: Settings
  nameWithType: ICustomizable.Settings
  fullName: TradingPlatform.BusinessLayer.ICustomizable.Settings
- uid: System.Collections.Generic.IList{TradingPlatform.BusinessLayer.SettingItem}
  commentId: T:System.Collections.Generic.IList{TradingPlatform.BusinessLayer.SettingItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<SettingItem>
  nameWithType: IList<SettingItem>
  fullName: System.Collections.Generic.IList<TradingPlatform.BusinessLayer.SettingItem>
  nameWithType.vb: IList(Of SettingItem)
  fullName.vb: System.Collections.Generic.IList(Of TradingPlatform.BusinessLayer.SettingItem)
  name.vb: IList(Of SettingItem)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TradingPlatform.BusinessLayer.SettingItem
    name: SettingItem
    nameWithType: SettingItem
    fullName: TradingPlatform.BusinessLayer.SettingItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TradingPlatform.BusinessLayer.SettingItem
    name: SettingItem
    nameWithType: SettingItem
    fullName: TradingPlatform.BusinessLayer.SettingItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
