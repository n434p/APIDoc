### YamlMime:ManagedReference
items:
- uid: TradingPlatform.BusinessLayer.EmailParameters
  commentId: T:TradingPlatform.BusinessLayer.EmailParameters
  id: EmailParameters
  parent: TradingPlatform.BusinessLayer
  children:
  - TradingPlatform.BusinessLayer.EmailParameters.address
  - TradingPlatform.BusinessLayer.EmailParameters.asFile
  - TradingPlatform.BusinessLayer.EmailParameters.callBack
  - TradingPlatform.BusinessLayer.EmailParameters.fileNames
  - TradingPlatform.BusinessLayer.EmailParameters.subject
  - TradingPlatform.BusinessLayer.EmailParameters.text
  langs:
  - csharp
  - vb
  name: EmailParameters
  nameWithType: EmailParameters
  fullName: TradingPlatform.BusinessLayer.EmailParameters
  type: Class
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/MailUtils/EmailParameters.cs
    id: EmailParameters
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/MailUtils/EmailParameters.cs
    startLine: 11
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  summary: "\nВсе параметры, которые могут использоваться при отправке email\n"
  example: []
  syntax:
    content: public class EmailParameters
    content.vb: Public Class EmailParameters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TradingPlatform.BusinessLayer.EmailParameters.address
  commentId: F:TradingPlatform.BusinessLayer.EmailParameters.address
  id: address
  parent: TradingPlatform.BusinessLayer.EmailParameters
  langs:
  - csharp
  - vb
  name: address
  nameWithType: EmailParameters.address
  fullName: TradingPlatform.BusinessLayer.EmailParameters.address
  type: Field
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/MailUtils/EmailParameters.cs
    id: address
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/MailUtils/EmailParameters.cs
    startLine: 13
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public string[] address
    return:
      type: System.String[]
    content.vb: Public address As String()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.EmailParameters.subject
  commentId: F:TradingPlatform.BusinessLayer.EmailParameters.subject
  id: subject
  parent: TradingPlatform.BusinessLayer.EmailParameters
  langs:
  - csharp
  - vb
  name: subject
  nameWithType: EmailParameters.subject
  fullName: TradingPlatform.BusinessLayer.EmailParameters.subject
  type: Field
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/MailUtils/EmailParameters.cs
    id: subject
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/MailUtils/EmailParameters.cs
    startLine: 14
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public string subject
    return:
      type: System.String
    content.vb: Public subject As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.EmailParameters.text
  commentId: F:TradingPlatform.BusinessLayer.EmailParameters.text
  id: text
  parent: TradingPlatform.BusinessLayer.EmailParameters
  langs:
  - csharp
  - vb
  name: text
  nameWithType: EmailParameters.text
  fullName: TradingPlatform.BusinessLayer.EmailParameters.text
  type: Field
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/MailUtils/EmailParameters.cs
    id: text
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/MailUtils/EmailParameters.cs
    startLine: 15
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public string text
    return:
      type: System.String
    content.vb: Public text As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.EmailParameters.fileNames
  commentId: F:TradingPlatform.BusinessLayer.EmailParameters.fileNames
  id: fileNames
  parent: TradingPlatform.BusinessLayer.EmailParameters
  langs:
  - csharp
  - vb
  name: fileNames
  nameWithType: EmailParameters.fileNames
  fullName: TradingPlatform.BusinessLayer.EmailParameters.fileNames
  type: Field
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/MailUtils/EmailParameters.cs
    id: fileNames
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/MailUtils/EmailParameters.cs
    startLine: 16
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public string[] fileNames
    return:
      type: System.String[]
    content.vb: Public fileNames As String()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.EmailParameters.asFile
  commentId: F:TradingPlatform.BusinessLayer.EmailParameters.asFile
  id: asFile
  parent: TradingPlatform.BusinessLayer.EmailParameters
  langs:
  - csharp
  - vb
  name: asFile
  nameWithType: EmailParameters.asFile
  fullName: TradingPlatform.BusinessLayer.EmailParameters.asFile
  type: Field
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/MailUtils/EmailParameters.cs
    id: asFile
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/MailUtils/EmailParameters.cs
    startLine: 17
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public bool asFile
    return:
      type: System.Boolean
    content.vb: Public asFile As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.EmailParameters.callBack
  commentId: F:TradingPlatform.BusinessLayer.EmailParameters.callBack
  id: callBack
  parent: TradingPlatform.BusinessLayer.EmailParameters
  langs:
  - csharp
  - vb
  name: callBack
  nameWithType: EmailParameters.callBack
  fullName: TradingPlatform.BusinessLayer.EmailParameters.callBack
  type: Field
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/MailUtils/EmailParameters.cs
    id: callBack
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/MailUtils/EmailParameters.cs
    startLine: 18
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public SendMailCallbackDelegate callBack
    return:
      type: TradingPlatform.BusinessLayer.SendMailCallbackDelegate
    content.vb: Public callBack As SendMailCallbackDelegate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TradingPlatform.BusinessLayer
  commentId: N:TradingPlatform.BusinessLayer
  name: TradingPlatform.BusinessLayer
  nameWithType: TradingPlatform.BusinessLayer
  fullName: TradingPlatform.BusinessLayer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TradingPlatform.BusinessLayer.SendMailCallbackDelegate
  commentId: T:TradingPlatform.BusinessLayer.SendMailCallbackDelegate
  parent: TradingPlatform.BusinessLayer
  name: SendMailCallbackDelegate
  nameWithType: SendMailCallbackDelegate
  fullName: TradingPlatform.BusinessLayer.SendMailCallbackDelegate
