### YamlMime:ManagedReference
items:
- uid: TradingPlatform.BusinessLayer.Integration.VendorManager
  commentId: T:TradingPlatform.BusinessLayer.Integration.VendorManager
  id: VendorManager
  parent: TradingPlatform.BusinessLayer.Integration
  children:
  - TradingPlatform.BusinessLayer.Integration.VendorManager.Item(System.String)
  - TradingPlatform.BusinessLayer.Integration.VendorManager.Vendors
  langs:
  - csharp
  - vb
  name: VendorManager
  nameWithType: VendorManager
  fullName: TradingPlatform.BusinessLayer.Integration.VendorManager
  type: Class
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/VendorManager.cs
    id: VendorManager
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/VendorManager.cs
    startLine: 8
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Integration
  syntax:
    content: public class VendorManager
    content.vb: Public Class VendorManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TradingPlatform.BusinessLayer.Integration.VendorManager.Vendors
  commentId: P:TradingPlatform.BusinessLayer.Integration.VendorManager.Vendors
  id: Vendors
  parent: TradingPlatform.BusinessLayer.Integration.VendorManager
  langs:
  - csharp
  - vb
  name: Vendors
  nameWithType: VendorManager.Vendors
  fullName: TradingPlatform.BusinessLayer.Integration.VendorManager.Vendors
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/VendorManager.cs
    id: Vendors
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/VendorManager.cs
    startLine: 12
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Integration
  syntax:
    content: public VendorInfo[] Vendors { get; }
    parameters: []
    return:
      type: TradingPlatform.BusinessLayer.Integration.VendorInfo[]
    content.vb: Public ReadOnly Property Vendors As VendorInfo()
  overload: TradingPlatform.BusinessLayer.Integration.VendorManager.Vendors*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.Integration.VendorManager.Item(System.String)
  commentId: P:TradingPlatform.BusinessLayer.Integration.VendorManager.Item(System.String)
  id: Item(System.String)
  parent: TradingPlatform.BusinessLayer.Integration.VendorManager
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: VendorManager.Item[String]
  fullName: TradingPlatform.BusinessLayer.Integration.VendorManager.Item[System.String]
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/VendorManager.cs
    id: this[]
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/VendorManager.cs
    startLine: 15
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Integration
  syntax:
    content: public VendorInfo this[string vendorName] { get; }
    parameters:
    - id: vendorName
      type: System.String
    return:
      type: TradingPlatform.BusinessLayer.Integration.VendorInfo
    content.vb: Public ReadOnly Property Item(vendorName As String) As VendorInfo
  overload: TradingPlatform.BusinessLayer.Integration.VendorManager.Item*
  nameWithType.vb: VendorManager.Item(String)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TradingPlatform.BusinessLayer.Integration.VendorManager.Item(System.String)
  name.vb: Item(String)
references:
- uid: TradingPlatform.BusinessLayer.Integration
  commentId: N:TradingPlatform.BusinessLayer.Integration
  name: TradingPlatform.BusinessLayer.Integration
  nameWithType: TradingPlatform.BusinessLayer.Integration
  fullName: TradingPlatform.BusinessLayer.Integration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TradingPlatform.BusinessLayer.Integration.VendorManager.Vendors*
  commentId: Overload:TradingPlatform.BusinessLayer.Integration.VendorManager.Vendors
  name: Vendors
  nameWithType: VendorManager.Vendors
  fullName: TradingPlatform.BusinessLayer.Integration.VendorManager.Vendors
- uid: TradingPlatform.BusinessLayer.Integration.VendorInfo[]
  isExternal: true
  name: VendorInfo[]
  nameWithType: VendorInfo[]
  fullName: TradingPlatform.BusinessLayer.Integration.VendorInfo[]
  nameWithType.vb: VendorInfo()
  fullName.vb: TradingPlatform.BusinessLayer.Integration.VendorInfo()
  name.vb: VendorInfo()
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Integration.VendorInfo
    name: VendorInfo
    nameWithType: VendorInfo
    fullName: TradingPlatform.BusinessLayer.Integration.VendorInfo
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Integration.VendorInfo
    name: VendorInfo
    nameWithType: VendorInfo
    fullName: TradingPlatform.BusinessLayer.Integration.VendorInfo
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TradingPlatform.BusinessLayer.Integration.VendorManager.Item*
  commentId: Overload:TradingPlatform.BusinessLayer.Integration.VendorManager.Item
  name: Item
  nameWithType: VendorManager.Item
  fullName: TradingPlatform.BusinessLayer.Integration.VendorManager.Item
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TradingPlatform.BusinessLayer.Integration.VendorInfo
  commentId: T:TradingPlatform.BusinessLayer.Integration.VendorInfo
  parent: TradingPlatform.BusinessLayer.Integration
  name: VendorInfo
  nameWithType: VendorInfo
  fullName: TradingPlatform.BusinessLayer.Integration.VendorInfo
