### YamlMime:ManagedReference
items:
- uid: TradingPlatform.BusinessLayer.Last
  commentId: T:TradingPlatform.BusinessLayer.Last
  id: Last
  parent: TradingPlatform.BusinessLayer
  children:
  - TradingPlatform.BusinessLayer.Last.#ctor(System.String,System.Double,System.Double,System.DateTime)
  - TradingPlatform.BusinessLayer.Last.AggressorFlag
  - TradingPlatform.BusinessLayer.Last.Price
  - TradingPlatform.BusinessLayer.Last.Size
  - TradingPlatform.BusinessLayer.Last.ToString
  - TradingPlatform.BusinessLayer.Last.Type
  langs:
  - csharp
  - vb
  name: Last
  nameWithType: Last
  fullName: TradingPlatform.BusinessLayer.Last
  type: Class
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/Quote/Last.cs
    id: Last
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/Quote/Last.cs
    startLine: 9
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: >-
      [DataContract(Name = "Last", Namespace = "TradingPlatform")]

      public class Last : MessageQuote
    content.vb: >-
      <DataContract(Name:="Last", Namespace:="TradingPlatform")>

      Public Class Last
          Inherits MessageQuote
  inheritance:
  - System.Object
  - TradingPlatform.BusinessLayer.Integration.Message
  - TradingPlatform.BusinessLayer.MessageQuote
  inheritedMembers:
  - TradingPlatform.BusinessLayer.MessageQuote.InstrumentId
  - TradingPlatform.BusinessLayer.MessageQuote.Time
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Last
    - name: Namespace
      type: System.String
      value: TradingPlatform
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TradingPlatform.BusinessLayer.Last.Type
  commentId: P:TradingPlatform.BusinessLayer.Last.Type
  id: Type
  parent: TradingPlatform.BusinessLayer.Last
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Last.Type
  fullName: TradingPlatform.BusinessLayer.Last.Type
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/Quote/Last.cs
    id: Type
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/Quote/Last.cs
    startLine: 12
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public override MessageType Type { get; }
    parameters: []
    return:
      type: TradingPlatform.BusinessLayer.Integration.MessageType
    content.vb: Public Overrides ReadOnly Property Type As MessageType
  overridden: TradingPlatform.BusinessLayer.Integration.Message.Type
  overload: TradingPlatform.BusinessLayer.Last.Type*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.Last.Price
  commentId: P:TradingPlatform.BusinessLayer.Last.Price
  id: Price
  parent: TradingPlatform.BusinessLayer.Last
  langs:
  - csharp
  - vb
  name: Price
  nameWithType: Last.Price
  fullName: TradingPlatform.BusinessLayer.Last.Price
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/Quote/Last.cs
    id: Price
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/Quote/Last.cs
    startLine: 14
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: >-
      [DataMember(Name = "Price")]

      public double Price { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <DataMember(Name:="Price")>

      Public ReadOnly Property Price As Double
  overload: TradingPlatform.BusinessLayer.Last.Price*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Price
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.Last.Size
  commentId: P:TradingPlatform.BusinessLayer.Last.Size
  id: Size
  parent: TradingPlatform.BusinessLayer.Last
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: Last.Size
  fullName: TradingPlatform.BusinessLayer.Last.Size
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/Quote/Last.cs
    id: Size
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/Quote/Last.cs
    startLine: 17
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: >-
      [DataMember(Name = "Size")]

      public double Size { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <DataMember(Name:="Size")>

      Public ReadOnly Property Size As Double
  overload: TradingPlatform.BusinessLayer.Last.Size*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Size
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.Last.AggressorFlag
  commentId: P:TradingPlatform.BusinessLayer.Last.AggressorFlag
  id: AggressorFlag
  parent: TradingPlatform.BusinessLayer.Last
  langs:
  - csharp
  - vb
  name: AggressorFlag
  nameWithType: Last.AggressorFlag
  fullName: TradingPlatform.BusinessLayer.Last.AggressorFlag
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/Quote/Last.cs
    id: AggressorFlag
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/Quote/Last.cs
    startLine: 20
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: >-
      [DataMember(Name = "AggressorFlag")]

      public AggressorFlag AggressorFlag { get; set; }
    parameters: []
    return:
      type: TradingPlatform.BusinessLayer.AggressorFlag
    content.vb: >-
      <DataMember(Name:="AggressorFlag")>

      Public Property AggressorFlag As AggressorFlag
  overload: TradingPlatform.BusinessLayer.Last.AggressorFlag*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: AggressorFlag
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.Last.#ctor(System.String,System.Double,System.Double,System.DateTime)
  commentId: M:TradingPlatform.BusinessLayer.Last.#ctor(System.String,System.Double,System.Double,System.DateTime)
  id: '#ctor(System.String,System.Double,System.Double,System.DateTime)'
  parent: TradingPlatform.BusinessLayer.Last
  langs:
  - csharp
  - vb
  name: Last(String, Double, Double, DateTime)
  nameWithType: Last.Last(String, Double, Double, DateTime)
  fullName: TradingPlatform.BusinessLayer.Last.Last(System.String, System.Double, System.Double, System.DateTime)
  type: Constructor
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/Quote/Last.cs
    id: .ctor
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/Quote/Last.cs
    startLine: 23
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public Last(string symbol, double price, double size, DateTime time)
    parameters:
    - id: symbol
      type: System.String
    - id: price
      type: System.Double
    - id: size
      type: System.Double
    - id: time
      type: System.DateTime
    content.vb: Public Sub New(symbol As String, price As Double, size As Double, time As Date)
  overload: TradingPlatform.BusinessLayer.Last.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.Last.ToString
  commentId: M:TradingPlatform.BusinessLayer.Last.ToString
  id: ToString
  parent: TradingPlatform.BusinessLayer.Last
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Last.ToString()
  fullName: TradingPlatform.BusinessLayer.Last.ToString()
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/Quote/Last.cs
    id: ToString
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/Quote/Last.cs
    startLine: 30
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: TradingPlatform.BusinessLayer.Integration.Message.ToString
  overload: TradingPlatform.BusinessLayer.Last.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: TradingPlatform.BusinessLayer
  commentId: N:TradingPlatform.BusinessLayer
  name: TradingPlatform.BusinessLayer
  nameWithType: TradingPlatform.BusinessLayer
  fullName: TradingPlatform.BusinessLayer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TradingPlatform.BusinessLayer.Integration.Message
  commentId: T:TradingPlatform.BusinessLayer.Integration.Message
  parent: TradingPlatform.BusinessLayer.Integration
  name: Message
  nameWithType: Message
  fullName: TradingPlatform.BusinessLayer.Integration.Message
- uid: TradingPlatform.BusinessLayer.MessageQuote
  commentId: T:TradingPlatform.BusinessLayer.MessageQuote
  parent: TradingPlatform.BusinessLayer
  name: MessageQuote
  nameWithType: MessageQuote
  fullName: TradingPlatform.BusinessLayer.MessageQuote
- uid: TradingPlatform.BusinessLayer.MessageQuote.InstrumentId
  commentId: P:TradingPlatform.BusinessLayer.MessageQuote.InstrumentId
  parent: TradingPlatform.BusinessLayer.MessageQuote
  name: InstrumentId
  nameWithType: MessageQuote.InstrumentId
  fullName: TradingPlatform.BusinessLayer.MessageQuote.InstrumentId
- uid: TradingPlatform.BusinessLayer.MessageQuote.Time
  commentId: P:TradingPlatform.BusinessLayer.MessageQuote.Time
  parent: TradingPlatform.BusinessLayer.MessageQuote
  name: Time
  nameWithType: MessageQuote.Time
  fullName: TradingPlatform.BusinessLayer.MessageQuote.Time
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TradingPlatform.BusinessLayer.Integration
  commentId: N:TradingPlatform.BusinessLayer.Integration
  name: TradingPlatform.BusinessLayer.Integration
  nameWithType: TradingPlatform.BusinessLayer.Integration
  fullName: TradingPlatform.BusinessLayer.Integration
- uid: TradingPlatform.BusinessLayer.Integration.Message.Type
  commentId: P:TradingPlatform.BusinessLayer.Integration.Message.Type
  parent: TradingPlatform.BusinessLayer.Integration.Message
  name: Type
  nameWithType: Message.Type
  fullName: TradingPlatform.BusinessLayer.Integration.Message.Type
- uid: TradingPlatform.BusinessLayer.Last.Type*
  commentId: Overload:TradingPlatform.BusinessLayer.Last.Type
  name: Type
  nameWithType: Last.Type
  fullName: TradingPlatform.BusinessLayer.Last.Type
- uid: TradingPlatform.BusinessLayer.Integration.MessageType
  commentId: T:TradingPlatform.BusinessLayer.Integration.MessageType
  parent: TradingPlatform.BusinessLayer.Integration
  name: MessageType
  nameWithType: MessageType
  fullName: TradingPlatform.BusinessLayer.Integration.MessageType
- uid: TradingPlatform.BusinessLayer.Last.Price*
  commentId: Overload:TradingPlatform.BusinessLayer.Last.Price
  name: Price
  nameWithType: Last.Price
  fullName: TradingPlatform.BusinessLayer.Last.Price
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: TradingPlatform.BusinessLayer.Last.Size*
  commentId: Overload:TradingPlatform.BusinessLayer.Last.Size
  name: Size
  nameWithType: Last.Size
  fullName: TradingPlatform.BusinessLayer.Last.Size
- uid: TradingPlatform.BusinessLayer.Last.AggressorFlag*
  commentId: Overload:TradingPlatform.BusinessLayer.Last.AggressorFlag
  name: AggressorFlag
  nameWithType: Last.AggressorFlag
  fullName: TradingPlatform.BusinessLayer.Last.AggressorFlag
- uid: TradingPlatform.BusinessLayer.AggressorFlag
  commentId: T:TradingPlatform.BusinessLayer.AggressorFlag
  parent: TradingPlatform.BusinessLayer
  name: AggressorFlag
  nameWithType: AggressorFlag
  fullName: TradingPlatform.BusinessLayer.AggressorFlag
- uid: TradingPlatform.BusinessLayer.Last.#ctor*
  commentId: Overload:TradingPlatform.BusinessLayer.Last.#ctor
  name: Last
  nameWithType: Last.Last
  fullName: TradingPlatform.BusinessLayer.Last.Last
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: TradingPlatform.BusinessLayer.Integration.Message.ToString
  commentId: M:TradingPlatform.BusinessLayer.Integration.Message.ToString
  parent: TradingPlatform.BusinessLayer.Integration.Message
  name: ToString()
  nameWithType: Message.ToString()
  fullName: TradingPlatform.BusinessLayer.Integration.Message.ToString()
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Integration.Message.ToString
    name: ToString
    nameWithType: Message.ToString
    fullName: TradingPlatform.BusinessLayer.Integration.Message.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Integration.Message.ToString
    name: ToString
    nameWithType: Message.ToString
    fullName: TradingPlatform.BusinessLayer.Integration.Message.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Last.ToString*
  commentId: Overload:TradingPlatform.BusinessLayer.Last.ToString
  name: ToString
  nameWithType: Last.ToString
  fullName: TradingPlatform.BusinessLayer.Last.ToString
