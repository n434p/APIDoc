### YamlMime:ManagedReference
items:
- uid: TradingPlatform.BusinessLayer.Synthetic
  commentId: T:TradingPlatform.BusinessLayer.Synthetic
  id: Synthetic
  parent: TradingPlatform.BusinessLayer
  children:
  - TradingPlatform.BusinessLayer.Synthetic.#ctor(System.String,System.Collections.Generic.List{TradingPlatform.BusinessLayer.SyntheticItem})
  - TradingPlatform.BusinessLayer.Synthetic.AvailableHistoryTypes
  - TradingPlatform.BusinessLayer.Synthetic.CreateHistoricalData(TradingPlatform.BusinessLayer.HistoryRequestParameters)
  - TradingPlatform.BusinessLayer.Synthetic.Dispose
  - TradingPlatform.BusinessLayer.Synthetic.FormatQuantity(System.Double,System.Boolean,System.Boolean)
  - TradingPlatform.BusinessLayer.Synthetic.GetAlowedOrderTypes(TradingPlatform.BusinessLayer.OrderTypeUsage)
  - TradingPlatform.BusinessLayer.Synthetic.GetDefaultAccount(TradingPlatform.BusinessLayer.Account)
  - TradingPlatform.BusinessLayer.Synthetic.Items
  - TradingPlatform.BusinessLayer.Synthetic.Reinitialize
  - TradingPlatform.BusinessLayer.Synthetic.Reinitialize(System.Collections.Generic.List{TradingPlatform.BusinessLayer.SyntheticItem})
  - TradingPlatform.BusinessLayer.Synthetic.Reinitilized
  - TradingPlatform.BusinessLayer.Synthetic.Rename(System.String)
  - TradingPlatform.BusinessLayer.Synthetic.Settings
  - TradingPlatform.BusinessLayer.Synthetic.State
  - TradingPlatform.BusinessLayer.Synthetic.SubscribeAction(TradingPlatform.BusinessLayer.SubscribeQuoteType)
  - TradingPlatform.BusinessLayer.Synthetic.SYNTHETIC_CONNECTION_ID
  - TradingPlatform.BusinessLayer.Synthetic.SyntheticState
  - TradingPlatform.BusinessLayer.Synthetic.UnSubscribeAction(TradingPlatform.BusinessLayer.SubscribeQuoteType)
  langs:
  - csharp
  - vb
  name: Synthetic
  nameWithType: Synthetic
  fullName: TradingPlatform.BusinessLayer.Synthetic
  type: Class
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/CustomInstruments/Synthetics/Synthetic.cs
    id: Synthetic
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/CustomInstruments/Synthetics/Synthetic.cs
    startLine: 8
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: 'public class Synthetic : CustomInstrument, IConnectionBindedObject, IUniqueID, IComparable, IRulesContainer, IXElementSerialization, IDisposable, ICustomizable'
    content.vb: >-
      Public Class Synthetic
          Inherits CustomInstrument
          Implements IConnectionBindedObject, IUniqueID, IComparable, IRulesContainer, IXElementSerialization, IDisposable, ICustomizable
  inheritance:
  - System.Object
  - TradingPlatform.BusinessLayer.BusinessObject
  - TradingPlatform.BusinessLayer.Instrument
  - TradingPlatform.BusinessLayer.CustomInstrument
  implements:
  - TradingPlatform.BusinessLayer.IUniqueID
  - System.IComparable
  - TradingPlatform.BusinessLayer.Serialization.IXElementSerialization
  - System.IDisposable
  - TradingPlatform.BusinessLayer.ICustomizable
  inheritedMembers:
  - TradingPlatform.BusinessLayer.Instrument.Id
  - TradingPlatform.BusinessLayer.Instrument.Symbol
  - TradingPlatform.BusinessLayer.Instrument.Description
  - TradingPlatform.BusinessLayer.Instrument.InstrumentType
  - TradingPlatform.BusinessLayer.Instrument.Product
  - TradingPlatform.BusinessLayer.Instrument.QuotingCurrency
  - TradingPlatform.BusinessLayer.Instrument.Exchange
  - TradingPlatform.BusinessLayer.Instrument.QuoteDelay
  - TradingPlatform.BusinessLayer.Instrument.InstrumentAdditionalInfo
  - TradingPlatform.BusinessLayer.Instrument.MaxLot
  - TradingPlatform.BusinessLayer.Instrument.MinLot
  - TradingPlatform.BusinessLayer.Instrument.NettingType
  - TradingPlatform.BusinessLayer.Instrument.Group
  - TradingPlatform.BusinessLayer.Instrument.QuotingType
  - TradingPlatform.BusinessLayer.Instrument.LotSize
  - TradingPlatform.BusinessLayer.Instrument.VariableTickList
  - TradingPlatform.BusinessLayer.Instrument.LotStep
  - TradingPlatform.BusinessLayer.Instrument.ExpirationDate
  - TradingPlatform.BusinessLayer.Instrument.LastTradingDate
  - TradingPlatform.BusinessLayer.Instrument.MaturityDate
  - TradingPlatform.BusinessLayer.Instrument.StrikePrice
  - TradingPlatform.BusinessLayer.Instrument.OptionStyle
  - TradingPlatform.BusinessLayer.Instrument.OptionType
  - TradingPlatform.BusinessLayer.Instrument.OptionSerie
  - TradingPlatform.BusinessLayer.Instrument.UnderlierName
  - TradingPlatform.BusinessLayer.Instrument.Underlier
  - TradingPlatform.BusinessLayer.Instrument.Ask
  - TradingPlatform.BusinessLayer.Instrument.AskSize
  - TradingPlatform.BusinessLayer.Instrument.Bid
  - TradingPlatform.BusinessLayer.Instrument.BidSize
  - TradingPlatform.BusinessLayer.Instrument.QuoteDateTime
  - TradingPlatform.BusinessLayer.Instrument.Last
  - TradingPlatform.BusinessLayer.Instrument.LastSize
  - TradingPlatform.BusinessLayer.Instrument.LastDateTime
  - TradingPlatform.BusinessLayer.Instrument.Open
  - TradingPlatform.BusinessLayer.Instrument.PrevClose
  - TradingPlatform.BusinessLayer.Instrument.High
  - TradingPlatform.BusinessLayer.Instrument.Low
  - TradingPlatform.BusinessLayer.Instrument.Volume
  - TradingPlatform.BusinessLayer.Instrument.PrevSettlement
  - TradingPlatform.BusinessLayer.Instrument.Ticks
  - TradingPlatform.BusinessLayer.Instrument.Trades
  - TradingPlatform.BusinessLayer.Instrument.Asks
  - TradingPlatform.BusinessLayer.Instrument.Bids
  - TradingPlatform.BusinessLayer.Instrument.Spread
  - TradingPlatform.BusinessLayer.Instrument.SpreadPercentage
  - TradingPlatform.BusinessLayer.Instrument.Change
  - TradingPlatform.BusinessLayer.Instrument.ChangePercentage
  - TradingPlatform.BusinessLayer.Instrument.HistoryType
  - TradingPlatform.BusinessLayer.Instrument.VolumeType
  - TradingPlatform.BusinessLayer.Instrument.NewQuote
  - TradingPlatform.BusinessLayer.Instrument.NewLevel2
  - TradingPlatform.BusinessLayer.Instrument.NewLast
  - TradingPlatform.BusinessLayer.Instrument.NewDayBar
  - TradingPlatform.BusinessLayer.Instrument.Updated
  - TradingPlatform.BusinessLayer.Instrument.AllowCalculateRealtimeTicks
  - TradingPlatform.BusinessLayer.Instrument.AllowCalculateRealtimeTrades
  - TradingPlatform.BusinessLayer.Instrument.AllowCalculateRealtimeVolume
  - TradingPlatform.BusinessLayer.Instrument.AllowCalculateRealtimeChange
  - TradingPlatform.BusinessLayer.Instrument.InitialState
  - TradingPlatform.BusinessLayer.Instrument.GetMessage
  - TradingPlatform.BusinessLayer.Instrument.Subscribe(TradingPlatform.BusinessLayer.SubscribeQuoteType)
  - TradingPlatform.BusinessLayer.Instrument.UnSubscribe(TradingPlatform.BusinessLayer.SubscribeQuoteType)
  - TradingPlatform.BusinessLayer.Instrument.GetHistory(TradingPlatform.BusinessLayer.Period,TradingPlatform.BusinessLayer.HistoryType,System.DateTime,System.DateTime)
  - TradingPlatform.BusinessLayer.Instrument.GetHistory(TradingPlatform.BusinessLayer.HistoryAggregation,TradingPlatform.BusinessLayer.HistoryType,System.DateTime,System.DateTime)
  - TradingPlatform.BusinessLayer.Instrument.GetHistory(TradingPlatform.BusinessLayer.HistoryRequestParameters)
  - TradingPlatform.BusinessLayer.Instrument.GetTickHistory(TradingPlatform.BusinessLayer.HistoryType,System.DateTime,System.DateTime)
  - TradingPlatform.BusinessLayer.Instrument.RoundPriceToTickSize(System.Double)
  - TradingPlatform.BusinessLayer.Instrument.CalculatePrice(System.Double,System.Double)
  - TradingPlatform.BusinessLayer.Instrument.CalculateTicks(System.Double,System.Double)
  - TradingPlatform.BusinessLayer.Instrument.GetTickSize(System.Double)
  - TradingPlatform.BusinessLayer.Instrument.GetTickCost(System.Double)
  - TradingPlatform.BusinessLayer.Instrument.FindVariableTick(System.Double)
  - TradingPlatform.BusinessLayer.Instrument.TickSize
  - TradingPlatform.BusinessLayer.Instrument.GetVWAPForOrderRequest(TradingPlatform.BusinessLayer.OrderRequestParameters)
  - TradingPlatform.BusinessLayer.Instrument.OnUpdated
  - TradingPlatform.BusinessLayer.Instrument.ToString
  - TradingPlatform.BusinessLayer.Instrument.CreateInfo
  - TradingPlatform.BusinessLayer.Instrument.FormatPrice(System.Double)
  - TradingPlatform.BusinessLayer.Instrument.FormatPriceWithMaxPrecision(System.Double)
  - TradingPlatform.BusinessLayer.Instrument.FormatOffset(System.Double)
  - TradingPlatform.BusinessLayer.Instrument.CompareTo(System.Object)
  - TradingPlatform.BusinessLayer.Instrument.ToXElement
  - TradingPlatform.BusinessLayer.Instrument.FromXElement(System.Xml.Linq.XElement,TradingPlatform.BusinessLayer.Serialization.DeserializationInfo)
  - TradingPlatform.BusinessLayer.BusinessObject.ConnectionId
  - TradingPlatform.BusinessLayer.BusinessObject.UniqueId
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TradingPlatform.BusinessLayer.Synthetic.Items
  commentId: F:TradingPlatform.BusinessLayer.Synthetic.Items
  id: Items
  parent: TradingPlatform.BusinessLayer.Synthetic
  langs:
  - csharp
  - vb
  name: Items
  nameWithType: Synthetic.Items
  fullName: TradingPlatform.BusinessLayer.Synthetic.Items
  type: Field
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/CustomInstruments/Synthetics/Synthetic.cs
    id: Items
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/CustomInstruments/Synthetics/Synthetic.cs
    startLine: 12
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public List<SyntheticItem> Items
    return:
      type: System.Collections.Generic.List{TradingPlatform.BusinessLayer.SyntheticItem}
    content.vb: Public Items As List(Of SyntheticItem)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.Synthetic.Reinitilized
  commentId: E:TradingPlatform.BusinessLayer.Synthetic.Reinitilized
  id: Reinitilized
  parent: TradingPlatform.BusinessLayer.Synthetic
  langs:
  - csharp
  - vb
  name: Reinitilized
  nameWithType: Synthetic.Reinitilized
  fullName: TradingPlatform.BusinessLayer.Synthetic.Reinitilized
  type: Event
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/CustomInstruments/Synthetics/Synthetic.cs
    id: Reinitilized
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/CustomInstruments/Synthetics/Synthetic.cs
    startLine: 14
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public event Action<Synthetic> Reinitilized
    return:
      type: System.Action{TradingPlatform.BusinessLayer.Synthetic}
    content.vb: Public Event Reinitilized As Action(Of Synthetic)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.Synthetic.SYNTHETIC_CONNECTION_ID
  commentId: F:TradingPlatform.BusinessLayer.Synthetic.SYNTHETIC_CONNECTION_ID
  id: SYNTHETIC_CONNECTION_ID
  parent: TradingPlatform.BusinessLayer.Synthetic
  langs:
  - csharp
  - vb
  name: SYNTHETIC_CONNECTION_ID
  nameWithType: Synthetic.SYNTHETIC_CONNECTION_ID
  fullName: TradingPlatform.BusinessLayer.Synthetic.SYNTHETIC_CONNECTION_ID
  type: Field
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/CustomInstruments/Synthetics/Synthetic.cs
    id: SYNTHETIC_CONNECTION_ID
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/CustomInstruments/Synthetics/Synthetic.cs
    startLine: 16
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public const string SYNTHETIC_CONNECTION_ID = "CUSTOM_INSTRUMENT_CONNECTION"
    return:
      type: System.String
    content.vb: Public Const SYNTHETIC_CONNECTION_ID As String = "CUSTOM_INSTRUMENT_CONNECTION"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: TradingPlatform.BusinessLayer.Synthetic.SyntheticState
  commentId: P:TradingPlatform.BusinessLayer.Synthetic.SyntheticState
  id: SyntheticState
  parent: TradingPlatform.BusinessLayer.Synthetic
  langs:
  - csharp
  - vb
  name: SyntheticState
  nameWithType: Synthetic.SyntheticState
  fullName: TradingPlatform.BusinessLayer.Synthetic.SyntheticState
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/CustomInstruments/Synthetics/Synthetic.cs
    id: SyntheticState
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/CustomInstruments/Synthetics/Synthetic.cs
    startLine: 24
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public SyntheticState SyntheticState { get; }
    parameters: []
    return:
      type: TradingPlatform.BusinessLayer.SyntheticState
    content.vb: Public ReadOnly Property SyntheticState As SyntheticState
  overload: TradingPlatform.BusinessLayer.Synthetic.SyntheticState*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.Synthetic.State
  commentId: P:TradingPlatform.BusinessLayer.Synthetic.State
  id: State
  parent: TradingPlatform.BusinessLayer.Synthetic
  langs:
  - csharp
  - vb
  name: State
  nameWithType: Synthetic.State
  fullName: TradingPlatform.BusinessLayer.Synthetic.State
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/CustomInstruments/Synthetics/Synthetic.cs
    id: State
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/CustomInstruments/Synthetics/Synthetic.cs
    startLine: 26
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public override BusinessObjectState State { get; protected set; }
    parameters: []
    return:
      type: TradingPlatform.BusinessLayer.BusinessObjectState
    content.vb: Public Overrides Property State As BusinessObjectState
  overridden: TradingPlatform.BusinessLayer.BusinessObject.State
  overload: TradingPlatform.BusinessLayer.Synthetic.State*
  modifiers.csharp:
  - public
  - override
  - get
  - protected set
  modifiers.vb:
  - Public
  - Overrides
  - Get
  - Protected Set
- uid: TradingPlatform.BusinessLayer.Synthetic.#ctor(System.String,System.Collections.Generic.List{TradingPlatform.BusinessLayer.SyntheticItem})
  commentId: M:TradingPlatform.BusinessLayer.Synthetic.#ctor(System.String,System.Collections.Generic.List{TradingPlatform.BusinessLayer.SyntheticItem})
  id: '#ctor(System.String,System.Collections.Generic.List{TradingPlatform.BusinessLayer.SyntheticItem})'
  parent: TradingPlatform.BusinessLayer.Synthetic
  langs:
  - csharp
  - vb
  name: Synthetic(String, List<SyntheticItem>)
  nameWithType: Synthetic.Synthetic(String, List<SyntheticItem>)
  fullName: TradingPlatform.BusinessLayer.Synthetic.Synthetic(System.String, System.Collections.Generic.List<TradingPlatform.BusinessLayer.SyntheticItem>)
  type: Constructor
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/CustomInstruments/Synthetics/Synthetic.cs
    id: .ctor
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/CustomInstruments/Synthetics/Synthetic.cs
    startLine: 55
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public Synthetic(string Name, List<SyntheticItem> Items = null)
    parameters:
    - id: Name
      type: System.String
    - id: Items
      type: System.Collections.Generic.List{TradingPlatform.BusinessLayer.SyntheticItem}
    content.vb: Public Sub New(Name As String, Items As List(Of SyntheticItem) = Nothing)
  overload: TradingPlatform.BusinessLayer.Synthetic.#ctor*
  nameWithType.vb: Synthetic.Synthetic(String, List(Of SyntheticItem))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TradingPlatform.BusinessLayer.Synthetic.Synthetic(System.String, System.Collections.Generic.List(Of TradingPlatform.BusinessLayer.SyntheticItem))
  name.vb: Synthetic(String, List(Of SyntheticItem))
- uid: TradingPlatform.BusinessLayer.Synthetic.Rename(System.String)
  commentId: M:TradingPlatform.BusinessLayer.Synthetic.Rename(System.String)
  id: Rename(System.String)
  parent: TradingPlatform.BusinessLayer.Synthetic
  langs:
  - csharp
  - vb
  name: Rename(String)
  nameWithType: Synthetic.Rename(String)
  fullName: TradingPlatform.BusinessLayer.Synthetic.Rename(System.String)
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/CustomInstruments/Synthetics/Synthetic.cs
    id: Rename
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/CustomInstruments/Synthetics/Synthetic.cs
    startLine: 167
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public void Rename(string newName)
    parameters:
    - id: newName
      type: System.String
    content.vb: Public Sub Rename(newName As String)
  overload: TradingPlatform.BusinessLayer.Synthetic.Rename*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.Synthetic.Reinitialize(System.Collections.Generic.List{TradingPlatform.BusinessLayer.SyntheticItem})
  commentId: M:TradingPlatform.BusinessLayer.Synthetic.Reinitialize(System.Collections.Generic.List{TradingPlatform.BusinessLayer.SyntheticItem})
  id: Reinitialize(System.Collections.Generic.List{TradingPlatform.BusinessLayer.SyntheticItem})
  parent: TradingPlatform.BusinessLayer.Synthetic
  langs:
  - csharp
  - vb
  name: Reinitialize(List<SyntheticItem>)
  nameWithType: Synthetic.Reinitialize(List<SyntheticItem>)
  fullName: TradingPlatform.BusinessLayer.Synthetic.Reinitialize(System.Collections.Generic.List<TradingPlatform.BusinessLayer.SyntheticItem>)
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/CustomInstruments/Synthetics/Synthetic.cs
    id: Reinitialize
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/CustomInstruments/Synthetics/Synthetic.cs
    startLine: 258
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public void Reinitialize(List<SyntheticItem> newItems)
    parameters:
    - id: newItems
      type: System.Collections.Generic.List{TradingPlatform.BusinessLayer.SyntheticItem}
    content.vb: Public Sub Reinitialize(newItems As List(Of SyntheticItem))
  overload: TradingPlatform.BusinessLayer.Synthetic.Reinitialize*
  nameWithType.vb: Synthetic.Reinitialize(List(Of SyntheticItem))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TradingPlatform.BusinessLayer.Synthetic.Reinitialize(System.Collections.Generic.List(Of TradingPlatform.BusinessLayer.SyntheticItem))
  name.vb: Reinitialize(List(Of SyntheticItem))
- uid: TradingPlatform.BusinessLayer.Synthetic.Dispose
  commentId: M:TradingPlatform.BusinessLayer.Synthetic.Dispose
  id: Dispose
  parent: TradingPlatform.BusinessLayer.Synthetic
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: Synthetic.Dispose()
  fullName: TradingPlatform.BusinessLayer.Synthetic.Dispose()
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/CustomInstruments/Synthetics/Synthetic.cs
    id: Dispose
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/CustomInstruments/Synthetics/Synthetic.cs
    startLine: 268
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public override void Dispose()
    content.vb: Public Overrides Sub Dispose
  overridden: TradingPlatform.BusinessLayer.CustomInstrument.Dispose
  overload: TradingPlatform.BusinessLayer.Synthetic.Dispose*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TradingPlatform.BusinessLayer.Synthetic.Reinitialize
  commentId: M:TradingPlatform.BusinessLayer.Synthetic.Reinitialize
  id: Reinitialize
  parent: TradingPlatform.BusinessLayer.Synthetic
  langs:
  - csharp
  - vb
  name: Reinitialize()
  nameWithType: Synthetic.Reinitialize()
  fullName: TradingPlatform.BusinessLayer.Synthetic.Reinitialize()
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/CustomInstruments/Synthetics/Synthetic.cs
    id: Reinitialize
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/CustomInstruments/Synthetics/Synthetic.cs
    startLine: 275
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public void Reinitialize()
    content.vb: Public Sub Reinitialize
  overload: TradingPlatform.BusinessLayer.Synthetic.Reinitialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.Synthetic.SubscribeAction(TradingPlatform.BusinessLayer.SubscribeQuoteType)
  commentId: M:TradingPlatform.BusinessLayer.Synthetic.SubscribeAction(TradingPlatform.BusinessLayer.SubscribeQuoteType)
  id: SubscribeAction(TradingPlatform.BusinessLayer.SubscribeQuoteType)
  parent: TradingPlatform.BusinessLayer.Synthetic
  langs:
  - csharp
  - vb
  name: SubscribeAction(SubscribeQuoteType)
  nameWithType: Synthetic.SubscribeAction(SubscribeQuoteType)
  fullName: TradingPlatform.BusinessLayer.Synthetic.SubscribeAction(TradingPlatform.BusinessLayer.SubscribeQuoteType)
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/CustomInstruments/Synthetics/Synthetic.cs
    id: SubscribeAction
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/CustomInstruments/Synthetics/Synthetic.cs
    startLine: 288
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: protected override bool SubscribeAction(SubscribeQuoteType type)
    parameters:
    - id: type
      type: TradingPlatform.BusinessLayer.SubscribeQuoteType
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function SubscribeAction(type As SubscribeQuoteType) As Boolean
  overridden: TradingPlatform.BusinessLayer.Instrument.SubscribeAction(TradingPlatform.BusinessLayer.SubscribeQuoteType)
  overload: TradingPlatform.BusinessLayer.Synthetic.SubscribeAction*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: TradingPlatform.BusinessLayer.Synthetic.UnSubscribeAction(TradingPlatform.BusinessLayer.SubscribeQuoteType)
  commentId: M:TradingPlatform.BusinessLayer.Synthetic.UnSubscribeAction(TradingPlatform.BusinessLayer.SubscribeQuoteType)
  id: UnSubscribeAction(TradingPlatform.BusinessLayer.SubscribeQuoteType)
  parent: TradingPlatform.BusinessLayer.Synthetic
  langs:
  - csharp
  - vb
  name: UnSubscribeAction(SubscribeQuoteType)
  nameWithType: Synthetic.UnSubscribeAction(SubscribeQuoteType)
  fullName: TradingPlatform.BusinessLayer.Synthetic.UnSubscribeAction(TradingPlatform.BusinessLayer.SubscribeQuoteType)
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/CustomInstruments/Synthetics/Synthetic.cs
    id: UnSubscribeAction
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/CustomInstruments/Synthetics/Synthetic.cs
    startLine: 294
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: protected override bool UnSubscribeAction(SubscribeQuoteType type)
    parameters:
    - id: type
      type: TradingPlatform.BusinessLayer.SubscribeQuoteType
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function UnSubscribeAction(type As SubscribeQuoteType) As Boolean
  overridden: TradingPlatform.BusinessLayer.Instrument.UnSubscribeAction(TradingPlatform.BusinessLayer.SubscribeQuoteType)
  overload: TradingPlatform.BusinessLayer.Synthetic.UnSubscribeAction*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: TradingPlatform.BusinessLayer.Synthetic.CreateHistoricalData(TradingPlatform.BusinessLayer.HistoryRequestParameters)
  commentId: M:TradingPlatform.BusinessLayer.Synthetic.CreateHistoricalData(TradingPlatform.BusinessLayer.HistoryRequestParameters)
  id: CreateHistoricalData(TradingPlatform.BusinessLayer.HistoryRequestParameters)
  parent: TradingPlatform.BusinessLayer.Synthetic
  langs:
  - csharp
  - vb
  name: CreateHistoricalData(HistoryRequestParameters)
  nameWithType: Synthetic.CreateHistoricalData(HistoryRequestParameters)
  fullName: TradingPlatform.BusinessLayer.Synthetic.CreateHistoricalData(TradingPlatform.BusinessLayer.HistoryRequestParameters)
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/CustomInstruments/Synthetics/Synthetic.cs
    id: CreateHistoricalData
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/CustomInstruments/Synthetics/Synthetic.cs
    startLine: 502
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  summary: "\nalexb: нам достаточно подставлять правильный HistoricalData - он сделает всю работу\n"
  example: []
  syntax:
    content: protected override HistoricalData CreateHistoricalData(HistoryRequestParameters historyRequestParameters)
    parameters:
    - id: historyRequestParameters
      type: TradingPlatform.BusinessLayer.HistoryRequestParameters
    return:
      type: TradingPlatform.BusinessLayer.HistoricalData
    content.vb: Protected Overrides Function CreateHistoricalData(historyRequestParameters As HistoryRequestParameters) As HistoricalData
  overridden: TradingPlatform.BusinessLayer.Instrument.CreateHistoricalData(TradingPlatform.BusinessLayer.HistoryRequestParameters)
  overload: TradingPlatform.BusinessLayer.Synthetic.CreateHistoricalData*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: TradingPlatform.BusinessLayer.Synthetic.AvailableHistoryTypes
  commentId: P:TradingPlatform.BusinessLayer.Synthetic.AvailableHistoryTypes
  id: AvailableHistoryTypes
  parent: TradingPlatform.BusinessLayer.Synthetic
  langs:
  - csharp
  - vb
  name: AvailableHistoryTypes
  nameWithType: Synthetic.AvailableHistoryTypes
  fullName: TradingPlatform.BusinessLayer.Synthetic.AvailableHistoryTypes
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/CustomInstruments/Synthetics/Synthetic.cs
    id: AvailableHistoryTypes
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/CustomInstruments/Synthetics/Synthetic.cs
    startLine: 507
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public override List<HistoryType> AvailableHistoryTypes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{TradingPlatform.BusinessLayer.HistoryType}
    content.vb: Public Overrides ReadOnly Property AvailableHistoryTypes As List(Of HistoryType)
  overridden: TradingPlatform.BusinessLayer.Instrument.AvailableHistoryTypes
  overload: TradingPlatform.BusinessLayer.Synthetic.AvailableHistoryTypes*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.Synthetic.GetAlowedOrderTypes(TradingPlatform.BusinessLayer.OrderTypeUsage)
  commentId: M:TradingPlatform.BusinessLayer.Synthetic.GetAlowedOrderTypes(TradingPlatform.BusinessLayer.OrderTypeUsage)
  id: GetAlowedOrderTypes(TradingPlatform.BusinessLayer.OrderTypeUsage)
  parent: TradingPlatform.BusinessLayer.Synthetic
  langs:
  - csharp
  - vb
  name: GetAlowedOrderTypes(OrderTypeUsage)
  nameWithType: Synthetic.GetAlowedOrderTypes(OrderTypeUsage)
  fullName: TradingPlatform.BusinessLayer.Synthetic.GetAlowedOrderTypes(TradingPlatform.BusinessLayer.OrderTypeUsage)
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/CustomInstruments/Synthetics/Synthetic.cs
    id: GetAlowedOrderTypes
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/CustomInstruments/Synthetics/Synthetic.cs
    startLine: 513
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public override List<OrderType> GetAlowedOrderTypes(OrderTypeUsage usage)
    parameters:
    - id: usage
      type: TradingPlatform.BusinessLayer.OrderTypeUsage
    return:
      type: System.Collections.Generic.List{TradingPlatform.BusinessLayer.OrderType}
    content.vb: Public Overrides Function GetAlowedOrderTypes(usage As OrderTypeUsage) As List(Of OrderType)
  overridden: TradingPlatform.BusinessLayer.Instrument.GetAlowedOrderTypes(TradingPlatform.BusinessLayer.OrderTypeUsage)
  overload: TradingPlatform.BusinessLayer.Synthetic.GetAlowedOrderTypes*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TradingPlatform.BusinessLayer.Synthetic.GetDefaultAccount(TradingPlatform.BusinessLayer.Account)
  commentId: M:TradingPlatform.BusinessLayer.Synthetic.GetDefaultAccount(TradingPlatform.BusinessLayer.Account)
  id: GetDefaultAccount(TradingPlatform.BusinessLayer.Account)
  parent: TradingPlatform.BusinessLayer.Synthetic
  langs:
  - csharp
  - vb
  name: GetDefaultAccount(Account)
  nameWithType: Synthetic.GetDefaultAccount(Account)
  fullName: TradingPlatform.BusinessLayer.Synthetic.GetDefaultAccount(TradingPlatform.BusinessLayer.Account)
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/CustomInstruments/Synthetics/Synthetic.cs
    id: GetDefaultAccount
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/CustomInstruments/Synthetics/Synthetic.cs
    startLine: 547
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public override Account GetDefaultAccount(Account currentValue = null)
    parameters:
    - id: currentValue
      type: TradingPlatform.BusinessLayer.Account
    return:
      type: TradingPlatform.BusinessLayer.Account
    content.vb: Public Overrides Function GetDefaultAccount(currentValue As Account = Nothing) As Account
  overridden: TradingPlatform.BusinessLayer.Instrument.GetDefaultAccount(TradingPlatform.BusinessLayer.Account)
  overload: TradingPlatform.BusinessLayer.Synthetic.GetDefaultAccount*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TradingPlatform.BusinessLayer.Synthetic.FormatQuantity(System.Double,System.Boolean,System.Boolean)
  commentId: M:TradingPlatform.BusinessLayer.Synthetic.FormatQuantity(System.Double,System.Boolean,System.Boolean)
  id: FormatQuantity(System.Double,System.Boolean,System.Boolean)
  parent: TradingPlatform.BusinessLayer.Synthetic
  langs:
  - csharp
  - vb
  name: FormatQuantity(Double, Boolean, Boolean)
  nameWithType: Synthetic.FormatQuantity(Double, Boolean, Boolean)
  fullName: TradingPlatform.BusinessLayer.Synthetic.FormatQuantity(System.Double, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/CustomInstruments/Synthetics/Synthetic.cs
    id: FormatQuantity
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/CustomInstruments/Synthetics/Synthetic.cs
    startLine: 560
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public override string FormatQuantity(double quantity, bool inLots = true, bool abbreviate = false)
    parameters:
    - id: quantity
      type: System.Double
    - id: inLots
      type: System.Boolean
    - id: abbreviate
      type: System.Boolean
    return:
      type: System.String
    content.vb: Public Overrides Function FormatQuantity(quantity As Double, inLots As Boolean = True, abbreviate As Boolean = False) As String
  overridden: TradingPlatform.BusinessLayer.Instrument.FormatQuantity(System.Double,System.Boolean,System.Boolean)
  overload: TradingPlatform.BusinessLayer.Synthetic.FormatQuantity*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TradingPlatform.BusinessLayer.Synthetic.Settings
  commentId: P:TradingPlatform.BusinessLayer.Synthetic.Settings
  id: Settings
  parent: TradingPlatform.BusinessLayer.Synthetic
  langs:
  - csharp
  - vb
  name: Settings
  nameWithType: Synthetic.Settings
  fullName: TradingPlatform.BusinessLayer.Synthetic.Settings
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/CustomInstruments/Synthetics/Synthetic.cs
    id: Settings
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/CustomInstruments/Synthetics/Synthetic.cs
    startLine: 570
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public IList<SettingItem> Settings { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{TradingPlatform.BusinessLayer.SettingItem}
    content.vb: Public Property Settings As IList(Of SettingItem)
  overload: TradingPlatform.BusinessLayer.Synthetic.Settings*
  implements:
  - TradingPlatform.BusinessLayer.ICustomizable.Settings
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: TradingPlatform.BusinessLayer
  commentId: N:TradingPlatform.BusinessLayer
  name: TradingPlatform.BusinessLayer
  nameWithType: TradingPlatform.BusinessLayer
  fullName: TradingPlatform.BusinessLayer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TradingPlatform.BusinessLayer.BusinessObject
  commentId: T:TradingPlatform.BusinessLayer.BusinessObject
  parent: TradingPlatform.BusinessLayer
  name: BusinessObject
  nameWithType: BusinessObject
  fullName: TradingPlatform.BusinessLayer.BusinessObject
- uid: TradingPlatform.BusinessLayer.Instrument
  commentId: T:TradingPlatform.BusinessLayer.Instrument
  parent: TradingPlatform.BusinessLayer
  name: Instrument
  nameWithType: Instrument
  fullName: TradingPlatform.BusinessLayer.Instrument
- uid: TradingPlatform.BusinessLayer.CustomInstrument
  commentId: T:TradingPlatform.BusinessLayer.CustomInstrument
  parent: TradingPlatform.BusinessLayer
  name: CustomInstrument
  nameWithType: CustomInstrument
  fullName: TradingPlatform.BusinessLayer.CustomInstrument
- uid: TradingPlatform.BusinessLayer.IUniqueID
  commentId: T:TradingPlatform.BusinessLayer.IUniqueID
  parent: TradingPlatform.BusinessLayer
  name: IUniqueID
  nameWithType: IUniqueID
  fullName: TradingPlatform.BusinessLayer.IUniqueID
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: true
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: TradingPlatform.BusinessLayer.Serialization.IXElementSerialization
  commentId: T:TradingPlatform.BusinessLayer.Serialization.IXElementSerialization
  parent: TradingPlatform.BusinessLayer.Serialization
  name: IXElementSerialization
  nameWithType: IXElementSerialization
  fullName: TradingPlatform.BusinessLayer.Serialization.IXElementSerialization
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: TradingPlatform.BusinessLayer.ICustomizable
  commentId: T:TradingPlatform.BusinessLayer.ICustomizable
  parent: TradingPlatform.BusinessLayer
  name: ICustomizable
  nameWithType: ICustomizable
  fullName: TradingPlatform.BusinessLayer.ICustomizable
- uid: TradingPlatform.BusinessLayer.Instrument.Id
  commentId: P:TradingPlatform.BusinessLayer.Instrument.Id
  parent: TradingPlatform.BusinessLayer.Instrument
  name: Id
  nameWithType: Instrument.Id
  fullName: TradingPlatform.BusinessLayer.Instrument.Id
- uid: TradingPlatform.BusinessLayer.Instrument.Symbol
  commentId: P:TradingPlatform.BusinessLayer.Instrument.Symbol
  parent: TradingPlatform.BusinessLayer.Instrument
  name: Symbol
  nameWithType: Instrument.Symbol
  fullName: TradingPlatform.BusinessLayer.Instrument.Symbol
- uid: TradingPlatform.BusinessLayer.Instrument.Description
  commentId: P:TradingPlatform.BusinessLayer.Instrument.Description
  parent: TradingPlatform.BusinessLayer.Instrument
  name: Description
  nameWithType: Instrument.Description
  fullName: TradingPlatform.BusinessLayer.Instrument.Description
- uid: TradingPlatform.BusinessLayer.Instrument.InstrumentType
  commentId: P:TradingPlatform.BusinessLayer.Instrument.InstrumentType
  parent: TradingPlatform.BusinessLayer.Instrument
  name: InstrumentType
  nameWithType: Instrument.InstrumentType
  fullName: TradingPlatform.BusinessLayer.Instrument.InstrumentType
- uid: TradingPlatform.BusinessLayer.Instrument.Product
  commentId: P:TradingPlatform.BusinessLayer.Instrument.Product
  parent: TradingPlatform.BusinessLayer.Instrument
  name: Product
  nameWithType: Instrument.Product
  fullName: TradingPlatform.BusinessLayer.Instrument.Product
- uid: TradingPlatform.BusinessLayer.Instrument.QuotingCurrency
  commentId: P:TradingPlatform.BusinessLayer.Instrument.QuotingCurrency
  parent: TradingPlatform.BusinessLayer.Instrument
  name: QuotingCurrency
  nameWithType: Instrument.QuotingCurrency
  fullName: TradingPlatform.BusinessLayer.Instrument.QuotingCurrency
- uid: TradingPlatform.BusinessLayer.Instrument.Exchange
  commentId: P:TradingPlatform.BusinessLayer.Instrument.Exchange
  parent: TradingPlatform.BusinessLayer.Instrument
  name: Exchange
  nameWithType: Instrument.Exchange
  fullName: TradingPlatform.BusinessLayer.Instrument.Exchange
- uid: TradingPlatform.BusinessLayer.Instrument.QuoteDelay
  commentId: P:TradingPlatform.BusinessLayer.Instrument.QuoteDelay
  parent: TradingPlatform.BusinessLayer.Instrument
  name: QuoteDelay
  nameWithType: Instrument.QuoteDelay
  fullName: TradingPlatform.BusinessLayer.Instrument.QuoteDelay
- uid: TradingPlatform.BusinessLayer.Instrument.InstrumentAdditionalInfo
  commentId: P:TradingPlatform.BusinessLayer.Instrument.InstrumentAdditionalInfo
  parent: TradingPlatform.BusinessLayer.Instrument
  name: InstrumentAdditionalInfo
  nameWithType: Instrument.InstrumentAdditionalInfo
  fullName: TradingPlatform.BusinessLayer.Instrument.InstrumentAdditionalInfo
- uid: TradingPlatform.BusinessLayer.Instrument.MaxLot
  commentId: P:TradingPlatform.BusinessLayer.Instrument.MaxLot
  parent: TradingPlatform.BusinessLayer.Instrument
  name: MaxLot
  nameWithType: Instrument.MaxLot
  fullName: TradingPlatform.BusinessLayer.Instrument.MaxLot
- uid: TradingPlatform.BusinessLayer.Instrument.MinLot
  commentId: P:TradingPlatform.BusinessLayer.Instrument.MinLot
  parent: TradingPlatform.BusinessLayer.Instrument
  name: MinLot
  nameWithType: Instrument.MinLot
  fullName: TradingPlatform.BusinessLayer.Instrument.MinLot
- uid: TradingPlatform.BusinessLayer.Instrument.NettingType
  commentId: P:TradingPlatform.BusinessLayer.Instrument.NettingType
  parent: TradingPlatform.BusinessLayer.Instrument
  name: NettingType
  nameWithType: Instrument.NettingType
  fullName: TradingPlatform.BusinessLayer.Instrument.NettingType
- uid: TradingPlatform.BusinessLayer.Instrument.Group
  commentId: P:TradingPlatform.BusinessLayer.Instrument.Group
  parent: TradingPlatform.BusinessLayer.Instrument
  name: Group
  nameWithType: Instrument.Group
  fullName: TradingPlatform.BusinessLayer.Instrument.Group
- uid: TradingPlatform.BusinessLayer.Instrument.QuotingType
  commentId: P:TradingPlatform.BusinessLayer.Instrument.QuotingType
  parent: TradingPlatform.BusinessLayer.Instrument
  name: QuotingType
  nameWithType: Instrument.QuotingType
  fullName: TradingPlatform.BusinessLayer.Instrument.QuotingType
- uid: TradingPlatform.BusinessLayer.Instrument.LotSize
  commentId: P:TradingPlatform.BusinessLayer.Instrument.LotSize
  parent: TradingPlatform.BusinessLayer.Instrument
  name: LotSize
  nameWithType: Instrument.LotSize
  fullName: TradingPlatform.BusinessLayer.Instrument.LotSize
- uid: TradingPlatform.BusinessLayer.Instrument.VariableTickList
  commentId: P:TradingPlatform.BusinessLayer.Instrument.VariableTickList
  parent: TradingPlatform.BusinessLayer.Instrument
  name: VariableTickList
  nameWithType: Instrument.VariableTickList
  fullName: TradingPlatform.BusinessLayer.Instrument.VariableTickList
- uid: TradingPlatform.BusinessLayer.Instrument.LotStep
  commentId: P:TradingPlatform.BusinessLayer.Instrument.LotStep
  parent: TradingPlatform.BusinessLayer.Instrument
  name: LotStep
  nameWithType: Instrument.LotStep
  fullName: TradingPlatform.BusinessLayer.Instrument.LotStep
- uid: TradingPlatform.BusinessLayer.Instrument.ExpirationDate
  commentId: P:TradingPlatform.BusinessLayer.Instrument.ExpirationDate
  parent: TradingPlatform.BusinessLayer.Instrument
  name: ExpirationDate
  nameWithType: Instrument.ExpirationDate
  fullName: TradingPlatform.BusinessLayer.Instrument.ExpirationDate
- uid: TradingPlatform.BusinessLayer.Instrument.LastTradingDate
  commentId: P:TradingPlatform.BusinessLayer.Instrument.LastTradingDate
  parent: TradingPlatform.BusinessLayer.Instrument
  name: LastTradingDate
  nameWithType: Instrument.LastTradingDate
  fullName: TradingPlatform.BusinessLayer.Instrument.LastTradingDate
- uid: TradingPlatform.BusinessLayer.Instrument.MaturityDate
  commentId: P:TradingPlatform.BusinessLayer.Instrument.MaturityDate
  parent: TradingPlatform.BusinessLayer.Instrument
  name: MaturityDate
  nameWithType: Instrument.MaturityDate
  fullName: TradingPlatform.BusinessLayer.Instrument.MaturityDate
- uid: TradingPlatform.BusinessLayer.Instrument.StrikePrice
  commentId: P:TradingPlatform.BusinessLayer.Instrument.StrikePrice
  parent: TradingPlatform.BusinessLayer.Instrument
  name: StrikePrice
  nameWithType: Instrument.StrikePrice
  fullName: TradingPlatform.BusinessLayer.Instrument.StrikePrice
- uid: TradingPlatform.BusinessLayer.Instrument.OptionStyle
  commentId: P:TradingPlatform.BusinessLayer.Instrument.OptionStyle
  parent: TradingPlatform.BusinessLayer.Instrument
  name: OptionStyle
  nameWithType: Instrument.OptionStyle
  fullName: TradingPlatform.BusinessLayer.Instrument.OptionStyle
- uid: TradingPlatform.BusinessLayer.Instrument.OptionType
  commentId: P:TradingPlatform.BusinessLayer.Instrument.OptionType
  parent: TradingPlatform.BusinessLayer.Instrument
  name: OptionType
  nameWithType: Instrument.OptionType
  fullName: TradingPlatform.BusinessLayer.Instrument.OptionType
- uid: TradingPlatform.BusinessLayer.Instrument.OptionSerie
  commentId: P:TradingPlatform.BusinessLayer.Instrument.OptionSerie
  parent: TradingPlatform.BusinessLayer.Instrument
  name: OptionSerie
  nameWithType: Instrument.OptionSerie
  fullName: TradingPlatform.BusinessLayer.Instrument.OptionSerie
- uid: TradingPlatform.BusinessLayer.Instrument.UnderlierName
  commentId: P:TradingPlatform.BusinessLayer.Instrument.UnderlierName
  parent: TradingPlatform.BusinessLayer.Instrument
  name: UnderlierName
  nameWithType: Instrument.UnderlierName
  fullName: TradingPlatform.BusinessLayer.Instrument.UnderlierName
- uid: TradingPlatform.BusinessLayer.Instrument.Underlier
  commentId: P:TradingPlatform.BusinessLayer.Instrument.Underlier
  parent: TradingPlatform.BusinessLayer.Instrument
  name: Underlier
  nameWithType: Instrument.Underlier
  fullName: TradingPlatform.BusinessLayer.Instrument.Underlier
- uid: TradingPlatform.BusinessLayer.Instrument.Ask
  commentId: P:TradingPlatform.BusinessLayer.Instrument.Ask
  parent: TradingPlatform.BusinessLayer.Instrument
  name: Ask
  nameWithType: Instrument.Ask
  fullName: TradingPlatform.BusinessLayer.Instrument.Ask
- uid: TradingPlatform.BusinessLayer.Instrument.AskSize
  commentId: P:TradingPlatform.BusinessLayer.Instrument.AskSize
  parent: TradingPlatform.BusinessLayer.Instrument
  name: AskSize
  nameWithType: Instrument.AskSize
  fullName: TradingPlatform.BusinessLayer.Instrument.AskSize
- uid: TradingPlatform.BusinessLayer.Instrument.Bid
  commentId: P:TradingPlatform.BusinessLayer.Instrument.Bid
  parent: TradingPlatform.BusinessLayer.Instrument
  name: Bid
  nameWithType: Instrument.Bid
  fullName: TradingPlatform.BusinessLayer.Instrument.Bid
- uid: TradingPlatform.BusinessLayer.Instrument.BidSize
  commentId: P:TradingPlatform.BusinessLayer.Instrument.BidSize
  parent: TradingPlatform.BusinessLayer.Instrument
  name: BidSize
  nameWithType: Instrument.BidSize
  fullName: TradingPlatform.BusinessLayer.Instrument.BidSize
- uid: TradingPlatform.BusinessLayer.Instrument.QuoteDateTime
  commentId: P:TradingPlatform.BusinessLayer.Instrument.QuoteDateTime
  parent: TradingPlatform.BusinessLayer.Instrument
  name: QuoteDateTime
  nameWithType: Instrument.QuoteDateTime
  fullName: TradingPlatform.BusinessLayer.Instrument.QuoteDateTime
- uid: TradingPlatform.BusinessLayer.Instrument.Last
  commentId: P:TradingPlatform.BusinessLayer.Instrument.Last
  parent: TradingPlatform.BusinessLayer.Instrument
  name: Last
  nameWithType: Instrument.Last
  fullName: TradingPlatform.BusinessLayer.Instrument.Last
- uid: TradingPlatform.BusinessLayer.Instrument.LastSize
  commentId: P:TradingPlatform.BusinessLayer.Instrument.LastSize
  parent: TradingPlatform.BusinessLayer.Instrument
  name: LastSize
  nameWithType: Instrument.LastSize
  fullName: TradingPlatform.BusinessLayer.Instrument.LastSize
- uid: TradingPlatform.BusinessLayer.Instrument.LastDateTime
  commentId: P:TradingPlatform.BusinessLayer.Instrument.LastDateTime
  parent: TradingPlatform.BusinessLayer.Instrument
  name: LastDateTime
  nameWithType: Instrument.LastDateTime
  fullName: TradingPlatform.BusinessLayer.Instrument.LastDateTime
- uid: TradingPlatform.BusinessLayer.Instrument.Open
  commentId: P:TradingPlatform.BusinessLayer.Instrument.Open
  parent: TradingPlatform.BusinessLayer.Instrument
  name: Open
  nameWithType: Instrument.Open
  fullName: TradingPlatform.BusinessLayer.Instrument.Open
- uid: TradingPlatform.BusinessLayer.Instrument.PrevClose
  commentId: P:TradingPlatform.BusinessLayer.Instrument.PrevClose
  parent: TradingPlatform.BusinessLayer.Instrument
  name: PrevClose
  nameWithType: Instrument.PrevClose
  fullName: TradingPlatform.BusinessLayer.Instrument.PrevClose
- uid: TradingPlatform.BusinessLayer.Instrument.High
  commentId: P:TradingPlatform.BusinessLayer.Instrument.High
  parent: TradingPlatform.BusinessLayer.Instrument
  name: High
  nameWithType: Instrument.High
  fullName: TradingPlatform.BusinessLayer.Instrument.High
- uid: TradingPlatform.BusinessLayer.Instrument.Low
  commentId: P:TradingPlatform.BusinessLayer.Instrument.Low
  parent: TradingPlatform.BusinessLayer.Instrument
  name: Low
  nameWithType: Instrument.Low
  fullName: TradingPlatform.BusinessLayer.Instrument.Low
- uid: TradingPlatform.BusinessLayer.Instrument.Volume
  commentId: P:TradingPlatform.BusinessLayer.Instrument.Volume
  parent: TradingPlatform.BusinessLayer.Instrument
  name: Volume
  nameWithType: Instrument.Volume
  fullName: TradingPlatform.BusinessLayer.Instrument.Volume
- uid: TradingPlatform.BusinessLayer.Instrument.PrevSettlement
  commentId: P:TradingPlatform.BusinessLayer.Instrument.PrevSettlement
  parent: TradingPlatform.BusinessLayer.Instrument
  name: PrevSettlement
  nameWithType: Instrument.PrevSettlement
  fullName: TradingPlatform.BusinessLayer.Instrument.PrevSettlement
- uid: TradingPlatform.BusinessLayer.Instrument.Ticks
  commentId: P:TradingPlatform.BusinessLayer.Instrument.Ticks
  parent: TradingPlatform.BusinessLayer.Instrument
  name: Ticks
  nameWithType: Instrument.Ticks
  fullName: TradingPlatform.BusinessLayer.Instrument.Ticks
- uid: TradingPlatform.BusinessLayer.Instrument.Trades
  commentId: P:TradingPlatform.BusinessLayer.Instrument.Trades
  parent: TradingPlatform.BusinessLayer.Instrument
  name: Trades
  nameWithType: Instrument.Trades
  fullName: TradingPlatform.BusinessLayer.Instrument.Trades
- uid: TradingPlatform.BusinessLayer.Instrument.Asks
  commentId: P:TradingPlatform.BusinessLayer.Instrument.Asks
  parent: TradingPlatform.BusinessLayer.Instrument
  name: Asks
  nameWithType: Instrument.Asks
  fullName: TradingPlatform.BusinessLayer.Instrument.Asks
- uid: TradingPlatform.BusinessLayer.Instrument.Bids
  commentId: P:TradingPlatform.BusinessLayer.Instrument.Bids
  parent: TradingPlatform.BusinessLayer.Instrument
  name: Bids
  nameWithType: Instrument.Bids
  fullName: TradingPlatform.BusinessLayer.Instrument.Bids
- uid: TradingPlatform.BusinessLayer.Instrument.Spread
  commentId: P:TradingPlatform.BusinessLayer.Instrument.Spread
  parent: TradingPlatform.BusinessLayer.Instrument
  name: Spread
  nameWithType: Instrument.Spread
  fullName: TradingPlatform.BusinessLayer.Instrument.Spread
- uid: TradingPlatform.BusinessLayer.Instrument.SpreadPercentage
  commentId: P:TradingPlatform.BusinessLayer.Instrument.SpreadPercentage
  parent: TradingPlatform.BusinessLayer.Instrument
  name: SpreadPercentage
  nameWithType: Instrument.SpreadPercentage
  fullName: TradingPlatform.BusinessLayer.Instrument.SpreadPercentage
- uid: TradingPlatform.BusinessLayer.Instrument.Change
  commentId: P:TradingPlatform.BusinessLayer.Instrument.Change
  parent: TradingPlatform.BusinessLayer.Instrument
  name: Change
  nameWithType: Instrument.Change
  fullName: TradingPlatform.BusinessLayer.Instrument.Change
- uid: TradingPlatform.BusinessLayer.Instrument.ChangePercentage
  commentId: P:TradingPlatform.BusinessLayer.Instrument.ChangePercentage
  parent: TradingPlatform.BusinessLayer.Instrument
  name: ChangePercentage
  nameWithType: Instrument.ChangePercentage
  fullName: TradingPlatform.BusinessLayer.Instrument.ChangePercentage
- uid: TradingPlatform.BusinessLayer.Instrument.HistoryType
  commentId: P:TradingPlatform.BusinessLayer.Instrument.HistoryType
  parent: TradingPlatform.BusinessLayer.Instrument
  name: HistoryType
  nameWithType: Instrument.HistoryType
  fullName: TradingPlatform.BusinessLayer.Instrument.HistoryType
- uid: TradingPlatform.BusinessLayer.Instrument.VolumeType
  commentId: P:TradingPlatform.BusinessLayer.Instrument.VolumeType
  parent: TradingPlatform.BusinessLayer.Instrument
  name: VolumeType
  nameWithType: Instrument.VolumeType
  fullName: TradingPlatform.BusinessLayer.Instrument.VolumeType
- uid: TradingPlatform.BusinessLayer.Instrument.NewQuote
  commentId: E:TradingPlatform.BusinessLayer.Instrument.NewQuote
  parent: TradingPlatform.BusinessLayer.Instrument
  name: NewQuote
  nameWithType: Instrument.NewQuote
  fullName: TradingPlatform.BusinessLayer.Instrument.NewQuote
- uid: TradingPlatform.BusinessLayer.Instrument.NewLevel2
  commentId: E:TradingPlatform.BusinessLayer.Instrument.NewLevel2
  parent: TradingPlatform.BusinessLayer.Instrument
  name: NewLevel2
  nameWithType: Instrument.NewLevel2
  fullName: TradingPlatform.BusinessLayer.Instrument.NewLevel2
- uid: TradingPlatform.BusinessLayer.Instrument.NewLast
  commentId: E:TradingPlatform.BusinessLayer.Instrument.NewLast
  parent: TradingPlatform.BusinessLayer.Instrument
  name: NewLast
  nameWithType: Instrument.NewLast
  fullName: TradingPlatform.BusinessLayer.Instrument.NewLast
- uid: TradingPlatform.BusinessLayer.Instrument.NewDayBar
  commentId: E:TradingPlatform.BusinessLayer.Instrument.NewDayBar
  parent: TradingPlatform.BusinessLayer.Instrument
  name: NewDayBar
  nameWithType: Instrument.NewDayBar
  fullName: TradingPlatform.BusinessLayer.Instrument.NewDayBar
- uid: TradingPlatform.BusinessLayer.Instrument.Updated
  commentId: E:TradingPlatform.BusinessLayer.Instrument.Updated
  parent: TradingPlatform.BusinessLayer.Instrument
  name: Updated
  nameWithType: Instrument.Updated
  fullName: TradingPlatform.BusinessLayer.Instrument.Updated
- uid: TradingPlatform.BusinessLayer.Instrument.AllowCalculateRealtimeTicks
  commentId: P:TradingPlatform.BusinessLayer.Instrument.AllowCalculateRealtimeTicks
  parent: TradingPlatform.BusinessLayer.Instrument
  name: AllowCalculateRealtimeTicks
  nameWithType: Instrument.AllowCalculateRealtimeTicks
  fullName: TradingPlatform.BusinessLayer.Instrument.AllowCalculateRealtimeTicks
- uid: TradingPlatform.BusinessLayer.Instrument.AllowCalculateRealtimeTrades
  commentId: P:TradingPlatform.BusinessLayer.Instrument.AllowCalculateRealtimeTrades
  parent: TradingPlatform.BusinessLayer.Instrument
  name: AllowCalculateRealtimeTrades
  nameWithType: Instrument.AllowCalculateRealtimeTrades
  fullName: TradingPlatform.BusinessLayer.Instrument.AllowCalculateRealtimeTrades
- uid: TradingPlatform.BusinessLayer.Instrument.AllowCalculateRealtimeVolume
  commentId: P:TradingPlatform.BusinessLayer.Instrument.AllowCalculateRealtimeVolume
  parent: TradingPlatform.BusinessLayer.Instrument
  name: AllowCalculateRealtimeVolume
  nameWithType: Instrument.AllowCalculateRealtimeVolume
  fullName: TradingPlatform.BusinessLayer.Instrument.AllowCalculateRealtimeVolume
- uid: TradingPlatform.BusinessLayer.Instrument.AllowCalculateRealtimeChange
  commentId: P:TradingPlatform.BusinessLayer.Instrument.AllowCalculateRealtimeChange
  parent: TradingPlatform.BusinessLayer.Instrument
  name: AllowCalculateRealtimeChange
  nameWithType: Instrument.AllowCalculateRealtimeChange
  fullName: TradingPlatform.BusinessLayer.Instrument.AllowCalculateRealtimeChange
- uid: TradingPlatform.BusinessLayer.Instrument.InitialState
  commentId: M:TradingPlatform.BusinessLayer.Instrument.InitialState
  parent: TradingPlatform.BusinessLayer.Instrument
  name: InitialState()
  nameWithType: Instrument.InitialState()
  fullName: TradingPlatform.BusinessLayer.Instrument.InitialState()
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Instrument.InitialState
    name: InitialState
    nameWithType: Instrument.InitialState
    fullName: TradingPlatform.BusinessLayer.Instrument.InitialState
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Instrument.InitialState
    name: InitialState
    nameWithType: Instrument.InitialState
    fullName: TradingPlatform.BusinessLayer.Instrument.InitialState
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Instrument.GetMessage
  commentId: M:TradingPlatform.BusinessLayer.Instrument.GetMessage
  parent: TradingPlatform.BusinessLayer.Instrument
  name: GetMessage()
  nameWithType: Instrument.GetMessage()
  fullName: TradingPlatform.BusinessLayer.Instrument.GetMessage()
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Instrument.GetMessage
    name: GetMessage
    nameWithType: Instrument.GetMessage
    fullName: TradingPlatform.BusinessLayer.Instrument.GetMessage
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Instrument.GetMessage
    name: GetMessage
    nameWithType: Instrument.GetMessage
    fullName: TradingPlatform.BusinessLayer.Instrument.GetMessage
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Instrument.Subscribe(TradingPlatform.BusinessLayer.SubscribeQuoteType)
  commentId: M:TradingPlatform.BusinessLayer.Instrument.Subscribe(TradingPlatform.BusinessLayer.SubscribeQuoteType)
  parent: TradingPlatform.BusinessLayer.Instrument
  name: Subscribe(SubscribeQuoteType)
  nameWithType: Instrument.Subscribe(SubscribeQuoteType)
  fullName: TradingPlatform.BusinessLayer.Instrument.Subscribe(TradingPlatform.BusinessLayer.SubscribeQuoteType)
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Instrument.Subscribe(TradingPlatform.BusinessLayer.SubscribeQuoteType)
    name: Subscribe
    nameWithType: Instrument.Subscribe
    fullName: TradingPlatform.BusinessLayer.Instrument.Subscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: TradingPlatform.BusinessLayer.SubscribeQuoteType
    name: SubscribeQuoteType
    nameWithType: SubscribeQuoteType
    fullName: TradingPlatform.BusinessLayer.SubscribeQuoteType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Instrument.Subscribe(TradingPlatform.BusinessLayer.SubscribeQuoteType)
    name: Subscribe
    nameWithType: Instrument.Subscribe
    fullName: TradingPlatform.BusinessLayer.Instrument.Subscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: TradingPlatform.BusinessLayer.SubscribeQuoteType
    name: SubscribeQuoteType
    nameWithType: SubscribeQuoteType
    fullName: TradingPlatform.BusinessLayer.SubscribeQuoteType
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Instrument.UnSubscribe(TradingPlatform.BusinessLayer.SubscribeQuoteType)
  commentId: M:TradingPlatform.BusinessLayer.Instrument.UnSubscribe(TradingPlatform.BusinessLayer.SubscribeQuoteType)
  parent: TradingPlatform.BusinessLayer.Instrument
  name: UnSubscribe(SubscribeQuoteType)
  nameWithType: Instrument.UnSubscribe(SubscribeQuoteType)
  fullName: TradingPlatform.BusinessLayer.Instrument.UnSubscribe(TradingPlatform.BusinessLayer.SubscribeQuoteType)
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Instrument.UnSubscribe(TradingPlatform.BusinessLayer.SubscribeQuoteType)
    name: UnSubscribe
    nameWithType: Instrument.UnSubscribe
    fullName: TradingPlatform.BusinessLayer.Instrument.UnSubscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: TradingPlatform.BusinessLayer.SubscribeQuoteType
    name: SubscribeQuoteType
    nameWithType: SubscribeQuoteType
    fullName: TradingPlatform.BusinessLayer.SubscribeQuoteType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Instrument.UnSubscribe(TradingPlatform.BusinessLayer.SubscribeQuoteType)
    name: UnSubscribe
    nameWithType: Instrument.UnSubscribe
    fullName: TradingPlatform.BusinessLayer.Instrument.UnSubscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: TradingPlatform.BusinessLayer.SubscribeQuoteType
    name: SubscribeQuoteType
    nameWithType: SubscribeQuoteType
    fullName: TradingPlatform.BusinessLayer.SubscribeQuoteType
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Instrument.GetHistory(TradingPlatform.BusinessLayer.Period,TradingPlatform.BusinessLayer.HistoryType,System.DateTime,System.DateTime)
  commentId: M:TradingPlatform.BusinessLayer.Instrument.GetHistory(TradingPlatform.BusinessLayer.Period,TradingPlatform.BusinessLayer.HistoryType,System.DateTime,System.DateTime)
  parent: TradingPlatform.BusinessLayer.Instrument
  isExternal: true
  name: GetHistory(Period, HistoryType, DateTime, DateTime)
  nameWithType: Instrument.GetHistory(Period, HistoryType, DateTime, DateTime)
  fullName: TradingPlatform.BusinessLayer.Instrument.GetHistory(TradingPlatform.BusinessLayer.Period, TradingPlatform.BusinessLayer.HistoryType, System.DateTime, System.DateTime)
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Instrument.GetHistory(TradingPlatform.BusinessLayer.Period,TradingPlatform.BusinessLayer.HistoryType,System.DateTime,System.DateTime)
    name: GetHistory
    nameWithType: Instrument.GetHistory
    fullName: TradingPlatform.BusinessLayer.Instrument.GetHistory
  - name: (
    nameWithType: (
    fullName: (
  - uid: TradingPlatform.BusinessLayer.Period
    name: Period
    nameWithType: Period
    fullName: TradingPlatform.BusinessLayer.Period
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TradingPlatform.BusinessLayer.HistoryType
    name: HistoryType
    nameWithType: HistoryType
    fullName: TradingPlatform.BusinessLayer.HistoryType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Instrument.GetHistory(TradingPlatform.BusinessLayer.Period,TradingPlatform.BusinessLayer.HistoryType,System.DateTime,System.DateTime)
    name: GetHistory
    nameWithType: Instrument.GetHistory
    fullName: TradingPlatform.BusinessLayer.Instrument.GetHistory
  - name: (
    nameWithType: (
    fullName: (
  - uid: TradingPlatform.BusinessLayer.Period
    name: Period
    nameWithType: Period
    fullName: TradingPlatform.BusinessLayer.Period
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TradingPlatform.BusinessLayer.HistoryType
    name: HistoryType
    nameWithType: HistoryType
    fullName: TradingPlatform.BusinessLayer.HistoryType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Instrument.GetHistory(TradingPlatform.BusinessLayer.HistoryAggregation,TradingPlatform.BusinessLayer.HistoryType,System.DateTime,System.DateTime)
  commentId: M:TradingPlatform.BusinessLayer.Instrument.GetHistory(TradingPlatform.BusinessLayer.HistoryAggregation,TradingPlatform.BusinessLayer.HistoryType,System.DateTime,System.DateTime)
  parent: TradingPlatform.BusinessLayer.Instrument
  isExternal: true
  name: GetHistory(HistoryAggregation, HistoryType, DateTime, DateTime)
  nameWithType: Instrument.GetHistory(HistoryAggregation, HistoryType, DateTime, DateTime)
  fullName: TradingPlatform.BusinessLayer.Instrument.GetHistory(TradingPlatform.BusinessLayer.HistoryAggregation, TradingPlatform.BusinessLayer.HistoryType, System.DateTime, System.DateTime)
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Instrument.GetHistory(TradingPlatform.BusinessLayer.HistoryAggregation,TradingPlatform.BusinessLayer.HistoryType,System.DateTime,System.DateTime)
    name: GetHistory
    nameWithType: Instrument.GetHistory
    fullName: TradingPlatform.BusinessLayer.Instrument.GetHistory
  - name: (
    nameWithType: (
    fullName: (
  - uid: TradingPlatform.BusinessLayer.HistoryAggregation
    name: HistoryAggregation
    nameWithType: HistoryAggregation
    fullName: TradingPlatform.BusinessLayer.HistoryAggregation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TradingPlatform.BusinessLayer.HistoryType
    name: HistoryType
    nameWithType: HistoryType
    fullName: TradingPlatform.BusinessLayer.HistoryType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Instrument.GetHistory(TradingPlatform.BusinessLayer.HistoryAggregation,TradingPlatform.BusinessLayer.HistoryType,System.DateTime,System.DateTime)
    name: GetHistory
    nameWithType: Instrument.GetHistory
    fullName: TradingPlatform.BusinessLayer.Instrument.GetHistory
  - name: (
    nameWithType: (
    fullName: (
  - uid: TradingPlatform.BusinessLayer.HistoryAggregation
    name: HistoryAggregation
    nameWithType: HistoryAggregation
    fullName: TradingPlatform.BusinessLayer.HistoryAggregation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TradingPlatform.BusinessLayer.HistoryType
    name: HistoryType
    nameWithType: HistoryType
    fullName: TradingPlatform.BusinessLayer.HistoryType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Instrument.GetHistory(TradingPlatform.BusinessLayer.HistoryRequestParameters)
  commentId: M:TradingPlatform.BusinessLayer.Instrument.GetHistory(TradingPlatform.BusinessLayer.HistoryRequestParameters)
  parent: TradingPlatform.BusinessLayer.Instrument
  name: GetHistory(HistoryRequestParameters)
  nameWithType: Instrument.GetHistory(HistoryRequestParameters)
  fullName: TradingPlatform.BusinessLayer.Instrument.GetHistory(TradingPlatform.BusinessLayer.HistoryRequestParameters)
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Instrument.GetHistory(TradingPlatform.BusinessLayer.HistoryRequestParameters)
    name: GetHistory
    nameWithType: Instrument.GetHistory
    fullName: TradingPlatform.BusinessLayer.Instrument.GetHistory
  - name: (
    nameWithType: (
    fullName: (
  - uid: TradingPlatform.BusinessLayer.HistoryRequestParameters
    name: HistoryRequestParameters
    nameWithType: HistoryRequestParameters
    fullName: TradingPlatform.BusinessLayer.HistoryRequestParameters
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Instrument.GetHistory(TradingPlatform.BusinessLayer.HistoryRequestParameters)
    name: GetHistory
    nameWithType: Instrument.GetHistory
    fullName: TradingPlatform.BusinessLayer.Instrument.GetHistory
  - name: (
    nameWithType: (
    fullName: (
  - uid: TradingPlatform.BusinessLayer.HistoryRequestParameters
    name: HistoryRequestParameters
    nameWithType: HistoryRequestParameters
    fullName: TradingPlatform.BusinessLayer.HistoryRequestParameters
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Instrument.GetTickHistory(TradingPlatform.BusinessLayer.HistoryType,System.DateTime,System.DateTime)
  commentId: M:TradingPlatform.BusinessLayer.Instrument.GetTickHistory(TradingPlatform.BusinessLayer.HistoryType,System.DateTime,System.DateTime)
  parent: TradingPlatform.BusinessLayer.Instrument
  isExternal: true
  name: GetTickHistory(HistoryType, DateTime, DateTime)
  nameWithType: Instrument.GetTickHistory(HistoryType, DateTime, DateTime)
  fullName: TradingPlatform.BusinessLayer.Instrument.GetTickHistory(TradingPlatform.BusinessLayer.HistoryType, System.DateTime, System.DateTime)
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Instrument.GetTickHistory(TradingPlatform.BusinessLayer.HistoryType,System.DateTime,System.DateTime)
    name: GetTickHistory
    nameWithType: Instrument.GetTickHistory
    fullName: TradingPlatform.BusinessLayer.Instrument.GetTickHistory
  - name: (
    nameWithType: (
    fullName: (
  - uid: TradingPlatform.BusinessLayer.HistoryType
    name: HistoryType
    nameWithType: HistoryType
    fullName: TradingPlatform.BusinessLayer.HistoryType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Instrument.GetTickHistory(TradingPlatform.BusinessLayer.HistoryType,System.DateTime,System.DateTime)
    name: GetTickHistory
    nameWithType: Instrument.GetTickHistory
    fullName: TradingPlatform.BusinessLayer.Instrument.GetTickHistory
  - name: (
    nameWithType: (
    fullName: (
  - uid: TradingPlatform.BusinessLayer.HistoryType
    name: HistoryType
    nameWithType: HistoryType
    fullName: TradingPlatform.BusinessLayer.HistoryType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Instrument.RoundPriceToTickSize(System.Double)
  commentId: M:TradingPlatform.BusinessLayer.Instrument.RoundPriceToTickSize(System.Double)
  parent: TradingPlatform.BusinessLayer.Instrument
  isExternal: true
  name: RoundPriceToTickSize(Double)
  nameWithType: Instrument.RoundPriceToTickSize(Double)
  fullName: TradingPlatform.BusinessLayer.Instrument.RoundPriceToTickSize(System.Double)
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Instrument.RoundPriceToTickSize(System.Double)
    name: RoundPriceToTickSize
    nameWithType: Instrument.RoundPriceToTickSize
    fullName: TradingPlatform.BusinessLayer.Instrument.RoundPriceToTickSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Instrument.RoundPriceToTickSize(System.Double)
    name: RoundPriceToTickSize
    nameWithType: Instrument.RoundPriceToTickSize
    fullName: TradingPlatform.BusinessLayer.Instrument.RoundPriceToTickSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Instrument.CalculatePrice(System.Double,System.Double)
  commentId: M:TradingPlatform.BusinessLayer.Instrument.CalculatePrice(System.Double,System.Double)
  parent: TradingPlatform.BusinessLayer.Instrument
  isExternal: true
  name: CalculatePrice(Double, Double)
  nameWithType: Instrument.CalculatePrice(Double, Double)
  fullName: TradingPlatform.BusinessLayer.Instrument.CalculatePrice(System.Double, System.Double)
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Instrument.CalculatePrice(System.Double,System.Double)
    name: CalculatePrice
    nameWithType: Instrument.CalculatePrice
    fullName: TradingPlatform.BusinessLayer.Instrument.CalculatePrice
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Instrument.CalculatePrice(System.Double,System.Double)
    name: CalculatePrice
    nameWithType: Instrument.CalculatePrice
    fullName: TradingPlatform.BusinessLayer.Instrument.CalculatePrice
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Instrument.CalculateTicks(System.Double,System.Double)
  commentId: M:TradingPlatform.BusinessLayer.Instrument.CalculateTicks(System.Double,System.Double)
  parent: TradingPlatform.BusinessLayer.Instrument
  isExternal: true
  name: CalculateTicks(Double, Double)
  nameWithType: Instrument.CalculateTicks(Double, Double)
  fullName: TradingPlatform.BusinessLayer.Instrument.CalculateTicks(System.Double, System.Double)
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Instrument.CalculateTicks(System.Double,System.Double)
    name: CalculateTicks
    nameWithType: Instrument.CalculateTicks
    fullName: TradingPlatform.BusinessLayer.Instrument.CalculateTicks
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Instrument.CalculateTicks(System.Double,System.Double)
    name: CalculateTicks
    nameWithType: Instrument.CalculateTicks
    fullName: TradingPlatform.BusinessLayer.Instrument.CalculateTicks
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Instrument.GetTickSize(System.Double)
  commentId: M:TradingPlatform.BusinessLayer.Instrument.GetTickSize(System.Double)
  parent: TradingPlatform.BusinessLayer.Instrument
  isExternal: true
  name: GetTickSize(Double)
  nameWithType: Instrument.GetTickSize(Double)
  fullName: TradingPlatform.BusinessLayer.Instrument.GetTickSize(System.Double)
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Instrument.GetTickSize(System.Double)
    name: GetTickSize
    nameWithType: Instrument.GetTickSize
    fullName: TradingPlatform.BusinessLayer.Instrument.GetTickSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Instrument.GetTickSize(System.Double)
    name: GetTickSize
    nameWithType: Instrument.GetTickSize
    fullName: TradingPlatform.BusinessLayer.Instrument.GetTickSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Instrument.GetTickCost(System.Double)
  commentId: M:TradingPlatform.BusinessLayer.Instrument.GetTickCost(System.Double)
  parent: TradingPlatform.BusinessLayer.Instrument
  isExternal: true
  name: GetTickCost(Double)
  nameWithType: Instrument.GetTickCost(Double)
  fullName: TradingPlatform.BusinessLayer.Instrument.GetTickCost(System.Double)
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Instrument.GetTickCost(System.Double)
    name: GetTickCost
    nameWithType: Instrument.GetTickCost
    fullName: TradingPlatform.BusinessLayer.Instrument.GetTickCost
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Instrument.GetTickCost(System.Double)
    name: GetTickCost
    nameWithType: Instrument.GetTickCost
    fullName: TradingPlatform.BusinessLayer.Instrument.GetTickCost
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Instrument.FindVariableTick(System.Double)
  commentId: M:TradingPlatform.BusinessLayer.Instrument.FindVariableTick(System.Double)
  parent: TradingPlatform.BusinessLayer.Instrument
  isExternal: true
  name: FindVariableTick(Double)
  nameWithType: Instrument.FindVariableTick(Double)
  fullName: TradingPlatform.BusinessLayer.Instrument.FindVariableTick(System.Double)
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Instrument.FindVariableTick(System.Double)
    name: FindVariableTick
    nameWithType: Instrument.FindVariableTick
    fullName: TradingPlatform.BusinessLayer.Instrument.FindVariableTick
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Instrument.FindVariableTick(System.Double)
    name: FindVariableTick
    nameWithType: Instrument.FindVariableTick
    fullName: TradingPlatform.BusinessLayer.Instrument.FindVariableTick
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Instrument.TickSize
  commentId: P:TradingPlatform.BusinessLayer.Instrument.TickSize
  parent: TradingPlatform.BusinessLayer.Instrument
  name: TickSize
  nameWithType: Instrument.TickSize
  fullName: TradingPlatform.BusinessLayer.Instrument.TickSize
- uid: TradingPlatform.BusinessLayer.Instrument.GetVWAPForOrderRequest(TradingPlatform.BusinessLayer.OrderRequestParameters)
  commentId: M:TradingPlatform.BusinessLayer.Instrument.GetVWAPForOrderRequest(TradingPlatform.BusinessLayer.OrderRequestParameters)
  parent: TradingPlatform.BusinessLayer.Instrument
  name: GetVWAPForOrderRequest(OrderRequestParameters)
  nameWithType: Instrument.GetVWAPForOrderRequest(OrderRequestParameters)
  fullName: TradingPlatform.BusinessLayer.Instrument.GetVWAPForOrderRequest(TradingPlatform.BusinessLayer.OrderRequestParameters)
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Instrument.GetVWAPForOrderRequest(TradingPlatform.BusinessLayer.OrderRequestParameters)
    name: GetVWAPForOrderRequest
    nameWithType: Instrument.GetVWAPForOrderRequest
    fullName: TradingPlatform.BusinessLayer.Instrument.GetVWAPForOrderRequest
  - name: (
    nameWithType: (
    fullName: (
  - uid: TradingPlatform.BusinessLayer.OrderRequestParameters
    name: OrderRequestParameters
    nameWithType: OrderRequestParameters
    fullName: TradingPlatform.BusinessLayer.OrderRequestParameters
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Instrument.GetVWAPForOrderRequest(TradingPlatform.BusinessLayer.OrderRequestParameters)
    name: GetVWAPForOrderRequest
    nameWithType: Instrument.GetVWAPForOrderRequest
    fullName: TradingPlatform.BusinessLayer.Instrument.GetVWAPForOrderRequest
  - name: (
    nameWithType: (
    fullName: (
  - uid: TradingPlatform.BusinessLayer.OrderRequestParameters
    name: OrderRequestParameters
    nameWithType: OrderRequestParameters
    fullName: TradingPlatform.BusinessLayer.OrderRequestParameters
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Instrument.OnUpdated
  commentId: M:TradingPlatform.BusinessLayer.Instrument.OnUpdated
  parent: TradingPlatform.BusinessLayer.Instrument
  name: OnUpdated()
  nameWithType: Instrument.OnUpdated()
  fullName: TradingPlatform.BusinessLayer.Instrument.OnUpdated()
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Instrument.OnUpdated
    name: OnUpdated
    nameWithType: Instrument.OnUpdated
    fullName: TradingPlatform.BusinessLayer.Instrument.OnUpdated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Instrument.OnUpdated
    name: OnUpdated
    nameWithType: Instrument.OnUpdated
    fullName: TradingPlatform.BusinessLayer.Instrument.OnUpdated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Instrument.ToString
  commentId: M:TradingPlatform.BusinessLayer.Instrument.ToString
  parent: TradingPlatform.BusinessLayer.Instrument
  name: ToString()
  nameWithType: Instrument.ToString()
  fullName: TradingPlatform.BusinessLayer.Instrument.ToString()
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Instrument.ToString
    name: ToString
    nameWithType: Instrument.ToString
    fullName: TradingPlatform.BusinessLayer.Instrument.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Instrument.ToString
    name: ToString
    nameWithType: Instrument.ToString
    fullName: TradingPlatform.BusinessLayer.Instrument.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Instrument.CreateInfo
  commentId: M:TradingPlatform.BusinessLayer.Instrument.CreateInfo
  parent: TradingPlatform.BusinessLayer.Instrument
  name: CreateInfo()
  nameWithType: Instrument.CreateInfo()
  fullName: TradingPlatform.BusinessLayer.Instrument.CreateInfo()
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Instrument.CreateInfo
    name: CreateInfo
    nameWithType: Instrument.CreateInfo
    fullName: TradingPlatform.BusinessLayer.Instrument.CreateInfo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Instrument.CreateInfo
    name: CreateInfo
    nameWithType: Instrument.CreateInfo
    fullName: TradingPlatform.BusinessLayer.Instrument.CreateInfo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Instrument.FormatPrice(System.Double)
  commentId: M:TradingPlatform.BusinessLayer.Instrument.FormatPrice(System.Double)
  parent: TradingPlatform.BusinessLayer.Instrument
  isExternal: true
  name: FormatPrice(Double)
  nameWithType: Instrument.FormatPrice(Double)
  fullName: TradingPlatform.BusinessLayer.Instrument.FormatPrice(System.Double)
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Instrument.FormatPrice(System.Double)
    name: FormatPrice
    nameWithType: Instrument.FormatPrice
    fullName: TradingPlatform.BusinessLayer.Instrument.FormatPrice
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Instrument.FormatPrice(System.Double)
    name: FormatPrice
    nameWithType: Instrument.FormatPrice
    fullName: TradingPlatform.BusinessLayer.Instrument.FormatPrice
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Instrument.FormatPriceWithMaxPrecision(System.Double)
  commentId: M:TradingPlatform.BusinessLayer.Instrument.FormatPriceWithMaxPrecision(System.Double)
  parent: TradingPlatform.BusinessLayer.Instrument
  isExternal: true
  name: FormatPriceWithMaxPrecision(Double)
  nameWithType: Instrument.FormatPriceWithMaxPrecision(Double)
  fullName: TradingPlatform.BusinessLayer.Instrument.FormatPriceWithMaxPrecision(System.Double)
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Instrument.FormatPriceWithMaxPrecision(System.Double)
    name: FormatPriceWithMaxPrecision
    nameWithType: Instrument.FormatPriceWithMaxPrecision
    fullName: TradingPlatform.BusinessLayer.Instrument.FormatPriceWithMaxPrecision
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Instrument.FormatPriceWithMaxPrecision(System.Double)
    name: FormatPriceWithMaxPrecision
    nameWithType: Instrument.FormatPriceWithMaxPrecision
    fullName: TradingPlatform.BusinessLayer.Instrument.FormatPriceWithMaxPrecision
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Instrument.FormatOffset(System.Double)
  commentId: M:TradingPlatform.BusinessLayer.Instrument.FormatOffset(System.Double)
  parent: TradingPlatform.BusinessLayer.Instrument
  isExternal: true
  name: FormatOffset(Double)
  nameWithType: Instrument.FormatOffset(Double)
  fullName: TradingPlatform.BusinessLayer.Instrument.FormatOffset(System.Double)
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Instrument.FormatOffset(System.Double)
    name: FormatOffset
    nameWithType: Instrument.FormatOffset
    fullName: TradingPlatform.BusinessLayer.Instrument.FormatOffset
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Instrument.FormatOffset(System.Double)
    name: FormatOffset
    nameWithType: Instrument.FormatOffset
    fullName: TradingPlatform.BusinessLayer.Instrument.FormatOffset
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Instrument.CompareTo(System.Object)
  commentId: M:TradingPlatform.BusinessLayer.Instrument.CompareTo(System.Object)
  parent: TradingPlatform.BusinessLayer.Instrument
  isExternal: true
  name: CompareTo(Object)
  nameWithType: Instrument.CompareTo(Object)
  fullName: TradingPlatform.BusinessLayer.Instrument.CompareTo(System.Object)
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Instrument.CompareTo(System.Object)
    name: CompareTo
    nameWithType: Instrument.CompareTo
    fullName: TradingPlatform.BusinessLayer.Instrument.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Instrument.CompareTo(System.Object)
    name: CompareTo
    nameWithType: Instrument.CompareTo
    fullName: TradingPlatform.BusinessLayer.Instrument.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Instrument.ToXElement
  commentId: M:TradingPlatform.BusinessLayer.Instrument.ToXElement
  parent: TradingPlatform.BusinessLayer.Instrument
  name: ToXElement()
  nameWithType: Instrument.ToXElement()
  fullName: TradingPlatform.BusinessLayer.Instrument.ToXElement()
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Instrument.ToXElement
    name: ToXElement
    nameWithType: Instrument.ToXElement
    fullName: TradingPlatform.BusinessLayer.Instrument.ToXElement
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Instrument.ToXElement
    name: ToXElement
    nameWithType: Instrument.ToXElement
    fullName: TradingPlatform.BusinessLayer.Instrument.ToXElement
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Instrument.FromXElement(System.Xml.Linq.XElement,TradingPlatform.BusinessLayer.Serialization.DeserializationInfo)
  commentId: M:TradingPlatform.BusinessLayer.Instrument.FromXElement(System.Xml.Linq.XElement,TradingPlatform.BusinessLayer.Serialization.DeserializationInfo)
  parent: TradingPlatform.BusinessLayer.Instrument
  isExternal: true
  name: FromXElement(XElement, DeserializationInfo)
  nameWithType: Instrument.FromXElement(XElement, DeserializationInfo)
  fullName: TradingPlatform.BusinessLayer.Instrument.FromXElement(System.Xml.Linq.XElement, TradingPlatform.BusinessLayer.Serialization.DeserializationInfo)
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Instrument.FromXElement(System.Xml.Linq.XElement,TradingPlatform.BusinessLayer.Serialization.DeserializationInfo)
    name: FromXElement
    nameWithType: Instrument.FromXElement
    fullName: TradingPlatform.BusinessLayer.Instrument.FromXElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.Linq.XElement
    name: XElement
    nameWithType: XElement
    fullName: System.Xml.Linq.XElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TradingPlatform.BusinessLayer.Serialization.DeserializationInfo
    name: DeserializationInfo
    nameWithType: DeserializationInfo
    fullName: TradingPlatform.BusinessLayer.Serialization.DeserializationInfo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Instrument.FromXElement(System.Xml.Linq.XElement,TradingPlatform.BusinessLayer.Serialization.DeserializationInfo)
    name: FromXElement
    nameWithType: Instrument.FromXElement
    fullName: TradingPlatform.BusinessLayer.Instrument.FromXElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.Linq.XElement
    name: XElement
    nameWithType: XElement
    fullName: System.Xml.Linq.XElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TradingPlatform.BusinessLayer.Serialization.DeserializationInfo
    name: DeserializationInfo
    nameWithType: DeserializationInfo
    fullName: TradingPlatform.BusinessLayer.Serialization.DeserializationInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.BusinessObject.ConnectionId
  commentId: P:TradingPlatform.BusinessLayer.BusinessObject.ConnectionId
  parent: TradingPlatform.BusinessLayer.BusinessObject
  name: ConnectionId
  nameWithType: BusinessObject.ConnectionId
  fullName: TradingPlatform.BusinessLayer.BusinessObject.ConnectionId
- uid: TradingPlatform.BusinessLayer.BusinessObject.UniqueId
  commentId: P:TradingPlatform.BusinessLayer.BusinessObject.UniqueId
  parent: TradingPlatform.BusinessLayer.BusinessObject
  name: UniqueId
  nameWithType: BusinessObject.UniqueId
  fullName: TradingPlatform.BusinessLayer.BusinessObject.UniqueId
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TradingPlatform.BusinessLayer.Serialization
  commentId: N:TradingPlatform.BusinessLayer.Serialization
  name: TradingPlatform.BusinessLayer.Serialization
  nameWithType: TradingPlatform.BusinessLayer.Serialization
  fullName: TradingPlatform.BusinessLayer.Serialization
- uid: System.Collections.Generic.List{TradingPlatform.BusinessLayer.SyntheticItem}
  commentId: T:System.Collections.Generic.List{TradingPlatform.BusinessLayer.SyntheticItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<SyntheticItem>
  nameWithType: List<SyntheticItem>
  fullName: System.Collections.Generic.List<TradingPlatform.BusinessLayer.SyntheticItem>
  nameWithType.vb: List(Of SyntheticItem)
  fullName.vb: System.Collections.Generic.List(Of TradingPlatform.BusinessLayer.SyntheticItem)
  name.vb: List(Of SyntheticItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TradingPlatform.BusinessLayer.SyntheticItem
    name: SyntheticItem
    nameWithType: SyntheticItem
    fullName: TradingPlatform.BusinessLayer.SyntheticItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TradingPlatform.BusinessLayer.SyntheticItem
    name: SyntheticItem
    nameWithType: SyntheticItem
    fullName: TradingPlatform.BusinessLayer.SyntheticItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Action{TradingPlatform.BusinessLayer.Synthetic}
  commentId: T:System.Action{TradingPlatform.BusinessLayer.Synthetic}
  parent: System
  definition: System.Action`1
  name: Action<Synthetic>
  nameWithType: Action<Synthetic>
  fullName: System.Action<TradingPlatform.BusinessLayer.Synthetic>
  nameWithType.vb: Action(Of Synthetic)
  fullName.vb: System.Action(Of TradingPlatform.BusinessLayer.Synthetic)
  name.vb: Action(Of Synthetic)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TradingPlatform.BusinessLayer.Synthetic
    name: Synthetic
    nameWithType: Synthetic
    fullName: TradingPlatform.BusinessLayer.Synthetic
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TradingPlatform.BusinessLayer.Synthetic
    name: Synthetic
    nameWithType: Synthetic
    fullName: TradingPlatform.BusinessLayer.Synthetic
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TradingPlatform.BusinessLayer.Synthetic.SyntheticState*
  commentId: Overload:TradingPlatform.BusinessLayer.Synthetic.SyntheticState
  name: SyntheticState
  nameWithType: Synthetic.SyntheticState
  fullName: TradingPlatform.BusinessLayer.Synthetic.SyntheticState
- uid: TradingPlatform.BusinessLayer.SyntheticState
  commentId: T:TradingPlatform.BusinessLayer.SyntheticState
  parent: TradingPlatform.BusinessLayer
  name: SyntheticState
  nameWithType: SyntheticState
  fullName: TradingPlatform.BusinessLayer.SyntheticState
- uid: TradingPlatform.BusinessLayer.BusinessObject.State
  commentId: P:TradingPlatform.BusinessLayer.BusinessObject.State
  parent: TradingPlatform.BusinessLayer.BusinessObject
  name: State
  nameWithType: BusinessObject.State
  fullName: TradingPlatform.BusinessLayer.BusinessObject.State
- uid: TradingPlatform.BusinessLayer.Synthetic.State*
  commentId: Overload:TradingPlatform.BusinessLayer.Synthetic.State
  name: State
  nameWithType: Synthetic.State
  fullName: TradingPlatform.BusinessLayer.Synthetic.State
- uid: TradingPlatform.BusinessLayer.BusinessObjectState
  commentId: T:TradingPlatform.BusinessLayer.BusinessObjectState
  parent: TradingPlatform.BusinessLayer
  name: BusinessObjectState
  nameWithType: BusinessObjectState
  fullName: TradingPlatform.BusinessLayer.BusinessObjectState
- uid: TradingPlatform.BusinessLayer.Synthetic.#ctor*
  commentId: Overload:TradingPlatform.BusinessLayer.Synthetic.#ctor
  name: Synthetic
  nameWithType: Synthetic.Synthetic
  fullName: TradingPlatform.BusinessLayer.Synthetic.Synthetic
- uid: TradingPlatform.BusinessLayer.Synthetic.Rename*
  commentId: Overload:TradingPlatform.BusinessLayer.Synthetic.Rename
  name: Rename
  nameWithType: Synthetic.Rename
  fullName: TradingPlatform.BusinessLayer.Synthetic.Rename
- uid: TradingPlatform.BusinessLayer.Synthetic.Reinitialize*
  commentId: Overload:TradingPlatform.BusinessLayer.Synthetic.Reinitialize
  name: Reinitialize
  nameWithType: Synthetic.Reinitialize
  fullName: TradingPlatform.BusinessLayer.Synthetic.Reinitialize
- uid: TradingPlatform.BusinessLayer.CustomInstrument.Dispose
  commentId: M:TradingPlatform.BusinessLayer.CustomInstrument.Dispose
  parent: TradingPlatform.BusinessLayer.CustomInstrument
  name: Dispose()
  nameWithType: CustomInstrument.Dispose()
  fullName: TradingPlatform.BusinessLayer.CustomInstrument.Dispose()
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.CustomInstrument.Dispose
    name: Dispose
    nameWithType: CustomInstrument.Dispose
    fullName: TradingPlatform.BusinessLayer.CustomInstrument.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.CustomInstrument.Dispose
    name: Dispose
    nameWithType: CustomInstrument.Dispose
    fullName: TradingPlatform.BusinessLayer.CustomInstrument.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Synthetic.Dispose*
  commentId: Overload:TradingPlatform.BusinessLayer.Synthetic.Dispose
  name: Dispose
  nameWithType: Synthetic.Dispose
  fullName: TradingPlatform.BusinessLayer.Synthetic.Dispose
- uid: TradingPlatform.BusinessLayer.Instrument.SubscribeAction(TradingPlatform.BusinessLayer.SubscribeQuoteType)
  commentId: M:TradingPlatform.BusinessLayer.Instrument.SubscribeAction(TradingPlatform.BusinessLayer.SubscribeQuoteType)
  parent: TradingPlatform.BusinessLayer.Instrument
  name: SubscribeAction(SubscribeQuoteType)
  nameWithType: Instrument.SubscribeAction(SubscribeQuoteType)
  fullName: TradingPlatform.BusinessLayer.Instrument.SubscribeAction(TradingPlatform.BusinessLayer.SubscribeQuoteType)
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Instrument.SubscribeAction(TradingPlatform.BusinessLayer.SubscribeQuoteType)
    name: SubscribeAction
    nameWithType: Instrument.SubscribeAction
    fullName: TradingPlatform.BusinessLayer.Instrument.SubscribeAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: TradingPlatform.BusinessLayer.SubscribeQuoteType
    name: SubscribeQuoteType
    nameWithType: SubscribeQuoteType
    fullName: TradingPlatform.BusinessLayer.SubscribeQuoteType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Instrument.SubscribeAction(TradingPlatform.BusinessLayer.SubscribeQuoteType)
    name: SubscribeAction
    nameWithType: Instrument.SubscribeAction
    fullName: TradingPlatform.BusinessLayer.Instrument.SubscribeAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: TradingPlatform.BusinessLayer.SubscribeQuoteType
    name: SubscribeQuoteType
    nameWithType: SubscribeQuoteType
    fullName: TradingPlatform.BusinessLayer.SubscribeQuoteType
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Synthetic.SubscribeAction*
  commentId: Overload:TradingPlatform.BusinessLayer.Synthetic.SubscribeAction
  name: SubscribeAction
  nameWithType: Synthetic.SubscribeAction
  fullName: TradingPlatform.BusinessLayer.Synthetic.SubscribeAction
- uid: TradingPlatform.BusinessLayer.SubscribeQuoteType
  commentId: T:TradingPlatform.BusinessLayer.SubscribeQuoteType
  parent: TradingPlatform.BusinessLayer
  name: SubscribeQuoteType
  nameWithType: SubscribeQuoteType
  fullName: TradingPlatform.BusinessLayer.SubscribeQuoteType
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TradingPlatform.BusinessLayer.Instrument.UnSubscribeAction(TradingPlatform.BusinessLayer.SubscribeQuoteType)
  commentId: M:TradingPlatform.BusinessLayer.Instrument.UnSubscribeAction(TradingPlatform.BusinessLayer.SubscribeQuoteType)
  parent: TradingPlatform.BusinessLayer.Instrument
  name: UnSubscribeAction(SubscribeQuoteType)
  nameWithType: Instrument.UnSubscribeAction(SubscribeQuoteType)
  fullName: TradingPlatform.BusinessLayer.Instrument.UnSubscribeAction(TradingPlatform.BusinessLayer.SubscribeQuoteType)
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Instrument.UnSubscribeAction(TradingPlatform.BusinessLayer.SubscribeQuoteType)
    name: UnSubscribeAction
    nameWithType: Instrument.UnSubscribeAction
    fullName: TradingPlatform.BusinessLayer.Instrument.UnSubscribeAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: TradingPlatform.BusinessLayer.SubscribeQuoteType
    name: SubscribeQuoteType
    nameWithType: SubscribeQuoteType
    fullName: TradingPlatform.BusinessLayer.SubscribeQuoteType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Instrument.UnSubscribeAction(TradingPlatform.BusinessLayer.SubscribeQuoteType)
    name: UnSubscribeAction
    nameWithType: Instrument.UnSubscribeAction
    fullName: TradingPlatform.BusinessLayer.Instrument.UnSubscribeAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: TradingPlatform.BusinessLayer.SubscribeQuoteType
    name: SubscribeQuoteType
    nameWithType: SubscribeQuoteType
    fullName: TradingPlatform.BusinessLayer.SubscribeQuoteType
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Synthetic.UnSubscribeAction*
  commentId: Overload:TradingPlatform.BusinessLayer.Synthetic.UnSubscribeAction
  name: UnSubscribeAction
  nameWithType: Synthetic.UnSubscribeAction
  fullName: TradingPlatform.BusinessLayer.Synthetic.UnSubscribeAction
- uid: TradingPlatform.BusinessLayer.Instrument.CreateHistoricalData(TradingPlatform.BusinessLayer.HistoryRequestParameters)
  commentId: M:TradingPlatform.BusinessLayer.Instrument.CreateHistoricalData(TradingPlatform.BusinessLayer.HistoryRequestParameters)
  parent: TradingPlatform.BusinessLayer.Instrument
  name: CreateHistoricalData(HistoryRequestParameters)
  nameWithType: Instrument.CreateHistoricalData(HistoryRequestParameters)
  fullName: TradingPlatform.BusinessLayer.Instrument.CreateHistoricalData(TradingPlatform.BusinessLayer.HistoryRequestParameters)
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Instrument.CreateHistoricalData(TradingPlatform.BusinessLayer.HistoryRequestParameters)
    name: CreateHistoricalData
    nameWithType: Instrument.CreateHistoricalData
    fullName: TradingPlatform.BusinessLayer.Instrument.CreateHistoricalData
  - name: (
    nameWithType: (
    fullName: (
  - uid: TradingPlatform.BusinessLayer.HistoryRequestParameters
    name: HistoryRequestParameters
    nameWithType: HistoryRequestParameters
    fullName: TradingPlatform.BusinessLayer.HistoryRequestParameters
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Instrument.CreateHistoricalData(TradingPlatform.BusinessLayer.HistoryRequestParameters)
    name: CreateHistoricalData
    nameWithType: Instrument.CreateHistoricalData
    fullName: TradingPlatform.BusinessLayer.Instrument.CreateHistoricalData
  - name: (
    nameWithType: (
    fullName: (
  - uid: TradingPlatform.BusinessLayer.HistoryRequestParameters
    name: HistoryRequestParameters
    nameWithType: HistoryRequestParameters
    fullName: TradingPlatform.BusinessLayer.HistoryRequestParameters
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Synthetic.CreateHistoricalData*
  commentId: Overload:TradingPlatform.BusinessLayer.Synthetic.CreateHistoricalData
  name: CreateHistoricalData
  nameWithType: Synthetic.CreateHistoricalData
  fullName: TradingPlatform.BusinessLayer.Synthetic.CreateHistoricalData
- uid: TradingPlatform.BusinessLayer.HistoryRequestParameters
  commentId: T:TradingPlatform.BusinessLayer.HistoryRequestParameters
  parent: TradingPlatform.BusinessLayer
  name: HistoryRequestParameters
  nameWithType: HistoryRequestParameters
  fullName: TradingPlatform.BusinessLayer.HistoryRequestParameters
- uid: TradingPlatform.BusinessLayer.HistoricalData
  commentId: T:TradingPlatform.BusinessLayer.HistoricalData
  parent: TradingPlatform.BusinessLayer
  name: HistoricalData
  nameWithType: HistoricalData
  fullName: TradingPlatform.BusinessLayer.HistoricalData
- uid: TradingPlatform.BusinessLayer.Instrument.AvailableHistoryTypes
  commentId: P:TradingPlatform.BusinessLayer.Instrument.AvailableHistoryTypes
  parent: TradingPlatform.BusinessLayer.Instrument
  name: AvailableHistoryTypes
  nameWithType: Instrument.AvailableHistoryTypes
  fullName: TradingPlatform.BusinessLayer.Instrument.AvailableHistoryTypes
- uid: TradingPlatform.BusinessLayer.Synthetic.AvailableHistoryTypes*
  commentId: Overload:TradingPlatform.BusinessLayer.Synthetic.AvailableHistoryTypes
  name: AvailableHistoryTypes
  nameWithType: Synthetic.AvailableHistoryTypes
  fullName: TradingPlatform.BusinessLayer.Synthetic.AvailableHistoryTypes
- uid: System.Collections.Generic.List{TradingPlatform.BusinessLayer.HistoryType}
  commentId: T:System.Collections.Generic.List{TradingPlatform.BusinessLayer.HistoryType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<HistoryType>
  nameWithType: List<HistoryType>
  fullName: System.Collections.Generic.List<TradingPlatform.BusinessLayer.HistoryType>
  nameWithType.vb: List(Of HistoryType)
  fullName.vb: System.Collections.Generic.List(Of TradingPlatform.BusinessLayer.HistoryType)
  name.vb: List(Of HistoryType)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TradingPlatform.BusinessLayer.HistoryType
    name: HistoryType
    nameWithType: HistoryType
    fullName: TradingPlatform.BusinessLayer.HistoryType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TradingPlatform.BusinessLayer.HistoryType
    name: HistoryType
    nameWithType: HistoryType
    fullName: TradingPlatform.BusinessLayer.HistoryType
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Instrument.GetAlowedOrderTypes(TradingPlatform.BusinessLayer.OrderTypeUsage)
  commentId: M:TradingPlatform.BusinessLayer.Instrument.GetAlowedOrderTypes(TradingPlatform.BusinessLayer.OrderTypeUsage)
  parent: TradingPlatform.BusinessLayer.Instrument
  name: GetAlowedOrderTypes(OrderTypeUsage)
  nameWithType: Instrument.GetAlowedOrderTypes(OrderTypeUsage)
  fullName: TradingPlatform.BusinessLayer.Instrument.GetAlowedOrderTypes(TradingPlatform.BusinessLayer.OrderTypeUsage)
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Instrument.GetAlowedOrderTypes(TradingPlatform.BusinessLayer.OrderTypeUsage)
    name: GetAlowedOrderTypes
    nameWithType: Instrument.GetAlowedOrderTypes
    fullName: TradingPlatform.BusinessLayer.Instrument.GetAlowedOrderTypes
  - name: (
    nameWithType: (
    fullName: (
  - uid: TradingPlatform.BusinessLayer.OrderTypeUsage
    name: OrderTypeUsage
    nameWithType: OrderTypeUsage
    fullName: TradingPlatform.BusinessLayer.OrderTypeUsage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Instrument.GetAlowedOrderTypes(TradingPlatform.BusinessLayer.OrderTypeUsage)
    name: GetAlowedOrderTypes
    nameWithType: Instrument.GetAlowedOrderTypes
    fullName: TradingPlatform.BusinessLayer.Instrument.GetAlowedOrderTypes
  - name: (
    nameWithType: (
    fullName: (
  - uid: TradingPlatform.BusinessLayer.OrderTypeUsage
    name: OrderTypeUsage
    nameWithType: OrderTypeUsage
    fullName: TradingPlatform.BusinessLayer.OrderTypeUsage
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Synthetic.GetAlowedOrderTypes*
  commentId: Overload:TradingPlatform.BusinessLayer.Synthetic.GetAlowedOrderTypes
  name: GetAlowedOrderTypes
  nameWithType: Synthetic.GetAlowedOrderTypes
  fullName: TradingPlatform.BusinessLayer.Synthetic.GetAlowedOrderTypes
- uid: TradingPlatform.BusinessLayer.OrderTypeUsage
  commentId: T:TradingPlatform.BusinessLayer.OrderTypeUsage
  parent: TradingPlatform.BusinessLayer
  name: OrderTypeUsage
  nameWithType: OrderTypeUsage
  fullName: TradingPlatform.BusinessLayer.OrderTypeUsage
- uid: System.Collections.Generic.List{TradingPlatform.BusinessLayer.OrderType}
  commentId: T:System.Collections.Generic.List{TradingPlatform.BusinessLayer.OrderType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<OrderType>
  nameWithType: List<OrderType>
  fullName: System.Collections.Generic.List<TradingPlatform.BusinessLayer.OrderType>
  nameWithType.vb: List(Of OrderType)
  fullName.vb: System.Collections.Generic.List(Of TradingPlatform.BusinessLayer.OrderType)
  name.vb: List(Of OrderType)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TradingPlatform.BusinessLayer.OrderType
    name: OrderType
    nameWithType: OrderType
    fullName: TradingPlatform.BusinessLayer.OrderType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TradingPlatform.BusinessLayer.OrderType
    name: OrderType
    nameWithType: OrderType
    fullName: TradingPlatform.BusinessLayer.OrderType
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Instrument.GetDefaultAccount(TradingPlatform.BusinessLayer.Account)
  commentId: M:TradingPlatform.BusinessLayer.Instrument.GetDefaultAccount(TradingPlatform.BusinessLayer.Account)
  parent: TradingPlatform.BusinessLayer.Instrument
  name: GetDefaultAccount(Account)
  nameWithType: Instrument.GetDefaultAccount(Account)
  fullName: TradingPlatform.BusinessLayer.Instrument.GetDefaultAccount(TradingPlatform.BusinessLayer.Account)
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Instrument.GetDefaultAccount(TradingPlatform.BusinessLayer.Account)
    name: GetDefaultAccount
    nameWithType: Instrument.GetDefaultAccount
    fullName: TradingPlatform.BusinessLayer.Instrument.GetDefaultAccount
  - name: (
    nameWithType: (
    fullName: (
  - uid: TradingPlatform.BusinessLayer.Account
    name: Account
    nameWithType: Account
    fullName: TradingPlatform.BusinessLayer.Account
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Instrument.GetDefaultAccount(TradingPlatform.BusinessLayer.Account)
    name: GetDefaultAccount
    nameWithType: Instrument.GetDefaultAccount
    fullName: TradingPlatform.BusinessLayer.Instrument.GetDefaultAccount
  - name: (
    nameWithType: (
    fullName: (
  - uid: TradingPlatform.BusinessLayer.Account
    name: Account
    nameWithType: Account
    fullName: TradingPlatform.BusinessLayer.Account
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Synthetic.GetDefaultAccount*
  commentId: Overload:TradingPlatform.BusinessLayer.Synthetic.GetDefaultAccount
  name: GetDefaultAccount
  nameWithType: Synthetic.GetDefaultAccount
  fullName: TradingPlatform.BusinessLayer.Synthetic.GetDefaultAccount
- uid: TradingPlatform.BusinessLayer.Account
  commentId: T:TradingPlatform.BusinessLayer.Account
  parent: TradingPlatform.BusinessLayer
  name: Account
  nameWithType: Account
  fullName: TradingPlatform.BusinessLayer.Account
- uid: TradingPlatform.BusinessLayer.Instrument.FormatQuantity(System.Double,System.Boolean,System.Boolean)
  commentId: M:TradingPlatform.BusinessLayer.Instrument.FormatQuantity(System.Double,System.Boolean,System.Boolean)
  parent: TradingPlatform.BusinessLayer.Instrument
  isExternal: true
  name: FormatQuantity(Double, Boolean, Boolean)
  nameWithType: Instrument.FormatQuantity(Double, Boolean, Boolean)
  fullName: TradingPlatform.BusinessLayer.Instrument.FormatQuantity(System.Double, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Instrument.FormatQuantity(System.Double,System.Boolean,System.Boolean)
    name: FormatQuantity
    nameWithType: Instrument.FormatQuantity
    fullName: TradingPlatform.BusinessLayer.Instrument.FormatQuantity
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Instrument.FormatQuantity(System.Double,System.Boolean,System.Boolean)
    name: FormatQuantity
    nameWithType: Instrument.FormatQuantity
    fullName: TradingPlatform.BusinessLayer.Instrument.FormatQuantity
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Synthetic.FormatQuantity*
  commentId: Overload:TradingPlatform.BusinessLayer.Synthetic.FormatQuantity
  name: FormatQuantity
  nameWithType: Synthetic.FormatQuantity
  fullName: TradingPlatform.BusinessLayer.Synthetic.FormatQuantity
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: TradingPlatform.BusinessLayer.Synthetic.Settings*
  commentId: Overload:TradingPlatform.BusinessLayer.Synthetic.Settings
  name: Settings
  nameWithType: Synthetic.Settings
  fullName: TradingPlatform.BusinessLayer.Synthetic.Settings
- uid: TradingPlatform.BusinessLayer.ICustomizable.Settings
  commentId: P:TradingPlatform.BusinessLayer.ICustomizable.Settings
  parent: TradingPlatform.BusinessLayer.ICustomizable
  name: Settings
  nameWithType: ICustomizable.Settings
  fullName: TradingPlatform.BusinessLayer.ICustomizable.Settings
- uid: System.Collections.Generic.IList{TradingPlatform.BusinessLayer.SettingItem}
  commentId: T:System.Collections.Generic.IList{TradingPlatform.BusinessLayer.SettingItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<SettingItem>
  nameWithType: IList<SettingItem>
  fullName: System.Collections.Generic.IList<TradingPlatform.BusinessLayer.SettingItem>
  nameWithType.vb: IList(Of SettingItem)
  fullName.vb: System.Collections.Generic.IList(Of TradingPlatform.BusinessLayer.SettingItem)
  name.vb: IList(Of SettingItem)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TradingPlatform.BusinessLayer.SettingItem
    name: SettingItem
    nameWithType: SettingItem
    fullName: TradingPlatform.BusinessLayer.SettingItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TradingPlatform.BusinessLayer.SettingItem
    name: SettingItem
    nameWithType: SettingItem
    fullName: TradingPlatform.BusinessLayer.SettingItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
