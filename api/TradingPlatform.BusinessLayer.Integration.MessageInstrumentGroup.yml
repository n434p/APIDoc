### YamlMime:ManagedReference
items:
- uid: TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup
  commentId: T:TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup
  id: MessageInstrumentGroup
  parent: TradingPlatform.BusinessLayer.Integration
  children:
  - TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.GroupName
  - TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.Id
  - TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.SortIndex
  - TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.ToString
  - TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.Type
  langs:
  - csharp
  - vb
  name: MessageInstrumentGroup
  nameWithType: MessageInstrumentGroup
  fullName: TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup
  type: Class
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/MessageInstrumentGroup.cs
    id: MessageInstrumentGroup
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/MessageInstrumentGroup.cs
    startLine: 2
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Integration
  syntax:
    content: 'public class MessageInstrumentGroup : Message'
    content.vb: >-
      Public Class MessageInstrumentGroup
          Inherits Message
  inheritance:
  - System.Object
  - TradingPlatform.BusinessLayer.Integration.Message
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.Type
  commentId: P:TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.Type
  id: Type
  parent: TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: MessageInstrumentGroup.Type
  fullName: TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.Type
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/MessageInstrumentGroup.cs
    id: Type
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/MessageInstrumentGroup.cs
    startLine: 4
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Integration
  syntax:
    content: public override MessageType Type { get; }
    parameters: []
    return:
      type: TradingPlatform.BusinessLayer.Integration.MessageType
    content.vb: Public Overrides ReadOnly Property Type As MessageType
  overridden: TradingPlatform.BusinessLayer.Integration.Message.Type
  overload: TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.Type*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.Id
  commentId: P:TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.Id
  id: Id
  parent: TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: MessageInstrumentGroup.Id
  fullName: TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.Id
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/MessageInstrumentGroup.cs
    id: Id
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/MessageInstrumentGroup.cs
    startLine: 6
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Integration
  syntax:
    content: public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Id As String
  overload: TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.GroupName
  commentId: P:TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.GroupName
  id: GroupName
  parent: TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup
  langs:
  - csharp
  - vb
  name: GroupName
  nameWithType: MessageInstrumentGroup.GroupName
  fullName: TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.GroupName
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/MessageInstrumentGroup.cs
    id: GroupName
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/MessageInstrumentGroup.cs
    startLine: 7
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Integration
  syntax:
    content: public string GroupName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property GroupName As String
  overload: TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.GroupName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.SortIndex
  commentId: P:TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.SortIndex
  id: SortIndex
  parent: TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup
  langs:
  - csharp
  - vb
  name: SortIndex
  nameWithType: MessageInstrumentGroup.SortIndex
  fullName: TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.SortIndex
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/MessageInstrumentGroup.cs
    id: SortIndex
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/MessageInstrumentGroup.cs
    startLine: 8
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Integration
  syntax:
    content: public int SortIndex { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property SortIndex As Integer
  overload: TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.SortIndex*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.ToString
  commentId: M:TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.ToString
  id: ToString
  parent: TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: MessageInstrumentGroup.ToString()
  fullName: TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.ToString()
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/MessageInstrumentGroup.cs
    id: ToString
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/Messages/MessageInstrumentGroup.cs
    startLine: 10
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Integration
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: TradingPlatform.BusinessLayer.Integration.Message.ToString
  overload: TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: TradingPlatform.BusinessLayer.Integration
  commentId: N:TradingPlatform.BusinessLayer.Integration
  name: TradingPlatform.BusinessLayer.Integration
  nameWithType: TradingPlatform.BusinessLayer.Integration
  fullName: TradingPlatform.BusinessLayer.Integration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TradingPlatform.BusinessLayer.Integration.Message
  commentId: T:TradingPlatform.BusinessLayer.Integration.Message
  parent: TradingPlatform.BusinessLayer.Integration
  name: Message
  nameWithType: Message
  fullName: TradingPlatform.BusinessLayer.Integration.Message
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TradingPlatform.BusinessLayer.Integration.Message.Type
  commentId: P:TradingPlatform.BusinessLayer.Integration.Message.Type
  parent: TradingPlatform.BusinessLayer.Integration.Message
  name: Type
  nameWithType: Message.Type
  fullName: TradingPlatform.BusinessLayer.Integration.Message.Type
- uid: TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.Type*
  commentId: Overload:TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.Type
  name: Type
  nameWithType: MessageInstrumentGroup.Type
  fullName: TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.Type
- uid: TradingPlatform.BusinessLayer.Integration.MessageType
  commentId: T:TradingPlatform.BusinessLayer.Integration.MessageType
  parent: TradingPlatform.BusinessLayer.Integration
  name: MessageType
  nameWithType: MessageType
  fullName: TradingPlatform.BusinessLayer.Integration.MessageType
- uid: TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.Id*
  commentId: Overload:TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.Id
  name: Id
  nameWithType: MessageInstrumentGroup.Id
  fullName: TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.GroupName*
  commentId: Overload:TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.GroupName
  name: GroupName
  nameWithType: MessageInstrumentGroup.GroupName
  fullName: TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.GroupName
- uid: TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.SortIndex*
  commentId: Overload:TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.SortIndex
  name: SortIndex
  nameWithType: MessageInstrumentGroup.SortIndex
  fullName: TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.SortIndex
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TradingPlatform.BusinessLayer.Integration.Message.ToString
  commentId: M:TradingPlatform.BusinessLayer.Integration.Message.ToString
  parent: TradingPlatform.BusinessLayer.Integration.Message
  name: ToString()
  nameWithType: Message.ToString()
  fullName: TradingPlatform.BusinessLayer.Integration.Message.ToString()
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Integration.Message.ToString
    name: ToString
    nameWithType: Message.ToString
    fullName: TradingPlatform.BusinessLayer.Integration.Message.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Integration.Message.ToString
    name: ToString
    nameWithType: Message.ToString
    fullName: TradingPlatform.BusinessLayer.Integration.Message.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.ToString*
  commentId: Overload:TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.ToString
  name: ToString
  nameWithType: MessageInstrumentGroup.ToString
  fullName: TradingPlatform.BusinessLayer.Integration.MessageInstrumentGroup.ToString
