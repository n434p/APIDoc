### YamlMime:ManagedReference
items:
- uid: TradingPlatform.BusinessLayer.Integration.HistoryMetadata
  commentId: T:TradingPlatform.BusinessLayer.Integration.HistoryMetadata
  id: HistoryMetadata
  parent: TradingPlatform.BusinessLayer.Integration
  children:
  - TradingPlatform.BusinessLayer.Integration.HistoryMetadata.AllowedHistoryTypes
  - TradingPlatform.BusinessLayer.Integration.HistoryMetadata.AllowedPeriods
  langs:
  - csharp
  - vb
  name: HistoryMetadata
  nameWithType: HistoryMetadata
  fullName: TradingPlatform.BusinessLayer.Integration.HistoryMetadata
  type: Class
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/HistoryMetadata.cs
    id: HistoryMetadata
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/HistoryMetadata.cs
    startLine: 11
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Integration
  summary: "\nMediates a history meta data with available data types and intervals on vendor side\n"
  example: []
  syntax:
    content: >-
      [DataContract]

      public class HistoryMetadata
    content.vb: >-
      <DataContract>

      Public Class HistoryMetadata
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TradingPlatform.BusinessLayer.Integration.HistoryMetadata.AllowedHistoryTypes
  commentId: F:TradingPlatform.BusinessLayer.Integration.HistoryMetadata.AllowedHistoryTypes
  id: AllowedHistoryTypes
  parent: TradingPlatform.BusinessLayer.Integration.HistoryMetadata
  langs:
  - csharp
  - vb
  name: AllowedHistoryTypes
  nameWithType: HistoryMetadata.AllowedHistoryTypes
  fullName: TradingPlatform.BusinessLayer.Integration.HistoryMetadata.AllowedHistoryTypes
  type: Field
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/HistoryMetadata.cs
    id: AllowedHistoryTypes
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/HistoryMetadata.cs
    startLine: 18
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Integration
  summary: "\nHistory data types\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "AllowedHistoryTypes")]

      public HistoryType[] AllowedHistoryTypes
    return:
      type: TradingPlatform.BusinessLayer.HistoryType[]
    content.vb: >-
      <DataMember(Name:="AllowedHistoryTypes")>

      Public AllowedHistoryTypes As HistoryType()
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: AllowedHistoryTypes
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.Integration.HistoryMetadata.AllowedPeriods
  commentId: F:TradingPlatform.BusinessLayer.Integration.HistoryMetadata.AllowedPeriods
  id: AllowedPeriods
  parent: TradingPlatform.BusinessLayer.Integration.HistoryMetadata
  langs:
  - csharp
  - vb
  name: AllowedPeriods
  nameWithType: HistoryMetadata.AllowedPeriods
  fullName: TradingPlatform.BusinessLayer.Integration.HistoryMetadata.AllowedPeriods
  type: Field
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/HistoryMetadata.cs
    id: AllowedPeriods
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/HistoryMetadata.cs
    startLine: 23
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Integration
  summary: "\nHistory intervals\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "AllowedPeriods")]

      public Period[] AllowedPeriods
    return:
      type: TradingPlatform.BusinessLayer.Period[]
    content.vb: >-
      <DataMember(Name:="AllowedPeriods")>

      Public AllowedPeriods As Period()
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: AllowedPeriods
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TradingPlatform.BusinessLayer.Integration
  commentId: N:TradingPlatform.BusinessLayer.Integration
  name: TradingPlatform.BusinessLayer.Integration
  nameWithType: TradingPlatform.BusinessLayer.Integration
  fullName: TradingPlatform.BusinessLayer.Integration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TradingPlatform.BusinessLayer.HistoryType[]
  isExternal: true
  name: HistoryType[]
  nameWithType: HistoryType[]
  fullName: TradingPlatform.BusinessLayer.HistoryType[]
  nameWithType.vb: HistoryType()
  fullName.vb: TradingPlatform.BusinessLayer.HistoryType()
  name.vb: HistoryType()
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.HistoryType
    name: HistoryType
    nameWithType: HistoryType
    fullName: TradingPlatform.BusinessLayer.HistoryType
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.HistoryType
    name: HistoryType
    nameWithType: HistoryType
    fullName: TradingPlatform.BusinessLayer.HistoryType
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TradingPlatform.BusinessLayer.Period[]
  isExternal: true
  name: Period[]
  nameWithType: Period[]
  fullName: TradingPlatform.BusinessLayer.Period[]
  nameWithType.vb: Period()
  fullName.vb: TradingPlatform.BusinessLayer.Period()
  name.vb: Period()
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Period
    name: Period
    nameWithType: Period
    fullName: TradingPlatform.BusinessLayer.Period
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Period
    name: Period
    nameWithType: Period
    fullName: TradingPlatform.BusinessLayer.Period
  - name: ()
    nameWithType: ()
    fullName: ()
