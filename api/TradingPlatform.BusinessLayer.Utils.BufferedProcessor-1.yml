### YamlMime:ManagedReference
items:
- uid: TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1
  commentId: T:TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1
  id: BufferedProcessor`1
  parent: TradingPlatform.BusinessLayer.Utils
  children:
  - TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.#ctor
  - TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.Clear
  - TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.ExceptionOccurred
  - TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.Process(`0)
  - TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.ProcessTreadsCount
  - TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.Push(`0)
  - TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.QueueCount
  - TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.Start
  - TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.Stop
  langs:
  - csharp
  - vb
  name: BufferedProcessor<T>
  nameWithType: BufferedProcessor<T>
  fullName: TradingPlatform.BusinessLayer.Utils.BufferedProcessor<T>
  type: Class
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/BufferedProcessor.cs
    id: BufferedProcessor
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/BufferedProcessor.cs
    startLine: 10
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Utils
  syntax:
    content: public abstract class BufferedProcessor<T>
    typeParameters:
    - id: T
    content.vb: Public MustInherit Class BufferedProcessor(Of T)
  inheritance:
  - System.Object
  derivedClasses:
  - TradingPlatform.BusinessLayer.Utils.ActionBufferedProcessor
  - TradingPlatform.BusinessLayer.Utils.BufferedProcessorWithSubscribers`2
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: BufferedProcessor(Of T)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: TradingPlatform.BusinessLayer.Utils.BufferedProcessor(Of T)
  name.vb: BufferedProcessor(Of T)
- uid: TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.ExceptionOccurred
  commentId: E:TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.ExceptionOccurred
  id: ExceptionOccurred
  parent: TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1
  langs:
  - csharp
  - vb
  name: ExceptionOccurred
  nameWithType: BufferedProcessor<T>.ExceptionOccurred
  fullName: TradingPlatform.BusinessLayer.Utils.BufferedProcessor<T>.ExceptionOccurred
  type: Event
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/BufferedProcessor.cs
    id: ExceptionOccurred
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/BufferedProcessor.cs
    startLine: 18
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Utils
  syntax:
    content: public event Action<Exception> ExceptionOccurred
    return:
      type: System.Action{System.Exception}
    content.vb: Public Event ExceptionOccurred As Action(Of Exception)
  nameWithType.vb: BufferedProcessor(Of T).ExceptionOccurred
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TradingPlatform.BusinessLayer.Utils.BufferedProcessor(Of T).ExceptionOccurred
- uid: TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.QueueCount
  commentId: P:TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.QueueCount
  id: QueueCount
  parent: TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1
  langs:
  - csharp
  - vb
  name: QueueCount
  nameWithType: BufferedProcessor<T>.QueueCount
  fullName: TradingPlatform.BusinessLayer.Utils.BufferedProcessor<T>.QueueCount
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/BufferedProcessor.cs
    id: QueueCount
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/BufferedProcessor.cs
    startLine: 20
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Utils
  syntax:
    content: protected int QueueCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Protected ReadOnly Property QueueCount As Integer
  overload: TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.QueueCount*
  nameWithType.vb: BufferedProcessor(Of T).QueueCount
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: TradingPlatform.BusinessLayer.Utils.BufferedProcessor(Of T).QueueCount
- uid: TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.ProcessTreadsCount
  commentId: F:TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.ProcessTreadsCount
  id: ProcessTreadsCount
  parent: TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1
  langs:
  - csharp
  - vb
  name: ProcessTreadsCount
  nameWithType: BufferedProcessor<T>.ProcessTreadsCount
  fullName: TradingPlatform.BusinessLayer.Utils.BufferedProcessor<T>.ProcessTreadsCount
  type: Field
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/BufferedProcessor.cs
    id: ProcessTreadsCount
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/BufferedProcessor.cs
    startLine: 22
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Utils
  syntax:
    content: protected int ProcessTreadsCount
    return:
      type: System.Int32
    content.vb: Protected ProcessTreadsCount As Integer
  nameWithType.vb: BufferedProcessor(Of T).ProcessTreadsCount
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: TradingPlatform.BusinessLayer.Utils.BufferedProcessor(Of T).ProcessTreadsCount
- uid: TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.#ctor
  commentId: M:TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.#ctor
  id: '#ctor'
  parent: TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1
  langs:
  - csharp
  - vb
  name: BufferedProcessor()
  nameWithType: BufferedProcessor<T>.BufferedProcessor()
  fullName: TradingPlatform.BusinessLayer.Utils.BufferedProcessor<T>.BufferedProcessor()
  type: Constructor
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/BufferedProcessor.cs
    id: .ctor
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/BufferedProcessor.cs
    startLine: 28
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Utils
  syntax:
    content: public BufferedProcessor()
    content.vb: Public Sub New
  overload: TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.#ctor*
  nameWithType.vb: BufferedProcessor(Of T).BufferedProcessor()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TradingPlatform.BusinessLayer.Utils.BufferedProcessor(Of T).BufferedProcessor()
- uid: TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.Start
  commentId: M:TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.Start
  id: Start
  parent: TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: BufferedProcessor<T>.Start()
  fullName: TradingPlatform.BusinessLayer.Utils.BufferedProcessor<T>.Start()
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/BufferedProcessor.cs
    id: Start
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/BufferedProcessor.cs
    startLine: 37
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Utils
  syntax:
    content: public void Start()
    content.vb: Public Sub Start
  overload: TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.Start*
  nameWithType.vb: BufferedProcessor(Of T).Start()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TradingPlatform.BusinessLayer.Utils.BufferedProcessor(Of T).Start()
- uid: TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.Stop
  commentId: M:TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.Stop
  id: Stop
  parent: TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1
  langs:
  - csharp
  - vb
  name: Stop()
  nameWithType: BufferedProcessor<T>.Stop()
  fullName: TradingPlatform.BusinessLayer.Utils.BufferedProcessor<T>.Stop()
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/BufferedProcessor.cs
    id: Stop
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/BufferedProcessor.cs
    startLine: 50
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Utils
  syntax:
    content: public void Stop()
    content.vb: Public Sub Stop
  overload: TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.Stop*
  nameWithType.vb: BufferedProcessor(Of T).Stop()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TradingPlatform.BusinessLayer.Utils.BufferedProcessor(Of T).Stop()
- uid: TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.Push(`0)
  commentId: M:TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.Push(`0)
  id: Push(`0)
  parent: TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1
  langs:
  - csharp
  - vb
  name: Push(T)
  nameWithType: BufferedProcessor<T>.Push(T)
  fullName: TradingPlatform.BusinessLayer.Utils.BufferedProcessor<T>.Push(T)
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/BufferedProcessor.cs
    id: Push
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/BufferedProcessor.cs
    startLine: 64
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Utils
  syntax:
    content: public virtual void Push(T subject)
    parameters:
    - id: subject
      type: '{T}'
    content.vb: Public Overridable Sub Push(subject As T)
  overload: TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.Push*
  nameWithType.vb: BufferedProcessor(Of T).Push(T)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: TradingPlatform.BusinessLayer.Utils.BufferedProcessor(Of T).Push(T)
- uid: TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.Process(`0)
  commentId: M:TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.Process(`0)
  id: Process(`0)
  parent: TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1
  langs:
  - csharp
  - vb
  name: Process(T)
  nameWithType: BufferedProcessor<T>.Process(T)
  fullName: TradingPlatform.BusinessLayer.Utils.BufferedProcessor<T>.Process(T)
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/BufferedProcessor.cs
    id: Process
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/BufferedProcessor.cs
    startLine: 179
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Utils
  syntax:
    content: >-
      [Obfuscation(Exclude = false)]

      protected abstract void Process(T subject)
    parameters:
    - id: subject
      type: '{T}'
    content.vb: >-
      <Obfuscation(Exclude:=False)>

      Protected MustOverride Sub Process(subject As T)
  overload: TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.Process*
  attributes:
  - type: System.Reflection.ObfuscationAttribute
    ctor: System.Reflection.ObfuscationAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Exclude
      type: System.Boolean
      value: false
  nameWithType.vb: BufferedProcessor(Of T).Process(T)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: TradingPlatform.BusinessLayer.Utils.BufferedProcessor(Of T).Process(T)
- uid: TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.Clear
  commentId: M:TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.Clear
  id: Clear
  parent: TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: BufferedProcessor<T>.Clear()
  fullName: TradingPlatform.BusinessLayer.Utils.BufferedProcessor<T>.Clear()
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Utils/BufferedProcessor.cs
    id: Clear
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Utils/BufferedProcessor.cs
    startLine: 182
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Utils
  syntax:
    content: protected virtual void Clear()
    content.vb: Protected Overridable Sub Clear
  overload: TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.Clear*
  nameWithType.vb: BufferedProcessor(Of T).Clear()
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: TradingPlatform.BusinessLayer.Utils.BufferedProcessor(Of T).Clear()
references:
- uid: TradingPlatform.BusinessLayer.Utils
  commentId: N:TradingPlatform.BusinessLayer.Utils
  name: TradingPlatform.BusinessLayer.Utils
  nameWithType: TradingPlatform.BusinessLayer.Utils
  fullName: TradingPlatform.BusinessLayer.Utils
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Action{System.Exception}
  commentId: T:System.Action{System.Exception}
  parent: System
  definition: System.Action`1
  name: Action<Exception>
  nameWithType: Action<Exception>
  fullName: System.Action<System.Exception>
  nameWithType.vb: Action(Of Exception)
  fullName.vb: System.Action(Of System.Exception)
  name.vb: Action(Of Exception)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.QueueCount*
  commentId: Overload:TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.QueueCount
  name: QueueCount
  nameWithType: BufferedProcessor<T>.QueueCount
  fullName: TradingPlatform.BusinessLayer.Utils.BufferedProcessor<T>.QueueCount
  nameWithType.vb: BufferedProcessor(Of T).QueueCount
  fullName.vb: TradingPlatform.BusinessLayer.Utils.BufferedProcessor(Of T).QueueCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.#ctor*
  commentId: Overload:TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.#ctor
  name: BufferedProcessor
  nameWithType: BufferedProcessor<T>.BufferedProcessor
  fullName: TradingPlatform.BusinessLayer.Utils.BufferedProcessor<T>.BufferedProcessor
  nameWithType.vb: BufferedProcessor(Of T).BufferedProcessor
  fullName.vb: TradingPlatform.BusinessLayer.Utils.BufferedProcessor(Of T).BufferedProcessor
- uid: TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.Start*
  commentId: Overload:TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.Start
  name: Start
  nameWithType: BufferedProcessor<T>.Start
  fullName: TradingPlatform.BusinessLayer.Utils.BufferedProcessor<T>.Start
  nameWithType.vb: BufferedProcessor(Of T).Start
  fullName.vb: TradingPlatform.BusinessLayer.Utils.BufferedProcessor(Of T).Start
- uid: TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.Stop*
  commentId: Overload:TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.Stop
  name: Stop
  nameWithType: BufferedProcessor<T>.Stop
  fullName: TradingPlatform.BusinessLayer.Utils.BufferedProcessor<T>.Stop
  nameWithType.vb: BufferedProcessor(Of T).Stop
  fullName.vb: TradingPlatform.BusinessLayer.Utils.BufferedProcessor(Of T).Stop
- uid: TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.Push*
  commentId: Overload:TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.Push
  name: Push
  nameWithType: BufferedProcessor<T>.Push
  fullName: TradingPlatform.BusinessLayer.Utils.BufferedProcessor<T>.Push
  nameWithType.vb: BufferedProcessor(Of T).Push
  fullName.vb: TradingPlatform.BusinessLayer.Utils.BufferedProcessor(Of T).Push
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.Process*
  commentId: Overload:TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.Process
  name: Process
  nameWithType: BufferedProcessor<T>.Process
  fullName: TradingPlatform.BusinessLayer.Utils.BufferedProcessor<T>.Process
  nameWithType.vb: BufferedProcessor(Of T).Process
  fullName.vb: TradingPlatform.BusinessLayer.Utils.BufferedProcessor(Of T).Process
- uid: TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.Clear*
  commentId: Overload:TradingPlatform.BusinessLayer.Utils.BufferedProcessor`1.Clear
  name: Clear
  nameWithType: BufferedProcessor<T>.Clear
  fullName: TradingPlatform.BusinessLayer.Utils.BufferedProcessor<T>.Clear
  nameWithType.vb: BufferedProcessor(Of T).Clear
  fullName.vb: TradingPlatform.BusinessLayer.Utils.BufferedProcessor(Of T).Clear
