### YamlMime:ManagedReference
items:
- uid: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper
  commentId: T:TradingPlatform.BusinessLayer.Integration.TimeRangeStepper
  id: TimeRangeStepper
  parent: TradingPlatform.BusinessLayer.Integration
  children:
  - TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.#ctor(System.DateTime,System.DateTime,System.TimeSpan)
  - TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.currentFrom
  - TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.currentTo
  - TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.From
  - TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.Increment
  - TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.MoveNext
  - TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.ProgressPercent
  - TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.Reset
  - TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.To
  langs:
  - csharp
  - vb
  name: TimeRangeStepper
  nameWithType: TimeRangeStepper
  fullName: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper
  type: Class
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/CustomMessages.cs
    id: TimeRangeStepper
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/CustomMessages.cs
    startLine: 46
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Integration
  summary: "\nПроход по диапазону дат с заданным шагом\n"
  example: []
  syntax:
    content: public class TimeRangeStepper
    content.vb: Public Class TimeRangeStepper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.From
  commentId: F:TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.From
  id: From
  parent: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper
  langs:
  - csharp
  - vb
  name: From
  nameWithType: TimeRangeStepper.From
  fullName: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.From
  type: Field
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/CustomMessages.cs
    id: From
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/CustomMessages.cs
    startLine: 51
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Integration
  summary: "\n\n"
  example: []
  syntax:
    content: public readonly DateTime From
    return:
      type: System.DateTime
    content.vb: Public ReadOnly From As Date
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.To
  commentId: F:TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.To
  id: To
  parent: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper
  langs:
  - csharp
  - vb
  name: To
  nameWithType: TimeRangeStepper.To
  fullName: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.To
  type: Field
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/CustomMessages.cs
    id: To
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/CustomMessages.cs
    startLine: 52
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Integration
  syntax:
    content: public readonly DateTime To
    return:
      type: System.DateTime
    content.vb: Public ReadOnly To As Date
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.Increment
  commentId: F:TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.Increment
  id: Increment
  parent: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper
  langs:
  - csharp
  - vb
  name: Increment
  nameWithType: TimeRangeStepper.Increment
  fullName: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.Increment
  type: Field
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/CustomMessages.cs
    id: Increment
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/CustomMessages.cs
    startLine: 53
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Integration
  syntax:
    content: public readonly TimeSpan Increment
    return:
      type: System.TimeSpan
    content.vb: Public ReadOnly Increment As TimeSpan
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.ProgressPercent
  commentId: P:TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.ProgressPercent
  id: ProgressPercent
  parent: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper
  langs:
  - csharp
  - vb
  name: ProgressPercent
  nameWithType: TimeRangeStepper.ProgressPercent
  fullName: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.ProgressPercent
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/CustomMessages.cs
    id: ProgressPercent
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/CustomMessages.cs
    startLine: 55
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Integration
  syntax:
    content: public int ProgressPercent { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ProgressPercent As Integer
  overload: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.ProgressPercent*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.currentFrom
  commentId: P:TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.currentFrom
  id: currentFrom
  parent: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper
  langs:
  - csharp
  - vb
  name: currentFrom
  nameWithType: TimeRangeStepper.currentFrom
  fullName: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.currentFrom
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/CustomMessages.cs
    id: currentFrom
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/CustomMessages.cs
    startLine: 67
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Integration
  summary: "\n\n"
  example: []
  syntax:
    content: public DateTime currentFrom { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public ReadOnly Property currentFrom As Date
  overload: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.currentFrom*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.currentTo
  commentId: P:TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.currentTo
  id: currentTo
  parent: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper
  langs:
  - csharp
  - vb
  name: currentTo
  nameWithType: TimeRangeStepper.currentTo
  fullName: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.currentTo
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/CustomMessages.cs
    id: currentTo
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/CustomMessages.cs
    startLine: 68
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Integration
  syntax:
    content: public DateTime currentTo { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public ReadOnly Property currentTo As Date
  overload: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.currentTo*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.#ctor(System.DateTime,System.DateTime,System.TimeSpan)
  commentId: M:TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.#ctor(System.DateTime,System.DateTime,System.TimeSpan)
  id: '#ctor(System.DateTime,System.DateTime,System.TimeSpan)'
  parent: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper
  langs:
  - csharp
  - vb
  name: TimeRangeStepper(DateTime, DateTime, TimeSpan)
  nameWithType: TimeRangeStepper.TimeRangeStepper(DateTime, DateTime, TimeSpan)
  fullName: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.TimeRangeStepper(System.DateTime, System.DateTime, System.TimeSpan)
  type: Constructor
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/CustomMessages.cs
    id: .ctor
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/CustomMessages.cs
    startLine: 70
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Integration
  syntax:
    content: public TimeRangeStepper(DateTime from, DateTime to, TimeSpan increment)
    parameters:
    - id: from
      type: System.DateTime
    - id: to
      type: System.DateTime
    - id: increment
      type: System.TimeSpan
    content.vb: Public Sub New(from As Date, to As Date, increment As TimeSpan)
  overload: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.MoveNext
  commentId: M:TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.MoveNext
  id: MoveNext
  parent: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper
  langs:
  - csharp
  - vb
  name: MoveNext()
  nameWithType: TimeRangeStepper.MoveNext()
  fullName: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.MoveNext()
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/CustomMessages.cs
    id: MoveNext
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/CustomMessages.cs
    startLine: 83
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Integration
  syntax:
    content: public bool MoveNext()
    return:
      type: System.Boolean
    content.vb: Public Function MoveNext As Boolean
  overload: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.MoveNext*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.Reset
  commentId: M:TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.Reset
  id: Reset
  parent: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: TimeRangeStepper.Reset()
  fullName: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.Reset()
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Integration/CustomMessages.cs
    id: Reset
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Integration/CustomMessages.cs
    startLine: 110
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer.Integration
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
  overload: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.Reset*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TradingPlatform.BusinessLayer.Integration
  commentId: N:TradingPlatform.BusinessLayer.Integration
  name: TradingPlatform.BusinessLayer.Integration
  nameWithType: TradingPlatform.BusinessLayer.Integration
  fullName: TradingPlatform.BusinessLayer.Integration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.ProgressPercent*
  commentId: Overload:TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.ProgressPercent
  name: ProgressPercent
  nameWithType: TimeRangeStepper.ProgressPercent
  fullName: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.ProgressPercent
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.currentFrom*
  commentId: Overload:TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.currentFrom
  name: currentFrom
  nameWithType: TimeRangeStepper.currentFrom
  fullName: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.currentFrom
- uid: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.currentTo*
  commentId: Overload:TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.currentTo
  name: currentTo
  nameWithType: TimeRangeStepper.currentTo
  fullName: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.currentTo
- uid: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.#ctor*
  commentId: Overload:TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.#ctor
  name: TimeRangeStepper
  nameWithType: TimeRangeStepper.TimeRangeStepper
  fullName: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.TimeRangeStepper
- uid: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.MoveNext*
  commentId: Overload:TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.MoveNext
  name: MoveNext
  nameWithType: TimeRangeStepper.MoveNext
  fullName: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.MoveNext
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.Reset*
  commentId: Overload:TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.Reset
  name: Reset
  nameWithType: TimeRangeStepper.Reset
  fullName: TradingPlatform.BusinessLayer.Integration.TimeRangeStepper.Reset
