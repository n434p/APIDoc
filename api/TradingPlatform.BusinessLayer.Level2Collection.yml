### YamlMime:ManagedReference
items:
- uid: TradingPlatform.BusinessLayer.Level2Collection
  commentId: T:TradingPlatform.BusinessLayer.Level2Collection
  id: Level2Collection
  parent: TradingPlatform.BusinessLayer
  children:
  - TradingPlatform.BusinessLayer.Level2Collection.#ctor(TradingPlatform.BusinessLayer.Level2Type,System.Boolean)
  - TradingPlatform.BusinessLayer.Level2Collection.Count
  - TradingPlatform.BusinessLayer.Level2Collection.GetSortedList(TradingPlatform.BusinessLayer.GetSortedListParameters)
  - TradingPlatform.BusinessLayer.Level2Collection.Item(System.Int32)
  - TradingPlatform.BusinessLayer.Level2Collection.Items
  - TradingPlatform.BusinessLayer.Level2Collection.LastSortingParametres
  - TradingPlatform.BusinessLayer.Level2Collection.Level2Type
  langs:
  - csharp
  - vb
  name: Level2Collection
  nameWithType: Level2Collection
  fullName: TradingPlatform.BusinessLayer.Level2Collection
  type: Class
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/Level2Collection.cs
    id: Level2Collection
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/Level2Collection.cs
    startLine: 8
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public class Level2Collection
    content.vb: Public Class Level2Collection
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TradingPlatform.BusinessLayer.Level2Collection.Level2Type
  commentId: P:TradingPlatform.BusinessLayer.Level2Collection.Level2Type
  id: Level2Type
  parent: TradingPlatform.BusinessLayer.Level2Collection
  langs:
  - csharp
  - vb
  name: Level2Type
  nameWithType: Level2Collection.Level2Type
  fullName: TradingPlatform.BusinessLayer.Level2Collection.Level2Type
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/Level2Collection.cs
    id: Level2Type
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/Level2Collection.cs
    startLine: 14
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public Level2Type Level2Type { get; }
    parameters: []
    return:
      type: TradingPlatform.BusinessLayer.Level2Type
    content.vb: Public ReadOnly Property Level2Type As Level2Type
  overload: TradingPlatform.BusinessLayer.Level2Collection.Level2Type*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.Level2Collection.Count
  commentId: P:TradingPlatform.BusinessLayer.Level2Collection.Count
  id: Count
  parent: TradingPlatform.BusinessLayer.Level2Collection
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: Level2Collection.Count
  fullName: TradingPlatform.BusinessLayer.Level2Collection.Count
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/Level2Collection.cs
    id: Count
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/Level2Collection.cs
    startLine: 16
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: TradingPlatform.BusinessLayer.Level2Collection.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.Level2Collection.Items
  commentId: P:TradingPlatform.BusinessLayer.Level2Collection.Items
  id: Items
  parent: TradingPlatform.BusinessLayer.Level2Collection
  langs:
  - csharp
  - vb
  name: Items
  nameWithType: Level2Collection.Items
  fullName: TradingPlatform.BusinessLayer.Level2Collection.Items
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/Level2Collection.cs
    id: Items
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/Level2Collection.cs
    startLine: 24
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public Dictionary<string, Level2Item> Items { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,TradingPlatform.BusinessLayer.Level2Item}
    content.vb: Public ReadOnly Property Items As Dictionary(Of String, Level2Item)
  overload: TradingPlatform.BusinessLayer.Level2Collection.Items*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.Level2Collection.Item(System.Int32)
  commentId: P:TradingPlatform.BusinessLayer.Level2Collection.Item(System.Int32)
  id: Item(System.Int32)
  parent: TradingPlatform.BusinessLayer.Level2Collection
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: Level2Collection.Item[Int32]
  fullName: TradingPlatform.BusinessLayer.Level2Collection.Item[System.Int32]
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/Level2Collection.cs
    id: this[]
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/Level2Collection.cs
    startLine: 29
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  summary: "\nAccess by index\n"
  example: []
  syntax:
    content: public Level2Item this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
    return:
      type: TradingPlatform.BusinessLayer.Level2Item
    content.vb: Public ReadOnly Property Item(index As Integer) As Level2Item
  overload: TradingPlatform.BusinessLayer.Level2Collection.Item*
  nameWithType.vb: Level2Collection.Item(Int32)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TradingPlatform.BusinessLayer.Level2Collection.Item(System.Int32)
  name.vb: Item(Int32)
- uid: TradingPlatform.BusinessLayer.Level2Collection.LastSortingParametres
  commentId: P:TradingPlatform.BusinessLayer.Level2Collection.LastSortingParametres
  id: LastSortingParametres
  parent: TradingPlatform.BusinessLayer.Level2Collection
  langs:
  - csharp
  - vb
  name: LastSortingParametres
  nameWithType: Level2Collection.LastSortingParametres
  fullName: TradingPlatform.BusinessLayer.Level2Collection.LastSortingParametres
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/Level2Collection.cs
    id: LastSortingParametres
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/Level2Collection.cs
    startLine: 52
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public GetSortedListParameters LastSortingParametres { get; set; }
    parameters: []
    return:
      type: TradingPlatform.BusinessLayer.GetSortedListParameters
    content.vb: Public Property LastSortingParametres As GetSortedListParameters
  overload: TradingPlatform.BusinessLayer.Level2Collection.LastSortingParametres*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.Level2Collection.#ctor(TradingPlatform.BusinessLayer.Level2Type,System.Boolean)
  commentId: M:TradingPlatform.BusinessLayer.Level2Collection.#ctor(TradingPlatform.BusinessLayer.Level2Type,System.Boolean)
  id: '#ctor(TradingPlatform.BusinessLayer.Level2Type,System.Boolean)'
  parent: TradingPlatform.BusinessLayer.Level2Collection
  langs:
  - csharp
  - vb
  name: Level2Collection(Level2Type, Boolean)
  nameWithType: Level2Collection.Level2Collection(Level2Type, Boolean)
  fullName: TradingPlatform.BusinessLayer.Level2Collection.Level2Collection(TradingPlatform.BusinessLayer.Level2Type, System.Boolean)
  type: Constructor
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/Level2Collection.cs
    id: .ctor
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/Level2Collection.cs
    startLine: 60
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public Level2Collection(Level2Type l2Type, bool sync)
    parameters:
    - id: l2Type
      type: TradingPlatform.BusinessLayer.Level2Type
    - id: sync
      type: System.Boolean
    content.vb: Public Sub New(l2Type As Level2Type, sync As Boolean)
  overload: TradingPlatform.BusinessLayer.Level2Collection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.Level2Collection.GetSortedList(TradingPlatform.BusinessLayer.GetSortedListParameters)
  commentId: M:TradingPlatform.BusinessLayer.Level2Collection.GetSortedList(TradingPlatform.BusinessLayer.GetSortedListParameters)
  id: GetSortedList(TradingPlatform.BusinessLayer.GetSortedListParameters)
  parent: TradingPlatform.BusinessLayer.Level2Collection
  langs:
  - csharp
  - vb
  name: GetSortedList(GetSortedListParameters)
  nameWithType: Level2Collection.GetSortedList(GetSortedListParameters)
  fullName: TradingPlatform.BusinessLayer.Level2Collection.GetSortedList(TradingPlatform.BusinessLayer.GetSortedListParameters)
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/Level2Collection.cs
    id: GetSortedList
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/Level2Collection.cs
    startLine: 90
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public List<Level2Item> GetSortedList(GetSortedListParameters parametrs = null)
    parameters:
    - id: parametrs
      type: TradingPlatform.BusinessLayer.GetSortedListParameters
    return:
      type: System.Collections.Generic.List{TradingPlatform.BusinessLayer.Level2Item}
    content.vb: Public Function GetSortedList(parametrs As GetSortedListParameters = Nothing) As List(Of Level2Item)
  overload: TradingPlatform.BusinessLayer.Level2Collection.GetSortedList*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TradingPlatform.BusinessLayer
  commentId: N:TradingPlatform.BusinessLayer
  name: TradingPlatform.BusinessLayer
  nameWithType: TradingPlatform.BusinessLayer
  fullName: TradingPlatform.BusinessLayer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TradingPlatform.BusinessLayer.Level2Collection.Level2Type*
  commentId: Overload:TradingPlatform.BusinessLayer.Level2Collection.Level2Type
  name: Level2Type
  nameWithType: Level2Collection.Level2Type
  fullName: TradingPlatform.BusinessLayer.Level2Collection.Level2Type
- uid: TradingPlatform.BusinessLayer.Level2Type
  commentId: T:TradingPlatform.BusinessLayer.Level2Type
  parent: TradingPlatform.BusinessLayer
  name: Level2Type
  nameWithType: Level2Type
  fullName: TradingPlatform.BusinessLayer.Level2Type
- uid: TradingPlatform.BusinessLayer.Level2Collection.Count*
  commentId: Overload:TradingPlatform.BusinessLayer.Level2Collection.Count
  name: Count
  nameWithType: Level2Collection.Count
  fullName: TradingPlatform.BusinessLayer.Level2Collection.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TradingPlatform.BusinessLayer.Level2Collection.Items*
  commentId: Overload:TradingPlatform.BusinessLayer.Level2Collection.Items
  name: Items
  nameWithType: Level2Collection.Items
  fullName: TradingPlatform.BusinessLayer.Level2Collection.Items
- uid: System.Collections.Generic.Dictionary{System.String,TradingPlatform.BusinessLayer.Level2Item}
  commentId: T:System.Collections.Generic.Dictionary{System.String,TradingPlatform.BusinessLayer.Level2Item}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Level2Item>
  nameWithType: Dictionary<String, Level2Item>
  fullName: System.Collections.Generic.Dictionary<System.String, TradingPlatform.BusinessLayer.Level2Item>
  nameWithType.vb: Dictionary(Of String, Level2Item)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, TradingPlatform.BusinessLayer.Level2Item)
  name.vb: Dictionary(Of String, Level2Item)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TradingPlatform.BusinessLayer.Level2Item
    name: Level2Item
    nameWithType: Level2Item
    fullName: TradingPlatform.BusinessLayer.Level2Item
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TradingPlatform.BusinessLayer.Level2Item
    name: Level2Item
    nameWithType: Level2Item
    fullName: TradingPlatform.BusinessLayer.Level2Item
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TradingPlatform.BusinessLayer.Level2Collection.Item*
  commentId: Overload:TradingPlatform.BusinessLayer.Level2Collection.Item
  name: Item
  nameWithType: Level2Collection.Item
  fullName: TradingPlatform.BusinessLayer.Level2Collection.Item
- uid: TradingPlatform.BusinessLayer.Level2Item
  commentId: T:TradingPlatform.BusinessLayer.Level2Item
  parent: TradingPlatform.BusinessLayer
  name: Level2Item
  nameWithType: Level2Item
  fullName: TradingPlatform.BusinessLayer.Level2Item
- uid: TradingPlatform.BusinessLayer.Level2Collection.LastSortingParametres*
  commentId: Overload:TradingPlatform.BusinessLayer.Level2Collection.LastSortingParametres
  name: LastSortingParametres
  nameWithType: Level2Collection.LastSortingParametres
  fullName: TradingPlatform.BusinessLayer.Level2Collection.LastSortingParametres
- uid: TradingPlatform.BusinessLayer.GetSortedListParameters
  commentId: T:TradingPlatform.BusinessLayer.GetSortedListParameters
  parent: TradingPlatform.BusinessLayer
  name: GetSortedListParameters
  nameWithType: GetSortedListParameters
  fullName: TradingPlatform.BusinessLayer.GetSortedListParameters
- uid: TradingPlatform.BusinessLayer.Level2Collection.#ctor*
  commentId: Overload:TradingPlatform.BusinessLayer.Level2Collection.#ctor
  name: Level2Collection
  nameWithType: Level2Collection.Level2Collection
  fullName: TradingPlatform.BusinessLayer.Level2Collection.Level2Collection
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TradingPlatform.BusinessLayer.Level2Collection.GetSortedList*
  commentId: Overload:TradingPlatform.BusinessLayer.Level2Collection.GetSortedList
  name: GetSortedList
  nameWithType: Level2Collection.GetSortedList
  fullName: TradingPlatform.BusinessLayer.Level2Collection.GetSortedList
- uid: System.Collections.Generic.List{TradingPlatform.BusinessLayer.Level2Item}
  commentId: T:System.Collections.Generic.List{TradingPlatform.BusinessLayer.Level2Item}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Level2Item>
  nameWithType: List<Level2Item>
  fullName: System.Collections.Generic.List<TradingPlatform.BusinessLayer.Level2Item>
  nameWithType.vb: List(Of Level2Item)
  fullName.vb: System.Collections.Generic.List(Of TradingPlatform.BusinessLayer.Level2Item)
  name.vb: List(Of Level2Item)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TradingPlatform.BusinessLayer.Level2Item
    name: Level2Item
    nameWithType: Level2Item
    fullName: TradingPlatform.BusinessLayer.Level2Item
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TradingPlatform.BusinessLayer.Level2Item
    name: Level2Item
    nameWithType: Level2Item
    fullName: TradingPlatform.BusinessLayer.Level2Item
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
