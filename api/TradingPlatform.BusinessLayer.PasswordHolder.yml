### YamlMime:ManagedReference
items:
- uid: TradingPlatform.BusinessLayer.PasswordHolder
  commentId: T:TradingPlatform.BusinessLayer.PasswordHolder
  id: PasswordHolder
  parent: TradingPlatform.BusinessLayer
  children:
  - TradingPlatform.BusinessLayer.PasswordHolder.#ctor(System.String,System.Boolean)
  - TradingPlatform.BusinessLayer.PasswordHolder.FromXElement(System.Xml.Linq.XElement,TradingPlatform.BusinessLayer.Serialization.DeserializationInfo)
  - TradingPlatform.BusinessLayer.PasswordHolder.Password
  - TradingPlatform.BusinessLayer.PasswordHolder.SavePassword
  - TradingPlatform.BusinessLayer.PasswordHolder.ToXElement
  langs:
  - csharp
  - vb
  name: PasswordHolder
  nameWithType: PasswordHolder
  fullName: TradingPlatform.BusinessLayer.PasswordHolder
  type: Class
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Settings/SettingItemPassword.cs
    id: PasswordHolder
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Settings/SettingItemPassword.cs
    startLine: 66
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: >-
      [Serializable]

      [DataContract]

      public class PasswordHolder : IXElementSerialization
    content.vb: >-
      <Serializable>

      <DataContract>

      Public Class PasswordHolder
          Implements IXElementSerialization
  inheritance:
  - System.Object
  implements:
  - TradingPlatform.BusinessLayer.Serialization.IXElementSerialization
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TradingPlatform.BusinessLayer.PasswordHolder.#ctor(System.String,System.Boolean)
  commentId: M:TradingPlatform.BusinessLayer.PasswordHolder.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: TradingPlatform.BusinessLayer.PasswordHolder
  langs:
  - csharp
  - vb
  name: PasswordHolder(String, Boolean)
  nameWithType: PasswordHolder.PasswordHolder(String, Boolean)
  fullName: TradingPlatform.BusinessLayer.PasswordHolder.PasswordHolder(System.String, System.Boolean)
  type: Constructor
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Settings/SettingItemPassword.cs
    id: .ctor
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Settings/SettingItemPassword.cs
    startLine: 70
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public PasswordHolder(string Password = "", bool SavePassword = true)
    parameters:
    - id: Password
      type: System.String
    - id: SavePassword
      type: System.Boolean
    content.vb: Public Sub New(Password As String = "", SavePassword As Boolean = True)
  overload: TradingPlatform.BusinessLayer.PasswordHolder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.PasswordHolder.Password
  commentId: P:TradingPlatform.BusinessLayer.PasswordHolder.Password
  id: Password
  parent: TradingPlatform.BusinessLayer.PasswordHolder
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: PasswordHolder.Password
  fullName: TradingPlatform.BusinessLayer.PasswordHolder.Password
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Settings/SettingItemPassword.cs
    id: Password
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Settings/SettingItemPassword.cs
    startLine: 76
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public string Password { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Password As String
  overload: TradingPlatform.BusinessLayer.PasswordHolder.Password*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.PasswordHolder.SavePassword
  commentId: P:TradingPlatform.BusinessLayer.PasswordHolder.SavePassword
  id: SavePassword
  parent: TradingPlatform.BusinessLayer.PasswordHolder
  langs:
  - csharp
  - vb
  name: SavePassword
  nameWithType: PasswordHolder.SavePassword
  fullName: TradingPlatform.BusinessLayer.PasswordHolder.SavePassword
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Settings/SettingItemPassword.cs
    id: SavePassword
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Settings/SettingItemPassword.cs
    startLine: 85
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: >-
      [DataMember(Name = "SavePassword")]

      public bool SavePassword { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember(Name:="SavePassword")>

      Public Property SavePassword As Boolean
  overload: TradingPlatform.BusinessLayer.PasswordHolder.SavePassword*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: SavePassword
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.PasswordHolder.ToXElement
  commentId: M:TradingPlatform.BusinessLayer.PasswordHolder.ToXElement
  id: ToXElement
  parent: TradingPlatform.BusinessLayer.PasswordHolder
  langs:
  - csharp
  - vb
  name: ToXElement()
  nameWithType: PasswordHolder.ToXElement()
  fullName: TradingPlatform.BusinessLayer.PasswordHolder.ToXElement()
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Settings/SettingItemPassword.cs
    id: ToXElement
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Settings/SettingItemPassword.cs
    startLine: 93
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public XElement ToXElement()
    return:
      type: System.Xml.Linq.XElement
    content.vb: Public Function ToXElement As XElement
  overload: TradingPlatform.BusinessLayer.PasswordHolder.ToXElement*
  implements:
  - TradingPlatform.BusinessLayer.Serialization.IXElementSerialization.ToXElement
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.PasswordHolder.FromXElement(System.Xml.Linq.XElement,TradingPlatform.BusinessLayer.Serialization.DeserializationInfo)
  commentId: M:TradingPlatform.BusinessLayer.PasswordHolder.FromXElement(System.Xml.Linq.XElement,TradingPlatform.BusinessLayer.Serialization.DeserializationInfo)
  id: FromXElement(System.Xml.Linq.XElement,TradingPlatform.BusinessLayer.Serialization.DeserializationInfo)
  parent: TradingPlatform.BusinessLayer.PasswordHolder
  langs:
  - csharp
  - vb
  name: FromXElement(XElement, DeserializationInfo)
  nameWithType: PasswordHolder.FromXElement(XElement, DeserializationInfo)
  fullName: TradingPlatform.BusinessLayer.PasswordHolder.FromXElement(System.Xml.Linq.XElement, TradingPlatform.BusinessLayer.Serialization.DeserializationInfo)
  type: Method
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Settings/SettingItemPassword.cs
    id: FromXElement
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Settings/SettingItemPassword.cs
    startLine: 101
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public void FromXElement(XElement element, DeserializationInfo deserializationInfo)
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
    - id: deserializationInfo
      type: TradingPlatform.BusinessLayer.Serialization.DeserializationInfo
    content.vb: Public Sub FromXElement(element As XElement, deserializationInfo As DeserializationInfo)
  overload: TradingPlatform.BusinessLayer.PasswordHolder.FromXElement*
  implements:
  - TradingPlatform.BusinessLayer.Serialization.IXElementSerialization.FromXElement(System.Xml.Linq.XElement,TradingPlatform.BusinessLayer.Serialization.DeserializationInfo)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TradingPlatform.BusinessLayer
  commentId: N:TradingPlatform.BusinessLayer
  name: TradingPlatform.BusinessLayer
  nameWithType: TradingPlatform.BusinessLayer
  fullName: TradingPlatform.BusinessLayer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TradingPlatform.BusinessLayer.Serialization.IXElementSerialization
  commentId: T:TradingPlatform.BusinessLayer.Serialization.IXElementSerialization
  parent: TradingPlatform.BusinessLayer.Serialization
  name: IXElementSerialization
  nameWithType: IXElementSerialization
  fullName: TradingPlatform.BusinessLayer.Serialization.IXElementSerialization
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TradingPlatform.BusinessLayer.Serialization
  commentId: N:TradingPlatform.BusinessLayer.Serialization
  name: TradingPlatform.BusinessLayer.Serialization
  nameWithType: TradingPlatform.BusinessLayer.Serialization
  fullName: TradingPlatform.BusinessLayer.Serialization
- uid: TradingPlatform.BusinessLayer.PasswordHolder.#ctor*
  commentId: Overload:TradingPlatform.BusinessLayer.PasswordHolder.#ctor
  name: PasswordHolder
  nameWithType: PasswordHolder.PasswordHolder
  fullName: TradingPlatform.BusinessLayer.PasswordHolder.PasswordHolder
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TradingPlatform.BusinessLayer.PasswordHolder.Password*
  commentId: Overload:TradingPlatform.BusinessLayer.PasswordHolder.Password
  name: Password
  nameWithType: PasswordHolder.Password
  fullName: TradingPlatform.BusinessLayer.PasswordHolder.Password
- uid: TradingPlatform.BusinessLayer.PasswordHolder.SavePassword*
  commentId: Overload:TradingPlatform.BusinessLayer.PasswordHolder.SavePassword
  name: SavePassword
  nameWithType: PasswordHolder.SavePassword
  fullName: TradingPlatform.BusinessLayer.PasswordHolder.SavePassword
- uid: TradingPlatform.BusinessLayer.PasswordHolder.ToXElement*
  commentId: Overload:TradingPlatform.BusinessLayer.PasswordHolder.ToXElement
  name: ToXElement
  nameWithType: PasswordHolder.ToXElement
  fullName: TradingPlatform.BusinessLayer.PasswordHolder.ToXElement
- uid: TradingPlatform.BusinessLayer.Serialization.IXElementSerialization.ToXElement
  commentId: M:TradingPlatform.BusinessLayer.Serialization.IXElementSerialization.ToXElement
  parent: TradingPlatform.BusinessLayer.Serialization.IXElementSerialization
  name: ToXElement()
  nameWithType: IXElementSerialization.ToXElement()
  fullName: TradingPlatform.BusinessLayer.Serialization.IXElementSerialization.ToXElement()
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Serialization.IXElementSerialization.ToXElement
    name: ToXElement
    nameWithType: IXElementSerialization.ToXElement
    fullName: TradingPlatform.BusinessLayer.Serialization.IXElementSerialization.ToXElement
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Serialization.IXElementSerialization.ToXElement
    name: ToXElement
    nameWithType: IXElementSerialization.ToXElement
    fullName: TradingPlatform.BusinessLayer.Serialization.IXElementSerialization.ToXElement
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.Linq.XElement
  commentId: T:System.Xml.Linq.XElement
  parent: System.Xml.Linq
  isExternal: true
  name: XElement
  nameWithType: XElement
  fullName: System.Xml.Linq.XElement
- uid: System.Xml.Linq
  commentId: N:System.Xml.Linq
  isExternal: true
  name: System.Xml.Linq
  nameWithType: System.Xml.Linq
  fullName: System.Xml.Linq
- uid: TradingPlatform.BusinessLayer.PasswordHolder.FromXElement*
  commentId: Overload:TradingPlatform.BusinessLayer.PasswordHolder.FromXElement
  name: FromXElement
  nameWithType: PasswordHolder.FromXElement
  fullName: TradingPlatform.BusinessLayer.PasswordHolder.FromXElement
- uid: TradingPlatform.BusinessLayer.Serialization.IXElementSerialization.FromXElement(System.Xml.Linq.XElement,TradingPlatform.BusinessLayer.Serialization.DeserializationInfo)
  commentId: M:TradingPlatform.BusinessLayer.Serialization.IXElementSerialization.FromXElement(System.Xml.Linq.XElement,TradingPlatform.BusinessLayer.Serialization.DeserializationInfo)
  parent: TradingPlatform.BusinessLayer.Serialization.IXElementSerialization
  isExternal: true
  name: FromXElement(XElement, DeserializationInfo)
  nameWithType: IXElementSerialization.FromXElement(XElement, DeserializationInfo)
  fullName: TradingPlatform.BusinessLayer.Serialization.IXElementSerialization.FromXElement(System.Xml.Linq.XElement, TradingPlatform.BusinessLayer.Serialization.DeserializationInfo)
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Serialization.IXElementSerialization.FromXElement(System.Xml.Linq.XElement,TradingPlatform.BusinessLayer.Serialization.DeserializationInfo)
    name: FromXElement
    nameWithType: IXElementSerialization.FromXElement
    fullName: TradingPlatform.BusinessLayer.Serialization.IXElementSerialization.FromXElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.Linq.XElement
    name: XElement
    nameWithType: XElement
    fullName: System.Xml.Linq.XElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TradingPlatform.BusinessLayer.Serialization.DeserializationInfo
    name: DeserializationInfo
    nameWithType: DeserializationInfo
    fullName: TradingPlatform.BusinessLayer.Serialization.DeserializationInfo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Serialization.IXElementSerialization.FromXElement(System.Xml.Linq.XElement,TradingPlatform.BusinessLayer.Serialization.DeserializationInfo)
    name: FromXElement
    nameWithType: IXElementSerialization.FromXElement
    fullName: TradingPlatform.BusinessLayer.Serialization.IXElementSerialization.FromXElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.Linq.XElement
    name: XElement
    nameWithType: XElement
    fullName: System.Xml.Linq.XElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TradingPlatform.BusinessLayer.Serialization.DeserializationInfo
    name: DeserializationInfo
    nameWithType: DeserializationInfo
    fullName: TradingPlatform.BusinessLayer.Serialization.DeserializationInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Serialization.DeserializationInfo
  commentId: T:TradingPlatform.BusinessLayer.Serialization.DeserializationInfo
  parent: TradingPlatform.BusinessLayer.Serialization
  name: DeserializationInfo
  nameWithType: DeserializationInfo
  fullName: TradingPlatform.BusinessLayer.Serialization.DeserializationInfo
