### YamlMime:ManagedReference
items:
- uid: TradingPlatform.BusinessLayer.HistoryHolder
  commentId: T:TradingPlatform.BusinessLayer.HistoryHolder
  id: HistoryHolder
  parent: TradingPlatform.BusinessLayer
  children:
  - TradingPlatform.BusinessLayer.HistoryHolder.#ctor(System.Collections.Generic.IList{TradingPlatform.BusinessLayer.IHistoryItem},TradingPlatform.BusinessLayer.HistoryRequestParameters)
  - TradingPlatform.BusinessLayer.HistoryHolder.History
  - TradingPlatform.BusinessLayer.HistoryHolder.RequestParameters
  langs:
  - csharp
  - vb
  name: HistoryHolder
  nameWithType: HistoryHolder
  fullName: TradingPlatform.BusinessLayer.HistoryHolder
  type: Class
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/History/HistoryHolder.cs
    id: HistoryHolder
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/History/HistoryHolder.cs
    startLine: 6
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public class HistoryHolder
    content.vb: Public Class HistoryHolder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TradingPlatform.BusinessLayer.HistoryHolder.History
  commentId: P:TradingPlatform.BusinessLayer.HistoryHolder.History
  id: History
  parent: TradingPlatform.BusinessLayer.HistoryHolder
  langs:
  - csharp
  - vb
  name: History
  nameWithType: HistoryHolder.History
  fullName: TradingPlatform.BusinessLayer.HistoryHolder.History
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/History/HistoryHolder.cs
    id: History
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/History/HistoryHolder.cs
    startLine: 8
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public IList<IHistoryItem> History { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{TradingPlatform.BusinessLayer.IHistoryItem}
    content.vb: Public ReadOnly Property History As IList(Of IHistoryItem)
  overload: TradingPlatform.BusinessLayer.HistoryHolder.History*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.HistoryHolder.RequestParameters
  commentId: P:TradingPlatform.BusinessLayer.HistoryHolder.RequestParameters
  id: RequestParameters
  parent: TradingPlatform.BusinessLayer.HistoryHolder
  langs:
  - csharp
  - vb
  name: RequestParameters
  nameWithType: HistoryHolder.RequestParameters
  fullName: TradingPlatform.BusinessLayer.HistoryHolder.RequestParameters
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/History/HistoryHolder.cs
    id: RequestParameters
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/History/HistoryHolder.cs
    startLine: 10
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public HistoryRequestParameters RequestParameters { get; }
    parameters: []
    return:
      type: TradingPlatform.BusinessLayer.HistoryRequestParameters
    content.vb: Public ReadOnly Property RequestParameters As HistoryRequestParameters
  overload: TradingPlatform.BusinessLayer.HistoryHolder.RequestParameters*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.HistoryHolder.#ctor(System.Collections.Generic.IList{TradingPlatform.BusinessLayer.IHistoryItem},TradingPlatform.BusinessLayer.HistoryRequestParameters)
  commentId: M:TradingPlatform.BusinessLayer.HistoryHolder.#ctor(System.Collections.Generic.IList{TradingPlatform.BusinessLayer.IHistoryItem},TradingPlatform.BusinessLayer.HistoryRequestParameters)
  id: '#ctor(System.Collections.Generic.IList{TradingPlatform.BusinessLayer.IHistoryItem},TradingPlatform.BusinessLayer.HistoryRequestParameters)'
  parent: TradingPlatform.BusinessLayer.HistoryHolder
  langs:
  - csharp
  - vb
  name: HistoryHolder(IList<IHistoryItem>, HistoryRequestParameters)
  nameWithType: HistoryHolder.HistoryHolder(IList<IHistoryItem>, HistoryRequestParameters)
  fullName: TradingPlatform.BusinessLayer.HistoryHolder.HistoryHolder(System.Collections.Generic.IList<TradingPlatform.BusinessLayer.IHistoryItem>, TradingPlatform.BusinessLayer.HistoryRequestParameters)
  type: Constructor
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/History/HistoryHolder.cs
    id: .ctor
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/History/HistoryHolder.cs
    startLine: 12
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public HistoryHolder(IList<IHistoryItem> history, HistoryRequestParameters requestParameters)
    parameters:
    - id: history
      type: System.Collections.Generic.IList{TradingPlatform.BusinessLayer.IHistoryItem}
    - id: requestParameters
      type: TradingPlatform.BusinessLayer.HistoryRequestParameters
    content.vb: Public Sub New(history As IList(Of IHistoryItem), requestParameters As HistoryRequestParameters)
  overload: TradingPlatform.BusinessLayer.HistoryHolder.#ctor*
  nameWithType.vb: HistoryHolder.HistoryHolder(IList(Of IHistoryItem), HistoryRequestParameters)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TradingPlatform.BusinessLayer.HistoryHolder.HistoryHolder(System.Collections.Generic.IList(Of TradingPlatform.BusinessLayer.IHistoryItem), TradingPlatform.BusinessLayer.HistoryRequestParameters)
  name.vb: HistoryHolder(IList(Of IHistoryItem), HistoryRequestParameters)
references:
- uid: TradingPlatform.BusinessLayer
  commentId: N:TradingPlatform.BusinessLayer
  name: TradingPlatform.BusinessLayer
  nameWithType: TradingPlatform.BusinessLayer
  fullName: TradingPlatform.BusinessLayer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TradingPlatform.BusinessLayer.HistoryHolder.History*
  commentId: Overload:TradingPlatform.BusinessLayer.HistoryHolder.History
  name: History
  nameWithType: HistoryHolder.History
  fullName: TradingPlatform.BusinessLayer.HistoryHolder.History
- uid: System.Collections.Generic.IList{TradingPlatform.BusinessLayer.IHistoryItem}
  commentId: T:System.Collections.Generic.IList{TradingPlatform.BusinessLayer.IHistoryItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IHistoryItem>
  nameWithType: IList<IHistoryItem>
  fullName: System.Collections.Generic.IList<TradingPlatform.BusinessLayer.IHistoryItem>
  nameWithType.vb: IList(Of IHistoryItem)
  fullName.vb: System.Collections.Generic.IList(Of TradingPlatform.BusinessLayer.IHistoryItem)
  name.vb: IList(Of IHistoryItem)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TradingPlatform.BusinessLayer.IHistoryItem
    name: IHistoryItem
    nameWithType: IHistoryItem
    fullName: TradingPlatform.BusinessLayer.IHistoryItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TradingPlatform.BusinessLayer.IHistoryItem
    name: IHistoryItem
    nameWithType: IHistoryItem
    fullName: TradingPlatform.BusinessLayer.IHistoryItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TradingPlatform.BusinessLayer.HistoryHolder.RequestParameters*
  commentId: Overload:TradingPlatform.BusinessLayer.HistoryHolder.RequestParameters
  name: RequestParameters
  nameWithType: HistoryHolder.RequestParameters
  fullName: TradingPlatform.BusinessLayer.HistoryHolder.RequestParameters
- uid: TradingPlatform.BusinessLayer.HistoryRequestParameters
  commentId: T:TradingPlatform.BusinessLayer.HistoryRequestParameters
  parent: TradingPlatform.BusinessLayer
  name: HistoryRequestParameters
  nameWithType: HistoryRequestParameters
  fullName: TradingPlatform.BusinessLayer.HistoryRequestParameters
- uid: TradingPlatform.BusinessLayer.HistoryHolder.#ctor*
  commentId: Overload:TradingPlatform.BusinessLayer.HistoryHolder.#ctor
  name: HistoryHolder
  nameWithType: HistoryHolder.HistoryHolder
  fullName: TradingPlatform.BusinessLayer.HistoryHolder.HistoryHolder
