### YamlMime:ManagedReference
items:
- uid: TradingPlatform.BusinessLayer.SettingItemRelationParameters
  commentId: T:TradingPlatform.BusinessLayer.SettingItemRelationParameters
  id: SettingItemRelationParameters
  parent: TradingPlatform.BusinessLayer
  children:
  - TradingPlatform.BusinessLayer.SettingItemRelationParameters.DependentItem
  - TradingPlatform.BusinessLayer.SettingItemRelationParameters.MultipleRelationCondition
  - TradingPlatform.BusinessLayer.SettingItemRelationParameters.RelationValuesByParentItem
  langs:
  - csharp
  - vb
  name: SettingItemRelationParameters
  nameWithType: SettingItemRelationParameters
  fullName: TradingPlatform.BusinessLayer.SettingItemRelationParameters
  type: Class
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Settings/Relations/SettingItemRelationParameters.cs
    id: SettingItemRelationParameters
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Settings/Relations/SettingItemRelationParameters.cs
    startLine: 6
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public class SettingItemRelationParameters
    content.vb: Public Class SettingItemRelationParameters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TradingPlatform.BusinessLayer.SettingItemRelationParameters.DependentItem
  commentId: P:TradingPlatform.BusinessLayer.SettingItemRelationParameters.DependentItem
  id: DependentItem
  parent: TradingPlatform.BusinessLayer.SettingItemRelationParameters
  langs:
  - csharp
  - vb
  name: DependentItem
  nameWithType: SettingItemRelationParameters.DependentItem
  fullName: TradingPlatform.BusinessLayer.SettingItemRelationParameters.DependentItem
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Settings/Relations/SettingItemRelationParameters.cs
    id: DependentItem
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Settings/Relations/SettingItemRelationParameters.cs
    startLine: 8
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public SettingItem DependentItem { get; set; }
    parameters: []
    return:
      type: TradingPlatform.BusinessLayer.SettingItem
    content.vb: Public Property DependentItem As SettingItem
  overload: TradingPlatform.BusinessLayer.SettingItemRelationParameters.DependentItem*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.SettingItemRelationParameters.RelationValuesByParentItem
  commentId: P:TradingPlatform.BusinessLayer.SettingItemRelationParameters.RelationValuesByParentItem
  id: RelationValuesByParentItem
  parent: TradingPlatform.BusinessLayer.SettingItemRelationParameters
  langs:
  - csharp
  - vb
  name: RelationValuesByParentItem
  nameWithType: SettingItemRelationParameters.RelationValuesByParentItem
  fullName: TradingPlatform.BusinessLayer.SettingItemRelationParameters.RelationValuesByParentItem
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Settings/Relations/SettingItemRelationParameters.cs
    id: RelationValuesByParentItem
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Settings/Relations/SettingItemRelationParameters.cs
    startLine: 10
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public IDictionary<SettingItem, IEnumerable<object>> RelationValuesByParentItem { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{TradingPlatform.BusinessLayer.SettingItem,System.Collections.Generic.IEnumerable{System.Object}}
    content.vb: Public Property RelationValuesByParentItem As IDictionary(Of SettingItem, IEnumerable(Of Object))
  overload: TradingPlatform.BusinessLayer.SettingItemRelationParameters.RelationValuesByParentItem*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.SettingItemRelationParameters.MultipleRelationCondition
  commentId: P:TradingPlatform.BusinessLayer.SettingItemRelationParameters.MultipleRelationCondition
  id: MultipleRelationCondition
  parent: TradingPlatform.BusinessLayer.SettingItemRelationParameters
  langs:
  - csharp
  - vb
  name: MultipleRelationCondition
  nameWithType: SettingItemRelationParameters.MultipleRelationCondition
  fullName: TradingPlatform.BusinessLayer.SettingItemRelationParameters.MultipleRelationCondition
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Settings/Relations/SettingItemRelationParameters.cs
    id: MultipleRelationCondition
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Settings/Relations/SettingItemRelationParameters.cs
    startLine: 12
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public MultipleRelationCondition MultipleRelationCondition { get; set; }
    parameters: []
    return:
      type: TradingPlatform.BusinessLayer.MultipleRelationCondition
    content.vb: Public Property MultipleRelationCondition As MultipleRelationCondition
  overload: TradingPlatform.BusinessLayer.SettingItemRelationParameters.MultipleRelationCondition*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: TradingPlatform.BusinessLayer
  commentId: N:TradingPlatform.BusinessLayer
  name: TradingPlatform.BusinessLayer
  nameWithType: TradingPlatform.BusinessLayer
  fullName: TradingPlatform.BusinessLayer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TradingPlatform.BusinessLayer.SettingItemRelationParameters.DependentItem*
  commentId: Overload:TradingPlatform.BusinessLayer.SettingItemRelationParameters.DependentItem
  name: DependentItem
  nameWithType: SettingItemRelationParameters.DependentItem
  fullName: TradingPlatform.BusinessLayer.SettingItemRelationParameters.DependentItem
- uid: TradingPlatform.BusinessLayer.SettingItem
  commentId: T:TradingPlatform.BusinessLayer.SettingItem
  parent: TradingPlatform.BusinessLayer
  name: SettingItem
  nameWithType: SettingItem
  fullName: TradingPlatform.BusinessLayer.SettingItem
- uid: TradingPlatform.BusinessLayer.SettingItemRelationParameters.RelationValuesByParentItem*
  commentId: Overload:TradingPlatform.BusinessLayer.SettingItemRelationParameters.RelationValuesByParentItem
  name: RelationValuesByParentItem
  nameWithType: SettingItemRelationParameters.RelationValuesByParentItem
  fullName: TradingPlatform.BusinessLayer.SettingItemRelationParameters.RelationValuesByParentItem
- uid: System.Collections.Generic.IDictionary{TradingPlatform.BusinessLayer.SettingItem,System.Collections.Generic.IEnumerable{System.Object}}
  commentId: T:System.Collections.Generic.IDictionary{TradingPlatform.BusinessLayer.SettingItem,System.Collections.Generic.IEnumerable{System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<SettingItem, IEnumerable<Object>>
  nameWithType: IDictionary<SettingItem, IEnumerable<Object>>
  fullName: System.Collections.Generic.IDictionary<TradingPlatform.BusinessLayer.SettingItem, System.Collections.Generic.IEnumerable<System.Object>>
  nameWithType.vb: IDictionary(Of SettingItem, IEnumerable(Of Object))
  fullName.vb: System.Collections.Generic.IDictionary(Of TradingPlatform.BusinessLayer.SettingItem, System.Collections.Generic.IEnumerable(Of System.Object))
  name.vb: IDictionary(Of SettingItem, IEnumerable(Of Object))
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TradingPlatform.BusinessLayer.SettingItem
    name: SettingItem
    nameWithType: SettingItem
    fullName: TradingPlatform.BusinessLayer.SettingItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TradingPlatform.BusinessLayer.SettingItem
    name: SettingItem
    nameWithType: SettingItem
    fullName: TradingPlatform.BusinessLayer.SettingItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TradingPlatform.BusinessLayer.SettingItemRelationParameters.MultipleRelationCondition*
  commentId: Overload:TradingPlatform.BusinessLayer.SettingItemRelationParameters.MultipleRelationCondition
  name: MultipleRelationCondition
  nameWithType: SettingItemRelationParameters.MultipleRelationCondition
  fullName: TradingPlatform.BusinessLayer.SettingItemRelationParameters.MultipleRelationCondition
- uid: TradingPlatform.BusinessLayer.MultipleRelationCondition
  commentId: T:TradingPlatform.BusinessLayer.MultipleRelationCondition
  parent: TradingPlatform.BusinessLayer
  name: MultipleRelationCondition
  nameWithType: MultipleRelationCondition
  fullName: TradingPlatform.BusinessLayer.MultipleRelationCondition
