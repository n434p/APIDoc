### YamlMime:ManagedReference
items:
- uid: TradingPlatform.BusinessLayer.InstrumentVolumeType
  commentId: T:TradingPlatform.BusinessLayer.InstrumentVolumeType
  id: InstrumentVolumeType
  parent: TradingPlatform.BusinessLayer
  children:
  - TradingPlatform.BusinessLayer.InstrumentVolumeType.Disable
  - TradingPlatform.BusinessLayer.InstrumentVolumeType.Ticks
  - TradingPlatform.BusinessLayer.InstrumentVolumeType.Volume
  langs:
  - csharp
  - vb
  name: InstrumentVolumeType
  nameWithType: InstrumentVolumeType
  fullName: TradingPlatform.BusinessLayer.InstrumentVolumeType
  type: Enum
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/BusinessObjectsEnums.cs
    id: InstrumentVolumeType
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/BusinessObjectsEnums.cs
    startLine: 153
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: >-
      [DataContract(Name = "InstrumentVolumeType", Namespace = "TradingPlatform")]

      public enum InstrumentVolumeType
    content.vb: >-
      <DataContract(Name:="InstrumentVolumeType", Namespace:="TradingPlatform")>

      Public Enum InstrumentVolumeType
  extensionMethods:
  - System.Enum.TradingPlatform.BusinessLayer.Extensions.GetDescription
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: InstrumentVolumeType
    - name: Namespace
      type: System.String
      value: TradingPlatform
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: TradingPlatform.BusinessLayer.InstrumentVolumeType.Volume
  commentId: F:TradingPlatform.BusinessLayer.InstrumentVolumeType.Volume
  id: Volume
  parent: TradingPlatform.BusinessLayer.InstrumentVolumeType
  langs:
  - csharp
  - vb
  name: Volume
  nameWithType: InstrumentVolumeType.Volume
  fullName: TradingPlatform.BusinessLayer.InstrumentVolumeType.Volume
  type: Field
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/BusinessObjectsEnums.cs
    id: Volume
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/BusinessObjectsEnums.cs
    startLine: 156
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: >-
      [EnumMember]

      Volume = 0
    return:
      type: TradingPlatform.BusinessLayer.InstrumentVolumeType
    content.vb: >-
      <EnumMember>

      Volume = 0
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: TradingPlatform.BusinessLayer.InstrumentVolumeType.Ticks
  commentId: F:TradingPlatform.BusinessLayer.InstrumentVolumeType.Ticks
  id: Ticks
  parent: TradingPlatform.BusinessLayer.InstrumentVolumeType
  langs:
  - csharp
  - vb
  name: Ticks
  nameWithType: InstrumentVolumeType.Ticks
  fullName: TradingPlatform.BusinessLayer.InstrumentVolumeType.Ticks
  type: Field
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/BusinessObjectsEnums.cs
    id: Ticks
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/BusinessObjectsEnums.cs
    startLine: 158
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: >-
      [EnumMember]

      Ticks = 1
    return:
      type: TradingPlatform.BusinessLayer.InstrumentVolumeType
    content.vb: >-
      <EnumMember>

      Ticks = 1
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: TradingPlatform.BusinessLayer.InstrumentVolumeType.Disable
  commentId: F:TradingPlatform.BusinessLayer.InstrumentVolumeType.Disable
  id: Disable
  parent: TradingPlatform.BusinessLayer.InstrumentVolumeType
  langs:
  - csharp
  - vb
  name: Disable
  nameWithType: InstrumentVolumeType.Disable
  fullName: TradingPlatform.BusinessLayer.InstrumentVolumeType.Disable
  type: Field
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/BusinessObjectsEnums.cs
    id: Disable
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/BusinessObjectsEnums.cs
    startLine: 160
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: >-
      [EnumMember]

      Disable = 2
    return:
      type: TradingPlatform.BusinessLayer.InstrumentVolumeType
    content.vb: >-
      <EnumMember>

      Disable = 2
  attributes:
  - type: System.Runtime.Serialization.EnumMemberAttribute
    ctor: System.Runtime.Serialization.EnumMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: TradingPlatform.BusinessLayer
  commentId: N:TradingPlatform.BusinessLayer
  name: TradingPlatform.BusinessLayer
  nameWithType: TradingPlatform.BusinessLayer
  fullName: TradingPlatform.BusinessLayer
- uid: System.Enum.TradingPlatform.BusinessLayer.Extensions.GetDescription
  commentId: M:TradingPlatform.BusinessLayer.Extensions.GetDescription(System.Enum)
  parent: TradingPlatform.BusinessLayer.Extensions
  definition: TradingPlatform.BusinessLayer.Extensions.GetDescription(System.Enum)
  name: GetDescription()
  nameWithType: Extensions.GetDescription()
  fullName: TradingPlatform.BusinessLayer.Extensions.GetDescription()
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Extensions.GetDescription
    name: GetDescription
    nameWithType: Extensions.GetDescription
    fullName: TradingPlatform.BusinessLayer.Extensions.GetDescription
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Extensions.GetDescription
    name: GetDescription
    nameWithType: Extensions.GetDescription
    fullName: TradingPlatform.BusinessLayer.Extensions.GetDescription
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Extensions.GetDescription(System.Enum)
  commentId: M:TradingPlatform.BusinessLayer.Extensions.GetDescription(System.Enum)
  isExternal: true
  name: GetDescription(Enum)
  nameWithType: Extensions.GetDescription(Enum)
  fullName: TradingPlatform.BusinessLayer.Extensions.GetDescription(System.Enum)
  spec.csharp:
  - uid: TradingPlatform.BusinessLayer.Extensions.GetDescription(System.Enum)
    name: GetDescription
    nameWithType: Extensions.GetDescription
    fullName: TradingPlatform.BusinessLayer.Extensions.GetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Enum
    name: Enum
    nameWithType: Enum
    fullName: System.Enum
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TradingPlatform.BusinessLayer.Extensions.GetDescription(System.Enum)
    name: GetDescription
    nameWithType: Extensions.GetDescription
    fullName: TradingPlatform.BusinessLayer.Extensions.GetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Enum
    name: Enum
    nameWithType: Enum
    fullName: System.Enum
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.Extensions
  commentId: T:TradingPlatform.BusinessLayer.Extensions
  parent: TradingPlatform.BusinessLayer
  name: Extensions
  nameWithType: Extensions
  fullName: TradingPlatform.BusinessLayer.Extensions
- uid: TradingPlatform.BusinessLayer.InstrumentVolumeType
  commentId: T:TradingPlatform.BusinessLayer.InstrumentVolumeType
  parent: TradingPlatform.BusinessLayer
  name: InstrumentVolumeType
  nameWithType: InstrumentVolumeType
  fullName: TradingPlatform.BusinessLayer.InstrumentVolumeType
