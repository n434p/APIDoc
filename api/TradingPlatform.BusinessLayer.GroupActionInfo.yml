### YamlMime:ManagedReference
items:
- uid: TradingPlatform.BusinessLayer.GroupActionInfo
  commentId: T:TradingPlatform.BusinessLayer.GroupActionInfo
  id: GroupActionInfo
  parent: TradingPlatform.BusinessLayer
  children:
  - TradingPlatform.BusinessLayer.GroupActionInfo.#ctor(System.Action{System.Object})
  - TradingPlatform.BusinessLayer.GroupActionInfo.Action
  - TradingPlatform.BusinessLayer.GroupActionInfo.ConfirmationText
  - TradingPlatform.BusinessLayer.GroupActionInfo.IconType
  - TradingPlatform.BusinessLayer.GroupActionInfo.Marker
  - TradingPlatform.BusinessLayer.GroupActionInfo.NeedActionConfirmation
  - TradingPlatform.BusinessLayer.GroupActionInfo.Tag
  langs:
  - csharp
  - vb
  name: GroupActionInfo
  nameWithType: GroupActionInfo
  fullName: TradingPlatform.BusinessLayer.GroupActionInfo
  type: Class
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Settings/Groups/GroupActionInfo.cs
    id: GroupActionInfo
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Settings/Groups/GroupActionInfo.cs
    startLine: 8
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public class GroupActionInfo
    content.vb: Public Class GroupActionInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TradingPlatform.BusinessLayer.GroupActionInfo.Action
  commentId: P:TradingPlatform.BusinessLayer.GroupActionInfo.Action
  id: Action
  parent: TradingPlatform.BusinessLayer.GroupActionInfo
  langs:
  - csharp
  - vb
  name: Action
  nameWithType: GroupActionInfo.Action
  fullName: TradingPlatform.BusinessLayer.GroupActionInfo.Action
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Settings/Groups/GroupActionInfo.cs
    id: Action
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Settings/Groups/GroupActionInfo.cs
    startLine: 10
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public Action<object> Action { get; }
    parameters: []
    return:
      type: System.Action{System.Object}
    content.vb: Public ReadOnly Property Action As Action(Of Object)
  overload: TradingPlatform.BusinessLayer.GroupActionInfo.Action*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.GroupActionInfo.IconType
  commentId: P:TradingPlatform.BusinessLayer.GroupActionInfo.IconType
  id: IconType
  parent: TradingPlatform.BusinessLayer.GroupActionInfo
  langs:
  - csharp
  - vb
  name: IconType
  nameWithType: GroupActionInfo.IconType
  fullName: TradingPlatform.BusinessLayer.GroupActionInfo.IconType
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Settings/Groups/GroupActionInfo.cs
    id: IconType
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Settings/Groups/GroupActionInfo.cs
    startLine: 11
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public IconType IconType { get; set; }
    parameters: []
    return:
      type: TradingPlatform.BusinessLayer.IconType
    content.vb: Public Property IconType As IconType
  overload: TradingPlatform.BusinessLayer.GroupActionInfo.IconType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.GroupActionInfo.Tag
  commentId: P:TradingPlatform.BusinessLayer.GroupActionInfo.Tag
  id: Tag
  parent: TradingPlatform.BusinessLayer.GroupActionInfo
  langs:
  - csharp
  - vb
  name: Tag
  nameWithType: GroupActionInfo.Tag
  fullName: TradingPlatform.BusinessLayer.GroupActionInfo.Tag
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Settings/Groups/GroupActionInfo.cs
    id: Tag
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Settings/Groups/GroupActionInfo.cs
    startLine: 12
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public object Tag { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Property Tag As Object
  overload: TradingPlatform.BusinessLayer.GroupActionInfo.Tag*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.GroupActionInfo.#ctor(System.Action{System.Object})
  commentId: M:TradingPlatform.BusinessLayer.GroupActionInfo.#ctor(System.Action{System.Object})
  id: '#ctor(System.Action{System.Object})'
  parent: TradingPlatform.BusinessLayer.GroupActionInfo
  langs:
  - csharp
  - vb
  name: GroupActionInfo(Action<Object>)
  nameWithType: GroupActionInfo.GroupActionInfo(Action<Object>)
  fullName: TradingPlatform.BusinessLayer.GroupActionInfo.GroupActionInfo(System.Action<System.Object>)
  type: Constructor
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Settings/Groups/GroupActionInfo.cs
    id: .ctor
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Settings/Groups/GroupActionInfo.cs
    startLine: 14
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public GroupActionInfo(Action<object> action)
    parameters:
    - id: action
      type: System.Action{System.Object}
    content.vb: Public Sub New(action As Action(Of Object))
  overload: TradingPlatform.BusinessLayer.GroupActionInfo.#ctor*
  nameWithType.vb: GroupActionInfo.GroupActionInfo(Action(Of Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TradingPlatform.BusinessLayer.GroupActionInfo.GroupActionInfo(System.Action(Of System.Object))
  name.vb: GroupActionInfo(Action(Of Object))
- uid: TradingPlatform.BusinessLayer.GroupActionInfo.NeedActionConfirmation
  commentId: P:TradingPlatform.BusinessLayer.GroupActionInfo.NeedActionConfirmation
  id: NeedActionConfirmation
  parent: TradingPlatform.BusinessLayer.GroupActionInfo
  langs:
  - csharp
  - vb
  name: NeedActionConfirmation
  nameWithType: GroupActionInfo.NeedActionConfirmation
  fullName: TradingPlatform.BusinessLayer.GroupActionInfo.NeedActionConfirmation
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Settings/Groups/GroupActionInfo.cs
    id: NeedActionConfirmation
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Settings/Groups/GroupActionInfo.cs
    startLine: 15
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public bool NeedActionConfirmation { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property NeedActionConfirmation As Boolean
  overload: TradingPlatform.BusinessLayer.GroupActionInfo.NeedActionConfirmation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.GroupActionInfo.ConfirmationText
  commentId: P:TradingPlatform.BusinessLayer.GroupActionInfo.ConfirmationText
  id: ConfirmationText
  parent: TradingPlatform.BusinessLayer.GroupActionInfo
  langs:
  - csharp
  - vb
  name: ConfirmationText
  nameWithType: GroupActionInfo.ConfirmationText
  fullName: TradingPlatform.BusinessLayer.GroupActionInfo.ConfirmationText
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Settings/Groups/GroupActionInfo.cs
    id: ConfirmationText
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Settings/Groups/GroupActionInfo.cs
    startLine: 16
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public string ConfirmationText { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ConfirmationText As String
  overload: TradingPlatform.BusinessLayer.GroupActionInfo.ConfirmationText*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.GroupActionInfo.Marker
  commentId: P:TradingPlatform.BusinessLayer.GroupActionInfo.Marker
  id: Marker
  parent: TradingPlatform.BusinessLayer.GroupActionInfo
  langs:
  - csharp
  - vb
  name: Marker
  nameWithType: GroupActionInfo.Marker
  fullName: TradingPlatform.BusinessLayer.GroupActionInfo.Marker
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/Settings/Groups/GroupActionInfo.cs
    id: Marker
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/Settings/Groups/GroupActionInfo.cs
    startLine: 17
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public string Marker { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Marker As String
  overload: TradingPlatform.BusinessLayer.GroupActionInfo.Marker*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: TradingPlatform.BusinessLayer
  commentId: N:TradingPlatform.BusinessLayer
  name: TradingPlatform.BusinessLayer
  nameWithType: TradingPlatform.BusinessLayer
  fullName: TradingPlatform.BusinessLayer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TradingPlatform.BusinessLayer.GroupActionInfo.Action*
  commentId: Overload:TradingPlatform.BusinessLayer.GroupActionInfo.Action
  name: Action
  nameWithType: GroupActionInfo.Action
  fullName: TradingPlatform.BusinessLayer.GroupActionInfo.Action
- uid: System.Action{System.Object}
  commentId: T:System.Action{System.Object}
  parent: System
  definition: System.Action`1
  name: Action<Object>
  nameWithType: Action<Object>
  fullName: System.Action<System.Object>
  nameWithType.vb: Action(Of Object)
  fullName.vb: System.Action(Of System.Object)
  name.vb: Action(Of Object)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TradingPlatform.BusinessLayer.GroupActionInfo.IconType*
  commentId: Overload:TradingPlatform.BusinessLayer.GroupActionInfo.IconType
  name: IconType
  nameWithType: GroupActionInfo.IconType
  fullName: TradingPlatform.BusinessLayer.GroupActionInfo.IconType
- uid: TradingPlatform.BusinessLayer.IconType
  commentId: T:TradingPlatform.BusinessLayer.IconType
  parent: TradingPlatform.BusinessLayer
  name: IconType
  nameWithType: IconType
  fullName: TradingPlatform.BusinessLayer.IconType
- uid: TradingPlatform.BusinessLayer.GroupActionInfo.Tag*
  commentId: Overload:TradingPlatform.BusinessLayer.GroupActionInfo.Tag
  name: Tag
  nameWithType: GroupActionInfo.Tag
  fullName: TradingPlatform.BusinessLayer.GroupActionInfo.Tag
- uid: TradingPlatform.BusinessLayer.GroupActionInfo.#ctor*
  commentId: Overload:TradingPlatform.BusinessLayer.GroupActionInfo.#ctor
  name: GroupActionInfo
  nameWithType: GroupActionInfo.GroupActionInfo
  fullName: TradingPlatform.BusinessLayer.GroupActionInfo.GroupActionInfo
- uid: TradingPlatform.BusinessLayer.GroupActionInfo.NeedActionConfirmation*
  commentId: Overload:TradingPlatform.BusinessLayer.GroupActionInfo.NeedActionConfirmation
  name: NeedActionConfirmation
  nameWithType: GroupActionInfo.NeedActionConfirmation
  fullName: TradingPlatform.BusinessLayer.GroupActionInfo.NeedActionConfirmation
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TradingPlatform.BusinessLayer.GroupActionInfo.ConfirmationText*
  commentId: Overload:TradingPlatform.BusinessLayer.GroupActionInfo.ConfirmationText
  name: ConfirmationText
  nameWithType: GroupActionInfo.ConfirmationText
  fullName: TradingPlatform.BusinessLayer.GroupActionInfo.ConfirmationText
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TradingPlatform.BusinessLayer.GroupActionInfo.Marker*
  commentId: Overload:TradingPlatform.BusinessLayer.GroupActionInfo.Marker
  name: Marker
  nameWithType: GroupActionInfo.Marker
  fullName: TradingPlatform.BusinessLayer.GroupActionInfo.Marker
