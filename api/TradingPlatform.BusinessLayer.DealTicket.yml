### YamlMime:ManagedReference
items:
- uid: TradingPlatform.BusinessLayer.DealTicket
  commentId: T:TradingPlatform.BusinessLayer.DealTicket
  id: DealTicket
  parent: TradingPlatform.BusinessLayer
  children:
  - TradingPlatform.BusinessLayer.DealTicket.#ctor
  - TradingPlatform.BusinessLayer.DealTicket.ConnectionId
  - TradingPlatform.BusinessLayer.DealTicket.CreationTime
  - TradingPlatform.BusinessLayer.DealTicket.Description
  - TradingPlatform.BusinessLayer.DealTicket.Event
  - TradingPlatform.BusinessLayer.DealTicket.Header
  - TradingPlatform.BusinessLayer.DealTicket.Items
  - TradingPlatform.BusinessLayer.DealTicket.Message
  - TradingPlatform.BusinessLayer.DealTicket.Priority
  - TradingPlatform.BusinessLayer.DealTicket.State
  - TradingPlatform.BusinessLayer.DealTicket.TradingType
  - TradingPlatform.BusinessLayer.DealTicket.Type
  langs:
  - csharp
  - vb
  name: DealTicket
  nameWithType: DealTicket
  fullName: TradingPlatform.BusinessLayer.DealTicket
  type: Class
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/DealTicket.cs
    id: DealTicket
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/DealTicket.cs
    startLine: 11
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: >-
      [DataContract(Name = "DealTicket", Namespace = "TradingPlatform")]

      public class DealTicket : IConnectionBindedObject, ILoggable
    content.vb: >-
      <DataContract(Name:="DealTicket", Namespace:="TradingPlatform")>

      Public Class DealTicket
          Implements IConnectionBindedObject, ILoggable
  inheritance:
  - System.Object
  implements:
  - TradingPlatform.BusinessLayer.ILoggable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: DealTicket
    - name: Namespace
      type: System.String
      value: TradingPlatform
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TradingPlatform.BusinessLayer.DealTicket.ConnectionId
  commentId: P:TradingPlatform.BusinessLayer.DealTicket.ConnectionId
  id: ConnectionId
  parent: TradingPlatform.BusinessLayer.DealTicket
  langs:
  - csharp
  - vb
  name: ConnectionId
  nameWithType: DealTicket.ConnectionId
  fullName: TradingPlatform.BusinessLayer.DealTicket.ConnectionId
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/DealTicket.cs
    id: ConnectionId
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/DealTicket.cs
    startLine: 14
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public string ConnectionId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ConnectionId As String
  overload: TradingPlatform.BusinessLayer.DealTicket.ConnectionId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.DealTicket.Header
  commentId: P:TradingPlatform.BusinessLayer.DealTicket.Header
  id: Header
  parent: TradingPlatform.BusinessLayer.DealTicket
  langs:
  - csharp
  - vb
  name: Header
  nameWithType: DealTicket.Header
  fullName: TradingPlatform.BusinessLayer.DealTicket.Header
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/DealTicket.cs
    id: Header
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/DealTicket.cs
    startLine: 16
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: >-
      [DataMember(Name = "Header")]

      public string Header { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember(Name:="Header")>

      Public ReadOnly Property Header As String
  overload: TradingPlatform.BusinessLayer.DealTicket.Header*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Header
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.DealTicket.Description
  commentId: P:TradingPlatform.BusinessLayer.DealTicket.Description
  id: Description
  parent: TradingPlatform.BusinessLayer.DealTicket
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: DealTicket.Description
  fullName: TradingPlatform.BusinessLayer.DealTicket.Description
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/DealTicket.cs
    id: Description
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/DealTicket.cs
    startLine: 19
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: >-
      [DataMember(Name = "Description")]

      public string Description { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember(Name:="Description")>

      Public ReadOnly Property Description As String
  overload: TradingPlatform.BusinessLayer.DealTicket.Description*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Description
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.DealTicket.Type
  commentId: P:TradingPlatform.BusinessLayer.DealTicket.Type
  id: Type
  parent: TradingPlatform.BusinessLayer.DealTicket
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: DealTicket.Type
  fullName: TradingPlatform.BusinessLayer.DealTicket.Type
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/DealTicket.cs
    id: Type
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/DealTicket.cs
    startLine: 22
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: >-
      [DataMember(Name = "DealTicketType")]

      public DealTicketType Type { get; }
    parameters: []
    return:
      type: TradingPlatform.BusinessLayer.DealTicketType
    content.vb: >-
      <DataMember(Name:="DealTicketType")>

      Public ReadOnly Property Type As DealTicketType
  overload: TradingPlatform.BusinessLayer.DealTicket.Type*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: DealTicketType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.DealTicket.TradingType
  commentId: P:TradingPlatform.BusinessLayer.DealTicket.TradingType
  id: TradingType
  parent: TradingPlatform.BusinessLayer.DealTicket
  langs:
  - csharp
  - vb
  name: TradingType
  nameWithType: DealTicket.TradingType
  fullName: TradingPlatform.BusinessLayer.DealTicket.TradingType
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/DealTicket.cs
    id: TradingType
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/DealTicket.cs
    startLine: 28
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  summary: "\nНужно только для иконок\n"
  example: []
  syntax:
    content: public DealTicketTradingType TradingType { get; }
    parameters: []
    return:
      type: TradingPlatform.BusinessLayer.DealTicketTradingType
    content.vb: Public ReadOnly Property TradingType As DealTicketTradingType
  overload: TradingPlatform.BusinessLayer.DealTicket.TradingType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.DealTicket.Priority
  commentId: P:TradingPlatform.BusinessLayer.DealTicket.Priority
  id: Priority
  parent: TradingPlatform.BusinessLayer.DealTicket
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: DealTicket.Priority
  fullName: TradingPlatform.BusinessLayer.DealTicket.Priority
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/DealTicket.cs
    id: Priority
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/DealTicket.cs
    startLine: 30
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: >-
      [DataMember(Name = "DealTicketPriority")]

      public DealTicketPriority Priority { get; }
    parameters: []
    return:
      type: TradingPlatform.BusinessLayer.DealTicketPriority
    content.vb: >-
      <DataMember(Name:="DealTicketPriority")>

      Public ReadOnly Property Priority As DealTicketPriority
  overload: TradingPlatform.BusinessLayer.DealTicket.Priority*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: DealTicketPriority
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.DealTicket.Items
  commentId: P:TradingPlatform.BusinessLayer.DealTicket.Items
  id: Items
  parent: TradingPlatform.BusinessLayer.DealTicket
  langs:
  - csharp
  - vb
  name: Items
  nameWithType: DealTicket.Items
  fullName: TradingPlatform.BusinessLayer.DealTicket.Items
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/DealTicket.cs
    id: Items
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/DealTicket.cs
    startLine: 33
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: >-
      [DataMember(Name = "Items")]

      public List<DealTicketItem> Items { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{TradingPlatform.BusinessLayer.DealTicketItem}
    content.vb: >-
      <DataMember(Name:="Items")>

      Public ReadOnly Property Items As List(Of DealTicketItem)
  overload: TradingPlatform.BusinessLayer.DealTicket.Items*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Items
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.DealTicket.State
  commentId: P:TradingPlatform.BusinessLayer.DealTicket.State
  id: State
  parent: TradingPlatform.BusinessLayer.DealTicket
  langs:
  - csharp
  - vb
  name: State
  nameWithType: DealTicket.State
  fullName: TradingPlatform.BusinessLayer.DealTicket.State
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/DealTicket.cs
    id: State
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/DealTicket.cs
    startLine: 36
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public DealTicketState State { get; set; }
    parameters: []
    return:
      type: TradingPlatform.BusinessLayer.DealTicketState
    content.vb: Public Property State As DealTicketState
  overload: TradingPlatform.BusinessLayer.DealTicket.State*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TradingPlatform.BusinessLayer.DealTicket.Event
  commentId: P:TradingPlatform.BusinessLayer.DealTicket.Event
  id: Event
  parent: TradingPlatform.BusinessLayer.DealTicket
  langs:
  - csharp
  - vb
  name: Event
  nameWithType: DealTicket.Event
  fullName: TradingPlatform.BusinessLayer.DealTicket.Event
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/DealTicket.cs
    id: Event
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/DealTicket.cs
    startLine: 39
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public string Event { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Event As String
  overload: TradingPlatform.BusinessLayer.DealTicket.Event*
  implements:
  - TradingPlatform.BusinessLayer.ILoggable.Event
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.DealTicket.Message
  commentId: P:TradingPlatform.BusinessLayer.DealTicket.Message
  id: Message
  parent: TradingPlatform.BusinessLayer.DealTicket
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: DealTicket.Message
  fullName: TradingPlatform.BusinessLayer.DealTicket.Message
  type: Property
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/DealTicket.cs
    id: Message
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/DealTicket.cs
    startLine: 41
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public string Message { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Message As String
  overload: TradingPlatform.BusinessLayer.DealTicket.Message*
  implements:
  - TradingPlatform.BusinessLayer.ILoggable.Message
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.DealTicket.CreationTime
  commentId: F:TradingPlatform.BusinessLayer.DealTicket.CreationTime
  id: CreationTime
  parent: TradingPlatform.BusinessLayer.DealTicket
  langs:
  - csharp
  - vb
  name: CreationTime
  nameWithType: DealTicket.CreationTime
  fullName: TradingPlatform.BusinessLayer.DealTicket.CreationTime
  type: Field
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/DealTicket.cs
    id: CreationTime
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/DealTicket.cs
    startLine: 60
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public readonly DateTime CreationTime
    return:
      type: System.DateTime
    content.vb: Public ReadOnly CreationTime As Date
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TradingPlatform.BusinessLayer.DealTicket.#ctor
  commentId: M:TradingPlatform.BusinessLayer.DealTicket.#ctor
  id: '#ctor'
  parent: TradingPlatform.BusinessLayer.DealTicket
  langs:
  - csharp
  - vb
  name: DealTicket()
  nameWithType: DealTicket.DealTicket()
  fullName: TradingPlatform.BusinessLayer.DealTicket.DealTicket()
  type: Constructor
  source:
    remote:
      path: C:/Quantower/development/BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/DealTicket.cs
    id: .ctor
    path: ../BusinessLayer/TradingPlatform.BusinessLayer/BusinessObjects/Utils/DealTicket.cs
    startLine: 62
  assemblies:
  - TradingPlatform.BusinessLayer
  namespace: TradingPlatform.BusinessLayer
  syntax:
    content: public DealTicket()
    content.vb: Public Sub New
  overload: TradingPlatform.BusinessLayer.DealTicket.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TradingPlatform.BusinessLayer
  commentId: N:TradingPlatform.BusinessLayer
  name: TradingPlatform.BusinessLayer
  nameWithType: TradingPlatform.BusinessLayer
  fullName: TradingPlatform.BusinessLayer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TradingPlatform.BusinessLayer.ILoggable
  commentId: T:TradingPlatform.BusinessLayer.ILoggable
  parent: TradingPlatform.BusinessLayer
  name: ILoggable
  nameWithType: ILoggable
  fullName: TradingPlatform.BusinessLayer.ILoggable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TradingPlatform.BusinessLayer.DealTicket.ConnectionId*
  commentId: Overload:TradingPlatform.BusinessLayer.DealTicket.ConnectionId
  name: ConnectionId
  nameWithType: DealTicket.ConnectionId
  fullName: TradingPlatform.BusinessLayer.DealTicket.ConnectionId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TradingPlatform.BusinessLayer.DealTicket.Header*
  commentId: Overload:TradingPlatform.BusinessLayer.DealTicket.Header
  name: Header
  nameWithType: DealTicket.Header
  fullName: TradingPlatform.BusinessLayer.DealTicket.Header
- uid: TradingPlatform.BusinessLayer.DealTicket.Description*
  commentId: Overload:TradingPlatform.BusinessLayer.DealTicket.Description
  name: Description
  nameWithType: DealTicket.Description
  fullName: TradingPlatform.BusinessLayer.DealTicket.Description
- uid: TradingPlatform.BusinessLayer.DealTicket.Type*
  commentId: Overload:TradingPlatform.BusinessLayer.DealTicket.Type
  name: Type
  nameWithType: DealTicket.Type
  fullName: TradingPlatform.BusinessLayer.DealTicket.Type
- uid: TradingPlatform.BusinessLayer.DealTicketType
  commentId: T:TradingPlatform.BusinessLayer.DealTicketType
  parent: TradingPlatform.BusinessLayer
  name: DealTicketType
  nameWithType: DealTicketType
  fullName: TradingPlatform.BusinessLayer.DealTicketType
- uid: TradingPlatform.BusinessLayer.DealTicket.TradingType*
  commentId: Overload:TradingPlatform.BusinessLayer.DealTicket.TradingType
  name: TradingType
  nameWithType: DealTicket.TradingType
  fullName: TradingPlatform.BusinessLayer.DealTicket.TradingType
- uid: TradingPlatform.BusinessLayer.DealTicketTradingType
  commentId: T:TradingPlatform.BusinessLayer.DealTicketTradingType
  parent: TradingPlatform.BusinessLayer
  name: DealTicketTradingType
  nameWithType: DealTicketTradingType
  fullName: TradingPlatform.BusinessLayer.DealTicketTradingType
- uid: TradingPlatform.BusinessLayer.DealTicket.Priority*
  commentId: Overload:TradingPlatform.BusinessLayer.DealTicket.Priority
  name: Priority
  nameWithType: DealTicket.Priority
  fullName: TradingPlatform.BusinessLayer.DealTicket.Priority
- uid: TradingPlatform.BusinessLayer.DealTicketPriority
  commentId: T:TradingPlatform.BusinessLayer.DealTicketPriority
  parent: TradingPlatform.BusinessLayer
  name: DealTicketPriority
  nameWithType: DealTicketPriority
  fullName: TradingPlatform.BusinessLayer.DealTicketPriority
- uid: TradingPlatform.BusinessLayer.DealTicket.Items*
  commentId: Overload:TradingPlatform.BusinessLayer.DealTicket.Items
  name: Items
  nameWithType: DealTicket.Items
  fullName: TradingPlatform.BusinessLayer.DealTicket.Items
- uid: System.Collections.Generic.List{TradingPlatform.BusinessLayer.DealTicketItem}
  commentId: T:System.Collections.Generic.List{TradingPlatform.BusinessLayer.DealTicketItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<DealTicketItem>
  nameWithType: List<DealTicketItem>
  fullName: System.Collections.Generic.List<TradingPlatform.BusinessLayer.DealTicketItem>
  nameWithType.vb: List(Of DealTicketItem)
  fullName.vb: System.Collections.Generic.List(Of TradingPlatform.BusinessLayer.DealTicketItem)
  name.vb: List(Of DealTicketItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TradingPlatform.BusinessLayer.DealTicketItem
    name: DealTicketItem
    nameWithType: DealTicketItem
    fullName: TradingPlatform.BusinessLayer.DealTicketItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TradingPlatform.BusinessLayer.DealTicketItem
    name: DealTicketItem
    nameWithType: DealTicketItem
    fullName: TradingPlatform.BusinessLayer.DealTicketItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TradingPlatform.BusinessLayer.DealTicket.State*
  commentId: Overload:TradingPlatform.BusinessLayer.DealTicket.State
  name: State
  nameWithType: DealTicket.State
  fullName: TradingPlatform.BusinessLayer.DealTicket.State
- uid: TradingPlatform.BusinessLayer.DealTicketState
  commentId: T:TradingPlatform.BusinessLayer.DealTicketState
  parent: TradingPlatform.BusinessLayer
  name: DealTicketState
  nameWithType: DealTicketState
  fullName: TradingPlatform.BusinessLayer.DealTicketState
- uid: TradingPlatform.BusinessLayer.DealTicket.Event*
  commentId: Overload:TradingPlatform.BusinessLayer.DealTicket.Event
  name: Event
  nameWithType: DealTicket.Event
  fullName: TradingPlatform.BusinessLayer.DealTicket.Event
- uid: TradingPlatform.BusinessLayer.ILoggable.Event
  commentId: P:TradingPlatform.BusinessLayer.ILoggable.Event
  parent: TradingPlatform.BusinessLayer.ILoggable
  name: Event
  nameWithType: ILoggable.Event
  fullName: TradingPlatform.BusinessLayer.ILoggable.Event
- uid: TradingPlatform.BusinessLayer.DealTicket.Message*
  commentId: Overload:TradingPlatform.BusinessLayer.DealTicket.Message
  name: Message
  nameWithType: DealTicket.Message
  fullName: TradingPlatform.BusinessLayer.DealTicket.Message
- uid: TradingPlatform.BusinessLayer.ILoggable.Message
  commentId: P:TradingPlatform.BusinessLayer.ILoggable.Message
  parent: TradingPlatform.BusinessLayer.ILoggable
  name: Message
  nameWithType: ILoggable.Message
  fullName: TradingPlatform.BusinessLayer.ILoggable.Message
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: TradingPlatform.BusinessLayer.DealTicket.#ctor*
  commentId: Overload:TradingPlatform.BusinessLayer.DealTicket.#ctor
  name: DealTicket
  nameWithType: DealTicket.DealTicket
  fullName: TradingPlatform.BusinessLayer.DealTicket.DealTicket
